[
  {
    "name": "aws_accessanalyzer_analyzer",
    "type": "resource",
    "description": "subcategory: \"IAM Access Analyzer\" layout: \"aws\" page_title: \"AWS: aws_accessanalyzer_analyzer\"",
    "example": "resource \"aws_accessanalyzer_analyzer\" \"example\" {\n  analyzer_name = \"example\"\n}\n```\n\n### Organization Analyzer\n\nresource \"aws_accessanalyzer_analyzer\" \"example\" {\n  analyzer_name = \"example\"\n  type          = \"ORGANIZATION_UNUSED_ACCESS\"\n\n  configuration {\n    unused_access {\n      unused_access_age = 180\n      analysis_rule {\n        exclusion {\n          account_ids = [\n            \"123456789012\",\n            \"234567890123\",\n          ]\n        }\n        exclusion {\n          resource_tags = [\n            { key1 = \"value1\" },\n            { key2 = \"value2\" },\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\n### Account Internal Access Analyzer by Resource Types\n\nresource \"aws_accessanalyzer_analyzer\" \"test\" {\n  analyzer_name = \"example\"\n  type          = \"ORGANIZATION_INTERNAL_ACCESS\"\n\n  configuration {\n    internal_access {\n      analysis_rule {\n        inclusion {\n          account_ids   = [\"123456789012\"]\n          resource_arns = [\"arn:aws:s3:::my-example-bucket\"]\n        }\n      }\n    }\n  }\n}",
    "full_text": "---\nsubcategory: \"IAM Access Analyzer\"\nlayout: \"aws\"\npage_title: \"AWS: aws_accessanalyzer_analyzer\"\ndescription: |-\n  Manages an Access Analyzer Analyzer\n---\n\n# Resource: aws_accessanalyzer_analyzer\n\nManages an Access Analyzer Analyzer. More information can be found in the [Access Analyzer User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html).\n\n## Example Usage\n\n### Account Analyzer\n\n```terraform\nresource \"aws_accessanalyzer_analyzer\" \"example\" {\n  analyzer_name = \"example\"\n}\n```\n\n### Organization Analyzer\n\n```terraform\nresource \"aws_organizations_organization\" \"example\" {\n  aws_service_access_principals = [\"access-analyzer.amazonaws.com\"]\n}\n\nresource \"aws_accessanalyzer_analyzer\" \"example\" {\n  depends_on = [aws_organizations_organization.example]\n\n  analyzer_name = \"example\"\n  type          = \"ORGANIZATION\"\n}\n```\n\n### Organization Unused Access Analyzer With Analysis Rule\n\n```terraform\nresource \"aws_accessanalyzer_analyzer\" \"example\" {\n  analyzer_name = \"example\"\n  type          = \"ORGANIZATION_UNUSED_ACCESS\"\n\n  configuration {\n    unused_access {\n      unused_access_age = 180\n      analysis_rule {\n        exclusion {\n          account_ids = [\n            \"123456789012\",\n            \"234567890123\",\n          ]\n        }\n        exclusion {\n          resource_tags = [\n            { key1 = \"value1\" },\n            { key2 = \"value2\" },\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\n### Account Internal Access Analyzer by Resource Types\n\n```terraform\nresource \"aws_accessanalyzer_analyzer\" \"test\" {\n  analyzer_name = \"example\"\n  type          = \"ORGANIZATION_INTERNAL_ACCESS\"\n\n  configuration {\n    internal_access {\n      analysis_rule {\n        inclusion {\n          resource_types = [\n            \"AWS::S3::Bucket\",\n            \"AWS::RDS::DBSnapshot\",\n            \"AWS::DynamoDB::Table\",\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\n### Organization Internal Access Analyzer by Account ID and Resource ARN\n\n```terraform\nresource \"aws_accessanalyzer_analyzer\" \"test\" {\n  analyzer_name = \"example\"\n  type          = \"ORGANIZATION_INTERNAL_ACCESS\"\n\n  configuration {\n    internal_access {\n      analysis_rule {\n        inclusion {\n          account_ids   = [\"123456789012\"]\n          resource_arns = [\"arn:aws:s3:::my-example-bucket\"]\n        }\n      }\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `analyzer_name` - (Required) Name of the Analyzer.\n\nThe following arguments are optional:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `configuration` - (Optional) A block that specifies the configuration of the analyzer. See [`configuration` Block](#configuration-block) for details.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `type` - (Optional) Type that represents the zone of trust or scope for the analyzer. Valid values are `ACCOUNT`, `ACCOUNT_INTERNAL_ACCESS`, `ACCOUNT_UNUSED_ACCESS`, `ORGANIZATION`, `ORGANIZATION_INTERNAL_ACCESS`, `ORGANIZATION_UNUSED_ACCESS`. Defaults to `ACCOUNT`.\n\n### `configuration` Block\n\nThe `configuration` configuration block supports the following arguments:\n\n* `internal_access` - (Optional) Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates access within your AWS environment. See [`internal_access` Block](#internal_access-block) for details.\n* `unused_access` - (Optional) Specifies the configuration of an unused access analyzer for an AWS organization or account. See [`unused_access` Block](#unused_access-block) for details.\n\n### `internal_access` Block\n\nThe `internal_access` configuration block supports the following arguments:\n\n* `analysis_rule` - (Optional) Information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed. See [`analysis_rule` Block for Internal Access Analyzer](#analysis_rule-block-for-internal-access-analyzer) for details.\n\n### `analysis_rule` Block for Internal Access Analyzer\n\nThe `analysis_rule` configuration block for internal access analyzer supports the following arguments:\n\n* `inclusion` - (Optional) List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See [`inclusion` Block](#inclusion-block) for details.\n\n### `inclusion` Block\n\nThe `inclusion` configuration block supports the following arguments:\n\n* `account_",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/accessanalyzer_analyzer"
  },
  {
    "name": "aws_accessanalyzer_archive_rule",
    "type": "resource",
    "description": "subcategory: \"IAM Access Analyzer\" layout: \"aws\" page_title: \"AWS: aws_accessanalyzer_archive_rule\"",
    "example": "resource \"aws_accessanalyzer_archive_rule\" \"example\" {\n  analyzer_name = \"example-analyzer\"\n  rule_name     = \"example-rule\"\n\n  filter {\n    criteria = \"condition.aws:UserId\"\n    eq       = [\"userid\"]\n  }\n\n  filter {\n    criteria = \"error\"\n    exists   = true\n  }\n\n  filter {\n    criteria = \"isPublic\"\n    eq       = [\"false\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `analyzer_name` - (Required) Analyzer name.\n* `filter` - (Required) Filter criteria for the archive rule. See [Filter](#filter) for more details.\n* `rule_name` - (Required) Rule name.\n\n### Filter\n\n**Note** One comparator must be included with each filter.\n\n* `criteria` - (Required) Filter criteria.\n* `contains` - (Optional) Contains comparator.\n* `eq` - (Optional) Equals comparator.\n* `exists` - (Optional) Boolean comparator.\n* `neq` - (Optional) Not Equals comparator.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Resource ID in the format: `analyzer_name/rule_name`.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AccessAnalyzer ArchiveRule using the `analyzer_name/rule_name`. For example:\n",
    "full_text": "---\nsubcategory: \"IAM Access Analyzer\"\nlayout: \"aws\"\npage_title: \"AWS: aws_accessanalyzer_archive_rule\"\ndescription: |-\n  Terraform resource for managing an AWS AccessAnalyzer Archive Rule.\n---\n\n# Resource: aws_accessanalyzer_archive_rule\n\nTerraform resource for managing an AWS AccessAnalyzer Archive Rule.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nresource \"aws_accessanalyzer_archive_rule\" \"example\" {\n  analyzer_name = \"example-analyzer\"\n  rule_name     = \"example-rule\"\n\n  filter {\n    criteria = \"condition.aws:UserId\"\n    eq       = [\"userid\"]\n  }\n\n  filter {\n    criteria = \"error\"\n    exists   = true\n  }\n\n  filter {\n    criteria = \"isPublic\"\n    eq       = [\"false\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `analyzer_name` - (Required) Analyzer name.\n* `filter` - (Required) Filter criteria for the archive rule. See [Filter](#filter) for more details.\n* `rule_name` - (Required) Rule name.\n\n### Filter\n\n**Note** One comparator must be included with each filter.\n\n* `criteria` - (Required) Filter criteria.\n* `contains` - (Optional) Contains comparator.\n* `eq` - (Optional) Equals comparator.\n* `exists` - (Optional) Boolean comparator.\n* `neq` - (Optional) Not Equals comparator.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Resource ID in the format: `analyzer_name/rule_name`.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AccessAnalyzer ArchiveRule using the `analyzer_name/rule_name`. For example:\n\n```terraform\nimport {\n  to = aws_accessanalyzer_archive_rule.example\n  id = \"example-analyzer/example-rule\"\n}\n```\n\nUsing `terraform import`, import AccessAnalyzer ArchiveRule using the `analyzer_name/rule_name`. For example:\n\n```console\n% terraform import aws_accessanalyzer_archive_rule.example example-analyzer/example-rule\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/accessanalyzer_archive_rule"
  },
  {
    "name": "aws_account_alternate_contact",
    "type": "resource",
    "description": "subcategory: \"Account Management\" layout: \"aws\" page_title: \"AWS: aws_account_alternate_contact\"",
    "example": "resource \"aws_account_alternate_contact\" \"operations\" {\n\n  alternate_contact_type = \"OPERATIONS\"\n\n  name          = \"Example\"\n  title         = \"Example\"\n  email_address = \"test@example.com\"\n  phone_number  = \"+1234567890\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) ID of the target account when managing member accounts. Will manage current user's account by default if omitted.\n* `alternate_contact_type` - (Required) Type of the alternate contact. Allowed values are: `BILLING`, `OPERATIONS`, `SECURITY`.\n* `email_address` - (Required) An email address for the alternate contact.\n* `name` - (Required) Name of the alternate contact.\n* `phone_number` - (Required) Phone number for the alternate contact.\n* `title` - (Required) Title for the alternate contact.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `5m`)\n- `update` - (Default `5m`)\n- `delete` - (Default `5m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the Alternate Contact for the current or another account using the `alternate_contact_type`. For example:\n\nImport the Alternate Contact for the current account:\n\nimport {\n  to = aws_account_alternate_contact.operations\n  id = \"1234567890/OPERATIONS\"\n}\n```\n\n**Using `terraform import` to import** the Alternate Contact for the current or another account using the `alternate_contact_type`. For example:\n\nImport the Alternate Contact for the current account:\n",
    "full_text": "---\nsubcategory: \"Account Management\"\nlayout: \"aws\"\npage_title: \"AWS: aws_account_alternate_contact\"\ndescription: |-\n  Manages the specified alternate contact attached to an AWS Account.\n---\n\n# Resource: aws_account_alternate_contact\n\nManages the specified alternate contact attached to an AWS Account.\n\n## Example Usage\n\n```terraform\nresource \"aws_account_alternate_contact\" \"operations\" {\n\n  alternate_contact_type = \"OPERATIONS\"\n\n  name          = \"Example\"\n  title         = \"Example\"\n  email_address = \"test@example.com\"\n  phone_number  = \"+1234567890\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) ID of the target account when managing member accounts. Will manage current user's account by default if omitted.\n* `alternate_contact_type` - (Required) Type of the alternate contact. Allowed values are: `BILLING`, `OPERATIONS`, `SECURITY`.\n* `email_address` - (Required) An email address for the alternate contact.\n* `name` - (Required) Name of the alternate contact.\n* `phone_number` - (Required) Phone number for the alternate contact.\n* `title` - (Required) Title for the alternate contact.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `5m`)\n- `update` - (Default `5m`)\n- `delete` - (Default `5m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the Alternate Contact for the current or another account using the `alternate_contact_type`. For example:\n\nImport the Alternate Contact for the current account:\n\n```terraform\nimport {\n  to = aws_account_alternate_contact.operations\n  id = \"OPERATIONS\"\n}\n```\n\nImport the Alternate Contact for another account using the `account_id` and `alternate_contact_type` separated by a forward slash (`/`):\n\n```terraform\nimport {\n  to = aws_account_alternate_contact.operations\n  id = \"1234567890/OPERATIONS\"\n}\n```\n\n**Using `terraform import` to import** the Alternate Contact for the current or another account using the `alternate_contact_type`. For example:\n\nImport the Alternate Contact for the current account:\n\n```console\n% terraform import aws_account_alternate_contact.operations OPERATIONS\n```\n\nImport the Alternate Contact for another account using the `account_id` and `alternate_contact_type` separated by a forward slash (`/`):\n\n```console\n% terraform import aws_account_alternate_contact.operations 1234567890/OPERATIONS\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/account_alternate_contact"
  },
  {
    "name": "aws_account_primary_contact",
    "type": "resource",
    "description": "subcategory: \"Account Management\" layout: \"aws\" page_title: \"AWS: aws_account_primary_contact\"",
    "example": "resource \"aws_account_primary_contact\" \"test\" {\n  address_line_1     = \"123 Any Street\"\n  city               = \"Seattle\"\n  company_name       = \"Example Corp, Inc.\"\n  country_code       = \"US\"\n  district_or_county = \"King\"\n  full_name          = \"My Name\"\n  phone_number       = \"+64211111111\"\n  postal_code        = \"98101\"\n  state_or_region    = \"WA\"\n  website_url        = \"https://www.examplecorp.com\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.\n* `address_line_1` - (Required) The first line of the primary contact address.\n* `address_line_2` - (Optional) The second line of the primary contact address, if any.\n* `address_line_3` - (Optional) The third line of the primary contact address, if any.\n* `city` - (Required) The city of the primary contact address.\n* `company_name` - (Optional) The name of the company associated with the primary contact information, if any.\n* `country_code` - (Required) The ISO-3166 two-letter country code for the primary contact address.\n* `district_or_county` - (Optional) The district or county of the primary contact address, if any.\n* `full_name` - (Required) The full name of the primary contact address.\n* `phone_number` - (Required) The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.\n* `postal_code` - (Required) The postal code of the primary contact address.\n* `state_or_region` - (Optional) The state or region of the primary contact address. This field is required in selected countries.\n* `website_url` - (Optional) The URL of the website associated with the primary contact information, if any.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the Primary Contact using the `account_id`. For example:\n",
    "full_text": "---\nsubcategory: \"Account Management\"\nlayout: \"aws\"\npage_title: \"AWS: aws_account_primary_contact\"\ndescription: |-\n  Manages the specified primary contact information associated with an AWS Account.\n---\n\n# Resource: aws_account_primary_contact\n\nManages the specified primary contact information associated with an AWS Account.\n\n## Example Usage\n\n```terraform\nresource \"aws_account_primary_contact\" \"test\" {\n  address_line_1     = \"123 Any Street\"\n  city               = \"Seattle\"\n  company_name       = \"Example Corp, Inc.\"\n  country_code       = \"US\"\n  district_or_county = \"King\"\n  full_name          = \"My Name\"\n  phone_number       = \"+64211111111\"\n  postal_code        = \"98101\"\n  state_or_region    = \"WA\"\n  website_url        = \"https://www.examplecorp.com\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.\n* `address_line_1` - (Required) The first line of the primary contact address.\n* `address_line_2` - (Optional) The second line of the primary contact address, if any.\n* `address_line_3` - (Optional) The third line of the primary contact address, if any.\n* `city` - (Required) The city of the primary contact address.\n* `company_name` - (Optional) The name of the company associated with the primary contact information, if any.\n* `country_code` - (Required) The ISO-3166 two-letter country code for the primary contact address.\n* `district_or_county` - (Optional) The district or county of the primary contact address, if any.\n* `full_name` - (Required) The full name of the primary contact address.\n* `phone_number` - (Required) The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.\n* `postal_code` - (Required) The postal code of the primary contact address.\n* `state_or_region` - (Optional) The state or region of the primary contact address. This field is required in selected countries.\n* `website_url` - (Optional) The URL of the website associated with the primary contact information, if any.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the Primary Contact using the `account_id`. For example:\n\n```terraform\nimport {\n  to = aws_account_primary_contact.test\n  id = \"1234567890\"\n}\n```\n\nUsing `terraform import`, import the Primary Contact using the `account_id`. For example:\n\n```console\n% terraform import aws_account_primary_contact.test 1234567890\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/account_primary_contact"
  },
  {
    "name": "aws_account_region",
    "type": "resource",
    "description": "subcategory: \"Account Management\" layout: \"aws\" page_title: \"AWS: aws_account_region\"",
    "example": "resource \"aws_account_region\" \"example\" {\n  region_name = \"ap-southeast-3\"\n  enabled     = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) The ID of the target account when managing member accounts. Will manage current user's account by default if omitted. To use this parameter, the caller must be an identity in the organization's management account or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have all features enabled, and the organization must have trusted access enabled for the Account Management service, and optionally a delegated admin account assigned.\n* `enabled` - (Required) Whether the region is enabled.\n* `region_name` - (Required) The region name to manage.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `opt_status` - The region opt status.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `60m`)\n* `update` - (Default `60m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the account region using `region_name` or a comma separated `account_id` and `region_name`. For example:\n",
    "full_text": "---\nsubcategory: \"Account Management\"\nlayout: \"aws\"\npage_title: \"AWS: aws_account_region\"\ndescription: |-\n  Enable (Opt-In) or Disable (Opt-Out) a particular Region for an AWS account \n---\n\n# Resource: aws_account_region\n\nEnable (Opt-In) or Disable (Opt-Out) a particular Region for an AWS account.\n\n## Example Usage\n\n```terraform\nresource \"aws_account_region\" \"example\" {\n  region_name = \"ap-southeast-3\"\n  enabled     = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) The ID of the target account when managing member accounts. Will manage current user's account by default if omitted. To use this parameter, the caller must be an identity in the organization's management account or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have all features enabled, and the organization must have trusted access enabled for the Account Management service, and optionally a delegated admin account assigned.\n* `enabled` - (Required) Whether the region is enabled.\n* `region_name` - (Required) The region name to manage.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `opt_status` - The region opt status.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `60m`)\n* `update` - (Default `60m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the account region using `region_name` or a comma separated `account_id` and `region_name`. For example:\n\n```terraform\nimport {\n  to = aws_account_region.example\n  id = \"ap-southeast-3\"\n}\n```\n\nUsing `terraform import`. For example:\n\n```console\n% terraform import aws_account_region.example ap-southeast-3\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/account_region"
  },
  {
    "name": "aws_acm_certificate",
    "type": "resource",
    "description": "subcategory: \"ACM (Certificate Manager)\" layout: \"aws\" page_title: \"AWS: aws_acm_certificate\"",
    "example": "resource \"aws_acm_certificate\" \"cert\" {\n  domain_name       = \"example.com\"\n  validation_method = \"DNS\"\n\n  tags = {\n    Environment = \"test\"\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n```\n\n### Custom Domain Validation Options\n\nresource \"tls_private_key\" \"example\" {\n  algorithm = \"RSA\"\n}\n\nresource \"tls_self_signed_cert\" \"example\" {\n  key_algorithm   = \"RSA\"\n  private_key_pem = tls_private_key.example.private_key_pem\n\n  subject {\n    common_name  = \"example.com\"\n    organization = \"ACME Examples, Inc\"\n  }\n\n  validity_period_hours = 12\n\n  allowed_uses = [\n    \"key_encipherment\",\n    \"digital_signature\",\n    \"server_auth\",\n  ]\n}\n\nresource \"aws_acm_certificate\" \"cert\" {\n  private_key      = tls_private_key.example.private_key_pem\n  certificate_body = tls_self_signed_cert.example.cert_pem\n}\n```\n\n### Referencing domain_validation_options With for_each Based Resources\n\nSee the [`aws_acm_certificate_validation` resource](acm_certificate_validation.html) for a full example of performing DNS validation.\n\nimport {\n  to = aws_acm_certificate.example",
    "full_text": "---\nsubcategory: \"ACM (Certificate Manager)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acm_certificate\"\ndescription: |-\n  Requests and manages a certificate from Amazon Certificate Manager (ACM).\n---\n\n# Resource: aws_acm_certificate\n\nThe ACM certificate resource allows requesting and management of certificates\nfrom the Amazon Certificate Manager.\n\nACM certificates can be created in three ways:\nAmazon-issued, where AWS provides the certificate authority and automatically manages renewal;\nimported certificates, issued by another certificate authority;\nand private certificates, issued using an ACM Private Certificate Authority.\n\n## Amazon-Issued Certificates\n\nFor Amazon-issued certificates, this resource deals with requesting certificates and managing their attributes and life-cycle.\nThis resource does not deal with validation of a certificate but can provide inputs\nfor other resources implementing the validation.\nIt does not wait for a certificate to be issued.\nUse a [`aws_acm_certificate_validation`](acm_certificate_validation.html) resource for this.\n\nMost commonly, this resource is used together with [`aws_route53_record`](route53_record.html) and\n[`aws_acm_certificate_validation`](acm_certificate_validation.html) to request a DNS validated certificate,\ndeploy the required validation records and wait for validation to complete.\n\nDomain validation through email is also supported but should be avoided as it requires a manual step outside of Terraform.\n\nIt's recommended to specify `create_before_destroy = true` in a [lifecycle][1] block to replace a certificate\nwhich is currently in use (eg, by [`aws_lb_listener`](lb_listener.html)).\n\n## Certificates Imported from Other Certificate Authority\n\nImported certificates can be used to make certificates created with an external certificate authority available for AWS services.\n\nAs they are not managed by AWS, imported certificates are not eligible for automatic renewal.\nNew certificate materials can be supplied to an existing imported certificate to update it in place.\n\n## Private Certificates\n\nPrivate certificates are issued by an ACM Private Certificate Authority, which can be created using the resource type [`aws_acmpca_certificate_authority`](acmpca_certificate_authority.html).\n\nPrivate certificates created using this resource are eligible for managed renewal if they have been exported or associated with another AWS service.\nSee [managed renewal documentation](https://docs.aws.amazon.com/acm/latest/userguide/managed-renewal.html) for more information.\nBy default, a certificate is valid for 395 days and the managed renewal process will start 60 days before expiration.\nTo renew the certificate earlier than 60 days before expiration, configure `early_renewal_duration`.\n\n## Example Usage\n\n### Create Certificate\n\n```terraform\nresource \"aws_acm_certificate\" \"cert\" {\n  domain_name       = \"example.com\"\n  validation_method = \"DNS\"\n\n  tags = {\n    Environment = \"test\"\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n```\n\n### Custom Domain Validation Options\n\n```terraform\nresource \"aws_acm_certificate\" \"cert\" {\n  domain_name       = \"testing.example.com\"\n  validation_method = \"EMAIL\"\n\n  validation_option {\n    domain_name       = \"testing.example.com\"\n    validation_domain = \"example.com\"\n  }\n}\n```\n\n### Existing Certificate Body Import\n\n```terraform\nresource \"tls_private_key\" \"example\" {\n  algorithm = \"RSA\"\n}\n\nresource \"tls_self_signed_cert\" \"example\" {\n  key_algorithm   = \"RSA\"\n  private_key_pem = tls_private_key.example.private_key_pem\n\n  subject {\n    common_name  = \"example.com\"\n    organization = \"ACME Examples, Inc\"\n  }\n\n  validity_period_hours = 12\n\n  allowed_uses = [\n    \"key_encipherment\",\n    \"digital_signature\",\n    \"server_auth\",\n  ]\n}\n\nresource \"aws_acm_certificate\" \"cert\" {\n  private_key      = tls_private_key.example.private_key_pem\n  certificate_body = tls_self_signed_cert.example.cert_pem\n}\n```\n\n### Referencing domain_validation_options With for_each Based Resources\n\nSee the [`aws_acm_certificate_validation` resource](acm_certificate_validation.html) for a full example of performing DNS validation.\n\n```terraform\nresource \"aws_route53_record\" \"example\" {\n  for_each = {\n    for dvo in aws_acm_certificate.example.domain_validation_options : dvo.domain_name => {\n      name   = dvo.resource_record_name\n      record = dvo.resource_record_value\n      type   = dvo.resource_record_type\n    }\n  }\n\n  allow_overwrite = true\n  name            = each.value.name\n  records         = [each.value.record]\n  ttl             = 60\n  type            = each.value.type\n  zone_id         = aws_route53_zone.example.zone_id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configu",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate"
  },
  {
    "name": "aws_acm_certificate_validation",
    "type": "resource",
    "description": "subcategory: \"ACM (Certificate Manager)\" layout: \"aws\" page_title: \"AWS: aws_acm_certificate_validation\"",
    "example": "resource \"aws_acm_certificate\" \"example\" {\n  domain_name       = \"example.com\"\n  validation_method = \"DNS\"\n}\n\ndata \"aws_route53_zone\" \"example\" {\n  name         = \"example.com\"\n  private_zone = false\n}\n\nresource \"aws_route53_record\" \"example\" {\n  for_each = {\n    for dvo in aws_acm_certificate.example.domain_validation_options : dvo.domain_name => {\n      name   = dvo.resource_record_name\n      record = dvo.resource_record_value\n      type   = dvo.resource_record_type\n    }\n  }\n\n  allow_overwrite = true\n  name            = each.value.name\n  records         = [each.value.record]\n  ttl             = 60\n  type            = each.value.type\n  zone_id         = data.aws_route53_zone.example.zone_id\n}\n\nresource \"aws_acm_certificate_validation\" \"example\" {\n  certificate_arn         = aws_acm_certificate.example.arn\n  validation_record_fqdns = [for record in aws_route53_record.example : record.fqdn]\n}\n\nresource \"aws_lb_listener\" \"example\" {\n  # ... other configuration ...\n\n  certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n}\n```\n\n### Alternative Domains DNS Validation with Route 53\n\nresource \"aws_acm_certificate\" \"example\" {\n  domain_name       = \"example.com\"\n  validation_method = \"EMAIL\"\n}\n\nresource \"aws_acm_certificate_validation\" \"example\" {\n  certificate_arn = aws_acm_certificate.example.arn\n}\n```",
    "full_text": "---\nsubcategory: \"ACM (Certificate Manager)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acm_certificate_validation\"\ndescription: |-\n  Waits for and checks successful validation of an ACM certificate.\n---\n\n# Resource: aws_acm_certificate_validation\n\nThis resource represents a successful validation of an ACM certificate in concert\nwith other resources.\n\nMost commonly, this resource is used together with [`aws_route53_record`](route53_record.html) and\n[`aws_acm_certificate`](acm_certificate.html) to request a DNS validated certificate,\ndeploy the required validation records and wait for validation to complete.\n\n~> **WARNING:** This resource implements a part of the validation workflow. It does not represent a real-world entity in AWS, therefore changing or deleting this resource on its own has no immediate effect.\n\n## Example Usage\n\n### DNS Validation with Route 53\n\n```terraform\nresource \"aws_acm_certificate\" \"example\" {\n  domain_name       = \"example.com\"\n  validation_method = \"DNS\"\n}\n\ndata \"aws_route53_zone\" \"example\" {\n  name         = \"example.com\"\n  private_zone = false\n}\n\nresource \"aws_route53_record\" \"example\" {\n  for_each = {\n    for dvo in aws_acm_certificate.example.domain_validation_options : dvo.domain_name => {\n      name   = dvo.resource_record_name\n      record = dvo.resource_record_value\n      type   = dvo.resource_record_type\n    }\n  }\n\n  allow_overwrite = true\n  name            = each.value.name\n  records         = [each.value.record]\n  ttl             = 60\n  type            = each.value.type\n  zone_id         = data.aws_route53_zone.example.zone_id\n}\n\nresource \"aws_acm_certificate_validation\" \"example\" {\n  certificate_arn         = aws_acm_certificate.example.arn\n  validation_record_fqdns = [for record in aws_route53_record.example : record.fqdn]\n}\n\nresource \"aws_lb_listener\" \"example\" {\n  # ... other configuration ...\n\n  certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n}\n```\n\n### Alternative Domains DNS Validation with Route 53\n\n```terraform\nresource \"aws_acm_certificate\" \"example\" {\n  domain_name               = \"example.com\"\n  subject_alternative_names = [\"www.example.com\", \"example.org\"]\n  validation_method         = \"DNS\"\n}\n\ndata \"aws_route53_zone\" \"example_com\" {\n  name         = \"example.com\"\n  private_zone = false\n}\n\ndata \"aws_route53_zone\" \"example_org\" {\n  name         = \"example.org\"\n  private_zone = false\n}\n\nresource \"aws_route53_record\" \"example\" {\n  for_each = {\n    for dvo in aws_acm_certificate.example.domain_validation_options : dvo.domain_name => {\n      name    = dvo.resource_record_name\n      record  = dvo.resource_record_value\n      type    = dvo.resource_record_type\n      zone_id = dvo.domain_name == \"example.org\" ? data.aws_route53_zone.example_org.zone_id : data.aws_route53_zone.example_com.zone_id\n    }\n  }\n\n  allow_overwrite = true\n  name            = each.value.name\n  records         = [each.value.record]\n  ttl             = 60\n  type            = each.value.type\n  zone_id         = each.value.zone_id\n}\n\nresource \"aws_acm_certificate_validation\" \"example\" {\n  certificate_arn         = aws_acm_certificate.example.arn\n  validation_record_fqdns = [for record in aws_route53_record.example : record.fqdn]\n}\n\nresource \"aws_lb_listener\" \"example\" {\n  # ... other configuration ...\n\n  certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n}\n```\n\n### Email Validation\n\nIn this situation, the resource is simply a waiter for manual email approval of ACM certificates.\n\n```terraform\nresource \"aws_acm_certificate\" \"example\" {\n  domain_name       = \"example.com\"\n  validation_method = \"EMAIL\"\n}\n\nresource \"aws_acm_certificate_validation\" \"example\" {\n  certificate_arn = aws_acm_certificate.example.arn\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate_arn` - (Required) ARN of the certificate that is being validated.\n* `validation_record_fqdns` - (Optional) List of FQDNs that implement the validation. Only valid for DNS validation method ACM certificates. If this is set, the resource can implement additional sanity checks and has an explicit dependency on the resource that is implementing the validation\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Time at which the certificate was issued\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `75m`)\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acm_certificate_validation"
  },
  {
    "name": "aws_acmpca_certificate",
    "type": "resource",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_certificate\"",
    "example": "resource \"aws_acmpca_certificate\" \"example\" {\n  certificate_authority_arn   = aws_acmpca_certificate_authority.example.arn\n  certificate_signing_request = tls_cert_request.csr.cert_request_pem\n  signing_algorithm           = \"SHA256WITHRSA\"\n  validity {\n    type  = \"YEARS\"\n    value = 1\n  }\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n\n  permanent_deletion_time_in_days = 7\n}\n\nresource \"tls_private_key\" \"key\" {\n  algorithm = \"RSA\"\n}\n\nresource \"tls_cert_request\" \"csr\" {\n  private_key_pem = tls_private_key.key.private_key_pem\n\n  subject {\n    common_name = \"example\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate_authority_arn` - (Required) ARN of the certificate authority.\n* `certificate_signing_request` - (Required) Certificate Signing Request in PEM format.\n* `signing_algorithm` - (Required) Algorithm to use to sign certificate requests. Valid values: `SHA256WITHRSA`, `SHA256WITHECDSA`, `SHA384WITHRSA`, `SHA384WITHECDSA`, `SHA512WITHRSA`, `SHA512WITHECDSA`.\n* `validity` - (Required) Configures end of the validity period for the certificate. See [validity block](#validity-block) below.\n* `template_arn` - (Optional) Template to use when issuing a certificate.\n  See [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html) for more information.\n* `api_passthrough` - (Optional) Specifies X.509 certificate information to be included in the issued certificate. To use with API Passthrough templates\n\n### validity block",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_certificate\"\ndescription: |-\n  Provides a resource to issue a certificate using AWS Certificate Manager Private Certificate Authority (ACM PCA)\n---\n\n# Resource: aws_acmpca_certificate\n\nProvides a resource to issue a certificate using AWS Certificate Manager Private Certificate Authority (ACM PCA).\n\nCertificates created using `aws_acmpca_certificate` are not eligible for automatic renewal,\nand must be replaced instead.\nTo issue a renewable certificate using an ACM PCA, create a [`aws_acm_certificate`](acm_certificate.html)\nwith the parameter `certificate_authority_arn`.\n\n## Example Usage\n\n### Basic\n\n```terraform\nresource \"aws_acmpca_certificate\" \"example\" {\n  certificate_authority_arn   = aws_acmpca_certificate_authority.example.arn\n  certificate_signing_request = tls_cert_request.csr.cert_request_pem\n  signing_algorithm           = \"SHA256WITHRSA\"\n  validity {\n    type  = \"YEARS\"\n    value = 1\n  }\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n\n  permanent_deletion_time_in_days = 7\n}\n\nresource \"tls_private_key\" \"key\" {\n  algorithm = \"RSA\"\n}\n\nresource \"tls_cert_request\" \"csr\" {\n  private_key_pem = tls_private_key.key.private_key_pem\n\n  subject {\n    common_name = \"example\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate_authority_arn` - (Required) ARN of the certificate authority.\n* `certificate_signing_request` - (Required) Certificate Signing Request in PEM format.\n* `signing_algorithm` - (Required) Algorithm to use to sign certificate requests. Valid values: `SHA256WITHRSA`, `SHA256WITHECDSA`, `SHA384WITHRSA`, `SHA384WITHECDSA`, `SHA512WITHRSA`, `SHA512WITHECDSA`.\n* `validity` - (Required) Configures end of the validity period for the certificate. See [validity block](#validity-block) below.\n* `template_arn` - (Optional) Template to use when issuing a certificate.\n  See [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html) for more information.\n* `api_passthrough` - (Optional) Specifies X.509 certificate information to be included in the issued certificate. To use with API Passthrough templates\n\n### validity block\n\n* `type` - (Required) Determines how `value` is interpreted. Valid values: `DAYS`, `MONTHS`, `YEARS`, `ABSOLUTE`, `END_DATE`.\n* `value` - (Required) If `type` is `DAYS`, `MONTHS`, or `YEARS`, the relative time until the certificate expires. If `type` is `ABSOLUTE`, the date in seconds since the Unix epoch. If `type` is `END_DATE`, the  date in RFC 3339 format.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the certificate.\n* `certificate` - PEM-encoded certificate value.\n* `certificate_chain` - PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.\n\n## Import\n\nIn Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute. For example:\n\n```terraform\nimport {\n  to = aws_acmpca_certificate.example\n  identity = {\n    \"arn\" = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245\"\n  }\n}\n\nresource \"aws_acmpca_certificate\" \"example\" {\n  ### Configuration omitted for brevity ###\n}\n```\n\n### Identity Schema\n\n#### Required\n\n- `arn` (String) Amazon Resource Name (ARN) of the ACM PCA certificate.\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ACM PCA Certificates using their ARN. For example:\n\n```terraform\nimport {\n  to = aws_acmpca_certificate.cert\n  id = \"arn:aws:acm-pca:eu-west-1:675225743824:certificate-authority/08319ede-83g9-1400-8f21-c7d12b2b6edb/certificate/a4e9c2aa4bcfab625g1b9136464cd3a\"\n}\n```\n\nUsing `terraform import`, import ACM PCA Certificates using their ARN. For example:\n\n```console\n% terraform import aws_acmpca_certificate.cert arn:aws:acm-pca:eu-west-1:675225743824:certificate-authority/08319ede-83g9-1400-8f21-c7d12b2b6edb/certificate/a4e9c2aa4bcfab625g1b9136464cd3a\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acmpca_certificate"
  },
  {
    "name": "aws_acmpca_certificate_authority",
    "type": "resource",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_certificate_authority\"",
    "example": "resource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n\n  permanent_deletion_time_in_days = 7\n}\n```\n\n### Short-lived certificate\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket        = \"example\"\n  force_destroy = true\n}\n\ndata \"aws_iam_policy_document\" \"acmpca_bucket_access\" {\n  statement {\n    actions = [\n      \"s3:GetBucketAcl\",\n      \"s3:GetBucketLocation\",\n      \"s3:PutObject\",\n      \"s3:PutObjectAcl\",\n    ]\n\n    resources = [\n      aws_s3_bucket.example.arn,\n      \"${aws_s3_bucket.example.arn}/*\",\n    ]\n\n    principals {\n      identifiers = [\"acm-pca.amazonaws.com\"]\n      type        = \"Service\"\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  policy = data.aws_iam_policy_document.acmpca_bucket_access.json\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_certificate_authority\"\ndescription: |-\n  Provides a resource to manage AWS Certificate Manager Private Certificate Authorities\n---\n\n# Resource: aws_acmpca_certificate_authority\n\nProvides a resource to manage AWS Certificate Manager Private Certificate Authorities (ACM PCA Certificate Authorities).\n\n~> **NOTE:** Creating this resource will leave the certificate authority in a `PENDING_CERTIFICATE` status, which means it cannot yet issue certificates. To complete this setup, you must fully sign the certificate authority CSR available in the `certificate_signing_request` attribute. The [`aws_acmpca_certificate_authority_certificate`](/docs/providers/aws/r/acmpca_certificate_authority_certificate.html) resource can be used for this purpose.\n\n## Example Usage\n\n### Basic\n\n```terraform\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n\n  permanent_deletion_time_in_days = 7\n}\n```\n\n### Short-lived certificate\n\n```terraform\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  usage_mode = \"SHORT_LIVED_CERTIFICATE\"\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n}\n```\n\n### Enable Certificate Revocation List\n\n```terraform\nresource \"aws_s3_bucket\" \"example\" {\n  bucket        = \"example\"\n  force_destroy = true\n}\n\ndata \"aws_iam_policy_document\" \"acmpca_bucket_access\" {\n  statement {\n    actions = [\n      \"s3:GetBucketAcl\",\n      \"s3:GetBucketLocation\",\n      \"s3:PutObject\",\n      \"s3:PutObjectAcl\",\n    ]\n\n    resources = [\n      aws_s3_bucket.example.arn,\n      \"${aws_s3_bucket.example.arn}/*\",\n    ]\n\n    principals {\n      identifiers = [\"acm-pca.amazonaws.com\"]\n      type        = \"Service\"\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  policy = data.aws_iam_policy_document.acmpca_bucket_access.json\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n\n  revocation_configuration {\n    crl_configuration {\n      custom_cname       = \"crl.example.com\"\n      enabled            = true\n      expiration_in_days = 7\n      s3_bucket_name     = aws_s3_bucket.example.id\n      s3_object_acl      = \"BUCKET_OWNER_FULL_CONTROL\"\n    }\n  }\n\n  depends_on = [aws_s3_bucket_policy.example]\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate_authority_configuration` - (Required) Nested argument containing algorithms and certificate subject information. Defined below.\n* `enabled` - (Optional) Whether the certificate authority is enabled or disabled. Defaults to `true`. Can only be disabled if the CA is in an `ACTIVE` state.\n* `revocation_configuration` - (Optional) Nested argument containing revocation configuration. Defined below.\n* `usage_mode` - (Optional) Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days. Defaults to `GENERAL_PURPOSE`. Valid values: `GENERAL_PURPOSE` and `SHORT_LIVED_CERTIFICATE`.\n* `tags` - (Optional) Key-value map of user-defined tags that are attached to the certificate authority. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `type` - (Optional) Type of the certificate authority. Defaults to `SUBORDINATE`. Valid values: `ROOT` and `SUBORDINATE`.\n* `key_storage_security_standard` - (Optional) Cryptographic key management compliance standard used for handling CA keys. Defaults to `FIPS_140_2_LEVEL_3_OR_HIGHER`. Valid values: `FIPS_140_2_LEVEL_3_OR_HIGHER` and `FIPS_140_2_LEVEL_2_OR_HIGHER`. Supported standard for each region can be found in the [Storage and security compliance of AWS Private CA private keys Documentation](https://docs.aws.amazon.com/privateca/latest/userguide/data-protection.html#private-keys).\n* `permanent_deletion_time_in_days` - (Optional) Number of days to make a CA restorable after it has been deleted, mu",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acmpca_certificate_authority"
  },
  {
    "name": "aws_acmpca_certificate_authority_certificate",
    "type": "resource",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_certificate_authority_certificate\"",
    "example": "resource \"aws_acmpca_certificate_authority_certificate\" \"example\" {\n  certificate_authority_arn = aws_acmpca_certificate_authority.example.arn\n\n  certificate       = aws_acmpca_certificate.example.certificate\n  certificate_chain = aws_acmpca_certificate.example.certificate_chain\n}\n\nresource \"aws_acmpca_certificate\" \"example\" {\n  certificate_authority_arn   = aws_acmpca_certificate_authority.example.arn\n  certificate_signing_request = aws_acmpca_certificate_authority.example.certificate_signing_request\n  signing_algorithm           = \"SHA512WITHRSA\"\n\n  template_arn = \"arn:${data.aws_partition.current.partition}:acm-pca:::template/RootCACertificate/V1\"\n\n  validity {\n    type  = \"YEARS\"\n    value = 1\n  }\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  type = \"ROOT\"\n\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n}\n\ndata \"aws_partition\" \"current\" {}\n```\n\n### Certificate for Subordinate Certificate Authority\n\nNote that the certificate for the subordinate certificate authority must be issued by the root certificate authority using a signing request from the subordinate certificate authority.\n",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_certificate_authority_certificate\"\ndescription: |-\n  Associates a certificate with an AWS Certificate Manager Private Certificate Authority\n---\n\n# Resource: aws_acmpca_certificate_authority_certificate\n\nAssociates a certificate with an AWS Certificate Manager Private Certificate Authority (ACM PCA Certificate Authority). An ACM PCA Certificate Authority is unable to issue certificates until it has a certificate associated with it. A root level ACM PCA Certificate Authority is able to self-sign its own root certificate.\n\n## Example Usage\n\n### Self-Signed Root Certificate Authority Certificate\n\n```terraform\nresource \"aws_acmpca_certificate_authority_certificate\" \"example\" {\n  certificate_authority_arn = aws_acmpca_certificate_authority.example.arn\n\n  certificate       = aws_acmpca_certificate.example.certificate\n  certificate_chain = aws_acmpca_certificate.example.certificate_chain\n}\n\nresource \"aws_acmpca_certificate\" \"example\" {\n  certificate_authority_arn   = aws_acmpca_certificate_authority.example.arn\n  certificate_signing_request = aws_acmpca_certificate_authority.example.certificate_signing_request\n  signing_algorithm           = \"SHA512WITHRSA\"\n\n  template_arn = \"arn:${data.aws_partition.current.partition}:acm-pca:::template/RootCACertificate/V1\"\n\n  validity {\n    type  = \"YEARS\"\n    value = 1\n  }\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  type = \"ROOT\"\n\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n}\n\ndata \"aws_partition\" \"current\" {}\n```\n\n### Certificate for Subordinate Certificate Authority\n\nNote that the certificate for the subordinate certificate authority must be issued by the root certificate authority using a signing request from the subordinate certificate authority.\n\n```terraform\nresource \"aws_acmpca_certificate_authority_certificate\" \"subordinate\" {\n  certificate_authority_arn = aws_acmpca_certificate_authority.subordinate.arn\n\n  certificate       = aws_acmpca_certificate.subordinate.certificate\n  certificate_chain = aws_acmpca_certificate.subordinate.certificate_chain\n}\n\nresource \"aws_acmpca_certificate\" \"subordinate\" {\n  certificate_authority_arn   = aws_acmpca_certificate_authority.root.arn\n  certificate_signing_request = aws_acmpca_certificate_authority.subordinate.certificate_signing_request\n  signing_algorithm           = \"SHA512WITHRSA\"\n\n  template_arn = \"arn:${data.aws_partition.current.partition}:acm-pca:::template/SubordinateCACertificate_PathLen0/V1\"\n\n  validity {\n    type  = \"YEARS\"\n    value = 1\n  }\n}\n\nresource \"aws_acmpca_certificate_authority\" \"subordinate\" {\n  type = \"SUBORDINATE\"\n\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_2048\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"sub.example.com\"\n    }\n  }\n}\n\nresource \"aws_acmpca_certificate_authority\" \"root\" {\n  # ...\n}\n\nresource \"aws_acmpca_certificate_authority_certificate\" \"root\" {\n  # ...\n}\n\nresource \"aws_acmpca_certificate\" \"root\" {\n  # ...\n}\n\ndata \"aws_partition\" \"current\" {}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate` - (Required) PEM-encoded certificate for the Certificate Authority.\n* `certificate_authority_arn` - (Required) ARN of the Certificate Authority.\n* `certificate_chain` - (Optional) PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA. Required for subordinate Certificate Authorities. Not allowed for root Certificate Authorities.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acmpca_certificate_authority_certificate"
  },
  {
    "name": "aws_acmpca_permission",
    "type": "resource",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_permission\"",
    "example": "resource \"aws_acmpca_permission\" \"example\" {\n  certificate_authority_arn = aws_acmpca_certificate_authority.example.arn\n  actions                   = [\"IssueCertificate\", \"GetCertificate\", \"ListPermissions\"]\n  principal                 = \"acm.amazonaws.com\"\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate_authority_arn` - (Required) ARN of the CA that grants the permissions.\n* `actions` - (Required) Actions that the specified AWS service principal can use. These include `IssueCertificate`, `GetCertificate`, and `ListPermissions`. Note that in order for ACM to automatically rotate certificates issued by a PCA, it must be granted permission on all 3 actions, as per the example above.\n* `principal` - (Required) AWS service or identity that receives the permission. At this time, the only valid principal is `acm.amazonaws.com`.\n* `source_account` - (Optional) ID of the calling account\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `policy` - IAM policy that is associated with the permission.\n",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_permission\"\ndescription: |-\n  Provides a resource to manage an AWS Certificate Manager Private Certificate Authorities Permission\n---\n\n# Resource: aws_acmpca_permission\n\nProvides a resource to manage an AWS Certificate Manager Private Certificate Authorities Permission.\nCurrently, this is only required in order to allow the ACM service to automatically renew certificates issued by a PCA.\n\n## Example Usage\n\n```terraform\nresource \"aws_acmpca_permission\" \"example\" {\n  certificate_authority_arn = aws_acmpca_certificate_authority.example.arn\n  actions                   = [\"IssueCertificate\", \"GetCertificate\", \"ListPermissions\"]\n  principal                 = \"acm.amazonaws.com\"\n}\n\nresource \"aws_acmpca_certificate_authority\" \"example\" {\n  certificate_authority_configuration {\n    key_algorithm     = \"RSA_4096\"\n    signing_algorithm = \"SHA512WITHRSA\"\n\n    subject {\n      common_name = \"example.com\"\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `certificate_authority_arn` - (Required) ARN of the CA that grants the permissions.\n* `actions` - (Required) Actions that the specified AWS service principal can use. These include `IssueCertificate`, `GetCertificate`, and `ListPermissions`. Note that in order for ACM to automatically rotate certificates issued by a PCA, it must be granted permission on all 3 actions, as per the example above.\n* `principal` - (Required) AWS service or identity that receives the permission. At this time, the only valid principal is `acm.amazonaws.com`.\n* `source_account` - (Optional) ID of the calling account\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `policy` - IAM policy that is associated with the permission.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acmpca_permission"
  },
  {
    "name": "aws_acmpca_policy",
    "type": "resource",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_policy\"",
    "example": "data \"aws_iam_policy_document\" \"example\" {\n  statement {\n    sid    = \"1\"\n    effect = \"Allow\"\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [data.aws_caller_identity.current.account_id]\n    }\n\n    actions = [\n      \"acm-pca:DescribeCertificateAuthority\",\n      \"acm-pca:GetCertificate\",\n      \"acm-pca:GetCertificateAuthorityCertificate\",\n      \"acm-pca:ListPermissions\",\n      \"acm-pca:ListTags\",\n    ]\n\n    resources = [aws_acmpca_certificate_authority.example.arn]\n  }\n\n  statement {\n    sid    = \"2\"\n    effect = Allow\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [data.aws_caller_identity.current.account_id]\n    }\n\n    actions   = [\"acm-pca:IssueCertificate\"]\n    resources = [aws_acmpca_certificate_authority.example.arn]\n\n    condition {\n      test     = \"StringEquals\"\n      variable = \"acm-pca:TemplateArn\"\n      values   = [\"arn:aws:acm-pca:::template/EndEntityCertificate/V1\"]\n    }\n  }\n}\n\nresource \"aws_acmpca_policy\" \"example\" {\n  resource_arn = aws_acmpca_certificate_authority.example.arn\n  policy       = data.aws_iam_policy_document.example.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_policy\"\ndescription: |-\n  Attaches a resource based policy to an AWS Certificate Manager Private Certificate Authority (ACM PCA)\n---\n\n# Resource: aws_acmpca_policy\n\nAttaches a resource based policy to a private CA.\n\n## Example Usage\n\n### Basic\n\n```terraform\ndata \"aws_iam_policy_document\" \"example\" {\n  statement {\n    sid    = \"1\"\n    effect = \"Allow\"\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [data.aws_caller_identity.current.account_id]\n    }\n\n    actions = [\n      \"acm-pca:DescribeCertificateAuthority\",\n      \"acm-pca:GetCertificate\",\n      \"acm-pca:GetCertificateAuthorityCertificate\",\n      \"acm-pca:ListPermissions\",\n      \"acm-pca:ListTags\",\n    ]\n\n    resources = [aws_acmpca_certificate_authority.example.arn]\n  }\n\n  statement {\n    sid    = \"2\"\n    effect = Allow\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [data.aws_caller_identity.current.account_id]\n    }\n\n    actions   = [\"acm-pca:IssueCertificate\"]\n    resources = [aws_acmpca_certificate_authority.example.arn]\n\n    condition {\n      test     = \"StringEquals\"\n      variable = \"acm-pca:TemplateArn\"\n      values   = [\"arn:aws:acm-pca:::template/EndEntityCertificate/V1\"]\n    }\n  }\n}\n\nresource \"aws_acmpca_policy\" \"example\" {\n  resource_arn = aws_acmpca_certificate_authority.example.arn\n  policy       = data.aws_iam_policy_document.example.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `resource_arn` - (Required) ARN of the private CA to associate with the policy.\n* `policy` - (Required) JSON-formatted IAM policy to attach to the specified private CA resource.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute. For example:\n\n```terraform\nimport {\n  to = aws_acmpca_policy.example\n  identity = {\n    \"arn\" = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n  }\n}\n\nresource \"aws_acmpca_policy\" \"example\" {\n  ### Configuration omitted for brevity ###\n}\n```\n\n### Identity Schema\n\n#### Required\n\n- `arn` (String) Amazon Resource Name (ARN) of the ACM PCA certificate authority.\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_acmpca_policy` using the `resource_arn` value. For example:\n\n```terraform\nimport {\n  to = aws_acmpca_policy.example\n  id = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\nUsing `terraform import`, import `aws_acmpca_policy` using the `resource_arn` value. For example:\n\n```console\n% terraform import aws_acmpca_policy.example arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/acmpca_policy"
  },
  {
    "name": "aws_ami",
    "type": "resource",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_ami\"",
    "example": "# Create an AMI that will start a machine whose root device is backed by\n# an EBS volume populated from a snapshot. We assume that such a snapshot\n# already exists with the id \"snap-xxxxxxxx\".\nresource \"aws_ami\" \"example\" {\n  name                = \"terraform-example\"\n  virtualization_type = \"hvm\"\n  root_device_name    = \"/dev/xvda\"\n  imds_support        = \"v2.0\" # Enforce usage of IMDSv2. You can safely remove this line if your application explicitly doesn't support it.\n  ebs_block_device {\n    device_name = \"/dev/xvda\"\n    snapshot_id = \"snap-xxxxxxxx\"\n    volume_size = 8\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Region-unique name for the AMI.\n* `boot_mode` - (Optional) Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.\n* `deprecation_time` - (Optional) Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)\n* `description` - (Optional) Longer, human-readable description for the AMI.\n* `ena_support` - (Optional) Whether enhanced networking with ENA is enabled. Defaults to `false`.\n* `root_device_name` - (Optional) Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).\n* `virtualization_type` - (Optional) Keyword to choose what virtualization mode created instances\n  will use. Can be either \"paravirtual\" (the default) or \"hvm\". The choice of virtualization type\n  changes the set of further arguments that are required, as described below.\n* `architecture` - (Optional) Machine architecture for created instances. Defaults to `x86_64`.\n* `ebs_block_device` - (Optional) Nested block describing an EBS block device that should be\n  attached to created instances. The structure of this block is described below.\n* `ephemeral_block_device` - (Optional) Nested block describing an ephemeral block device that\n  should be attached to created instances. The structure of this block is described below.\n* `last_launched_time` - (Computed) Date and time, in ISO 8601 date-time format , when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported. For more information, see the following [AWS document](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-last-launched-time.html).\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `tpm_support` - (Optional) If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.\n* `imds_support` - (Optional) If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).\n* `uefi_data` - (Optional) Base64 representation of the non-volatile UEFI variable store.\n\nWhen `virtualization_type` is \"paravirtual\" the following additional arguments apply:\n\n* `image_location` - (Required) Path to an S3 object containing an image manifest, e.g., created\n  by the `ec2-upload-bundle` command in the EC2 command line tools.\n* `kernel_id` - (Required) ID of the kernel image (AKI) that will be used as the paravirtual\n  kernel in created instances.\n* `ramdisk_id` - (Optional) ID of an initrd image (ARI) that will be used when booting the\n  created instances.\n",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ami\"\ndescription: |-\n  Creates and manages a custom Amazon Machine Image (AMI).\n---\n\n# Resource: aws_ami\n\nThe AMI resource allows the creation and management of a completely-custom\n*Amazon Machine Image* (AMI).\n\nIf you just want to duplicate an existing AMI, possibly copying it to another\nregion, it's better to use `aws_ami_copy` instead.\n\nIf you just want to share an existing AMI with another AWS account,\nit's better to use `aws_ami_launch_permission` instead.\n\n## Example Usage\n\n```terraform\n# Create an AMI that will start a machine whose root device is backed by\n# an EBS volume populated from a snapshot. We assume that such a snapshot\n# already exists with the id \"snap-xxxxxxxx\".\nresource \"aws_ami\" \"example\" {\n  name                = \"terraform-example\"\n  virtualization_type = \"hvm\"\n  root_device_name    = \"/dev/xvda\"\n  imds_support        = \"v2.0\" # Enforce usage of IMDSv2. You can safely remove this line if your application explicitly doesn't support it.\n  ebs_block_device {\n    device_name = \"/dev/xvda\"\n    snapshot_id = \"snap-xxxxxxxx\"\n    volume_size = 8\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Region-unique name for the AMI.\n* `boot_mode` - (Optional) Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.\n* `deprecation_time` - (Optional) Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)\n* `description` - (Optional) Longer, human-readable description for the AMI.\n* `ena_support` - (Optional) Whether enhanced networking with ENA is enabled. Defaults to `false`.\n* `root_device_name` - (Optional) Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).\n* `virtualization_type` - (Optional) Keyword to choose what virtualization mode created instances\n  will use. Can be either \"paravirtual\" (the default) or \"hvm\". The choice of virtualization type\n  changes the set of further arguments that are required, as described below.\n* `architecture` - (Optional) Machine architecture for created instances. Defaults to `x86_64`.\n* `ebs_block_device` - (Optional) Nested block describing an EBS block device that should be\n  attached to created instances. The structure of this block is described below.\n* `ephemeral_block_device` - (Optional) Nested block describing an ephemeral block device that\n  should be attached to created instances. The structure of this block is described below.\n* `last_launched_time` - (Computed) Date and time, in ISO 8601 date-time format , when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported. For more information, see the following [AWS document](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-last-launched-time.html).\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `tpm_support` - (Optional) If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.\n* `imds_support` - (Optional) If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).\n* `uefi_data` - (Optional) Base64 representation of the non-volatile UEFI variable store.\n\nWhen `virtualization_type` is \"paravirtual\" the following additional arguments apply:\n\n* `image_location` - (Required) Path to an S3 object containing an image manifest, e.g., created\n  by the `ec2-upload-bundle` command in the EC2 command line tools.\n* `kernel_id` - (Required) ID of the kernel image (AKI) that will be used as the paravirtual\n  kernel in created instances.\n* `ramdisk_id` - (Optional) ID of an initrd image (ARI) that will be used when booting the\n  created instances.\n\nWhen `virtual",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ami"
  },
  {
    "name": "aws_ami_copy",
    "type": "resource",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_ami_copy\"",
    "example": "resource \"aws_ami_copy\" \"example\" {\n  name              = \"terraform-example\"\n  source_ami_id     = \"ami-xxxxxxxx\"\n  source_ami_region = \"us-west-1\"\n\n  tags = {\n    Name = \"HelloWorld\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Region-unique name for the AMI.\n* `source_ami_id` - (Required) Id of the AMI to copy. This id must be valid in the region\n  given by `source_ami_region`.\n* `source_ami_region` - (Required) Region from which the AMI will be copied. This may be the\n  same as the AWS provider region in order to create a copy within the same region.\n* `destination_outpost_arn` - (Optional) ARN of the Outpost to which to copy the AMI.\n  Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.  \n* `encrypted` - (Optional) Whether the destination snapshots of the copied image should be encrypted. Defaults to `false`\n* `kms_key_id` - (Optional) Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\nThis resource also exposes the full set of arguments from the [`aws_ami`](ami.html) resource.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the AMI.\n* `id` - ID of the created AMI.\n\nThis resource also exports a full set of attributes corresponding to the arguments of the\n[`aws_ami`](/docs/providers/aws/r/ami.html) resource, allowing the properties of the created AMI to be used elsewhere in the\nconfiguration.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `40m`)\n* `update` - (Default `40m`)\n* `delete` - (Default `90m`)\n",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ami_copy\"\ndescription: |-\n  Duplicates an existing Amazon Machine Image (AMI)\n---\n\n# Resource: aws_ami_copy\n\nThe \"AMI copy\" resource allows duplication of an Amazon Machine Image (AMI),\nincluding cross-region copies.\n\nIf the source AMI has associated EBS snapshots, those will also be duplicated\nalong with the AMI.\n\nThis is useful for taking a single AMI provisioned in one region and making\nit available in another for a multi-region deployment.\n\nCopying an AMI can take several minutes. The creation of this resource will\nblock until the new AMI is available for use on new instances.\n\n## Example Usage\n\n```terraform\nresource \"aws_ami_copy\" \"example\" {\n  name              = \"terraform-example\"\n  source_ami_id     = \"ami-xxxxxxxx\"\n  source_ami_region = \"us-west-1\"\n\n  tags = {\n    Name = \"HelloWorld\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Region-unique name for the AMI.\n* `source_ami_id` - (Required) Id of the AMI to copy. This id must be valid in the region\n  given by `source_ami_region`.\n* `source_ami_region` - (Required) Region from which the AMI will be copied. This may be the\n  same as the AWS provider region in order to create a copy within the same region.\n* `destination_outpost_arn` - (Optional) ARN of the Outpost to which to copy the AMI.\n  Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.  \n* `encrypted` - (Optional) Whether the destination snapshots of the copied image should be encrypted. Defaults to `false`\n* `kms_key_id` - (Optional) Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\nThis resource also exposes the full set of arguments from the [`aws_ami`](ami.html) resource.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the AMI.\n* `id` - ID of the created AMI.\n\nThis resource also exports a full set of attributes corresponding to the arguments of the\n[`aws_ami`](/docs/providers/aws/r/ami.html) resource, allowing the properties of the created AMI to be used elsewhere in the\nconfiguration.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `40m`)\n* `update` - (Default `40m`)\n* `delete` - (Default `90m`)\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ami_copy"
  },
  {
    "name": "aws_ami_from_instance",
    "type": "resource",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_ami_from_instance\"",
    "example": "resource \"aws_ami_from_instance\" \"example\" {\n  name               = \"terraform-example\"\n  source_instance_id = \"i-xxxxxxxx\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Region-unique name for the AMI.\n* `source_instance_id` - (Required) ID of the instance to use as the basis of the AMI.\n* `snapshot_without_reboot` - (Optional) Boolean that overrides the behavior of stopping\n  the instance before snapshotting. This is risky since it may cause a snapshot of an\n  inconsistent filesystem state, but can be used to avoid downtime if the user otherwise\n  guarantees that no filesystem writes will be underway at the time of snapshot.\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `40m`)\n* `update` - (Default `40m`)\n* `delete` - (Default `90m`)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the AMI.\n* `id` - ID of the created AMI.\n\nThis resource also exports a full set of attributes corresponding to the arguments of the\n[`aws_ami`](/docs/providers/aws/r/ami.html) resource, allowing the properties of the created AMI to be used elsewhere in the\nconfiguration.\n",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ami_from_instance\"\ndescription: |-\n  Creates an Amazon Machine Image (AMI) from an EBS-backed EC2 instance\n---\n\n# Resource: aws_ami_from_instance\n\nThe \"AMI from instance\" resource allows the creation of an Amazon Machine\nImage (AMI) modeled after an existing EBS-backed EC2 instance.\n\nThe created AMI will refer to implicitly-created snapshots of the instance's\nEBS volumes and mimick its assigned block device configuration at the time\nthe resource is created.\n\nThis resource is best applied to an instance that is stopped when this instance\nis created, so that the contents of the created image are predictable. When\napplied to an instance that is running, *the instance will be stopped before taking\nthe snapshots and then started back up again*, resulting in a period of\ndowntime.\n\nNote that the source instance is inspected only at the initial creation of this\nresource. Ongoing updates to the referenced instance will not be propagated into\nthe generated AMI. Users may taint or otherwise recreate the resource in order\nto produce a fresh snapshot.\n\n## Example Usage\n\n```terraform\nresource \"aws_ami_from_instance\" \"example\" {\n  name               = \"terraform-example\"\n  source_instance_id = \"i-xxxxxxxx\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Region-unique name for the AMI.\n* `source_instance_id` - (Required) ID of the instance to use as the basis of the AMI.\n* `snapshot_without_reboot` - (Optional) Boolean that overrides the behavior of stopping\n  the instance before snapshotting. This is risky since it may cause a snapshot of an\n  inconsistent filesystem state, but can be used to avoid downtime if the user otherwise\n  guarantees that no filesystem writes will be underway at the time of snapshot.\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `40m`)\n* `update` - (Default `40m`)\n* `delete` - (Default `90m`)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the AMI.\n* `id` - ID of the created AMI.\n\nThis resource also exports a full set of attributes corresponding to the arguments of the\n[`aws_ami`](/docs/providers/aws/r/ami.html) resource, allowing the properties of the created AMI to be used elsewhere in the\nconfiguration.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ami_from_instance"
  },
  {
    "name": "aws_ami_launch_permission",
    "type": "resource",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_ami_launch_permission\"",
    "example": "resource \"aws_ami_launch_permission\" \"example\" {\n  image_id   = \"ami-12345678\"\n  account_id = \"123456789012\"\n}\n```\n\n### Public Access\n\ndata \"aws_organizations_organization\" \"current\" {}\n\nresource \"aws_ami_launch_permission\" \"example\" {\n  image_id         = \"ami-12345678\"\n  organization_arn = data.aws_organizations_organization.current.arn\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `account_id` - (Optional) AWS account ID for the launch permission.\n* `group` - (Optional) Name of the group for the launch permission. Valid values: `\"all\"`.\n* `image_id` - (Required) ID of the AMI.\n* `organization_arn` - (Optional) ARN of an organization for the launch permission.\n* `organizational_unit_arn` - (Optional) ARN of an organizational unit for the launch permission.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Launch permission ID.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AMI Launch Permissions using `[ACCOUNT-ID|GROUP-NAME|ORGANIZATION-ARN|ORGANIZATIONAL-UNIT-ARN]/IMAGE-ID`. For example:\n",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ami_launch_permission\"\ndescription: |-\n  Adds a launch permission to an Amazon Machine Image (AMI).\n---\n\n# Resource: aws_ami_launch_permission\n\nAdds a launch permission to an Amazon Machine Image (AMI).\n\n## Example Usage\n\n### AWS Account ID\n\n```terraform\nresource \"aws_ami_launch_permission\" \"example\" {\n  image_id   = \"ami-12345678\"\n  account_id = \"123456789012\"\n}\n```\n\n### Public Access\n\n```terraform\nresource \"aws_ami_launch_permission\" \"example\" {\n  image_id = \"ami-12345678\"\n  group    = \"all\"\n}\n```\n\n### Organization Access\n\n```terraform\ndata \"aws_organizations_organization\" \"current\" {}\n\nresource \"aws_ami_launch_permission\" \"example\" {\n  image_id         = \"ami-12345678\"\n  organization_arn = data.aws_organizations_organization.current.arn\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `account_id` - (Optional) AWS account ID for the launch permission.\n* `group` - (Optional) Name of the group for the launch permission. Valid values: `\"all\"`.\n* `image_id` - (Required) ID of the AMI.\n* `organization_arn` - (Optional) ARN of an organization for the launch permission.\n* `organizational_unit_arn` - (Optional) ARN of an organizational unit for the launch permission.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Launch permission ID.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AMI Launch Permissions using `[ACCOUNT-ID|GROUP-NAME|ORGANIZATION-ARN|ORGANIZATIONAL-UNIT-ARN]/IMAGE-ID`. For example:\n\n```terraform\nimport {\n  to = aws_ami_launch_permission.example\n  id = \"123456789012/ami-12345678\"\n}\n```\n\nUsing `terraform import`, import AMI Launch Permissions using `[ACCOUNT-ID|GROUP-NAME|ORGANIZATION-ARN|ORGANIZATIONAL-UNIT-ARN]/IMAGE-ID`. For example:\n\n```console\n% terraform import aws_ami_launch_permission.example 123456789012/ami-12345678\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ami_launch_permission"
  },
  {
    "name": "aws_amplify_app",
    "type": "resource",
    "description": "subcategory: \"Amplify\" layout: \"aws\" page_title: \"AWS: aws_amplify_app\"",
    "example": "resource \"aws_amplify_app\" \"example\" {\n  name       = \"example\"\n  repository = \"https://github.com/example/app\"\n\n  # The default build_spec added by the Amplify Console for React.\n  build_spec = <<-EOT\n    version: 0.1\n    frontend:\n      phases:\n        preBuild:\n          commands:\n            - yarn install\n        build:\n          commands:\n            - yarn run build\n      artifacts:\n        baseDirectory: build\n        files:\n          - '**/*'\n      cache:\n        paths:\n          - node_modules/**/*\n  EOT\n\n  # The default rewrites and redirects added by the Amplify Console.\n  custom_rule {\n    source = \"/<*>\"\n    status = \"404\"\n    target = \"/index.html\"\n  }\n\n  environment_variables = {\n    ENV = \"test\"\n  }\n}\n```\n\n### Repository with Tokens\n\nIf you create a new Amplify App with the `repository` argument, you also need to set `oauth_token` or `access_token` for authentication. For GitHub, get a [personal access token](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line) and set `access_token` as follows:\n\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  enable_auto_branch_creation = true\n\n  # The default patterns added by the Amplify Console.\n  auto_branch_creation_patterns = [\n    \"*\",\n    \"*/**\",",
    "full_text": "---\nsubcategory: \"Amplify\"\nlayout: \"aws\"\npage_title: \"AWS: aws_amplify_app\"\ndescription: |-\n  Provides an Amplify App resource.\n---\n\n# Resource: aws_amplify_app\n\nProvides an Amplify App resource, a fullstack serverless app hosted on the [AWS Amplify Console](https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html).\n\n~> **Note:** When you create/update an Amplify App from Terraform, you may end up with the error \"BadRequestException: You should at least provide one valid token\" because of authentication issues. See the section \"Repository with Tokens\" below.\n\n## Example Usage\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name       = \"example\"\n  repository = \"https://github.com/example/app\"\n\n  # The default build_spec added by the Amplify Console for React.\n  build_spec = <<-EOT\n    version: 0.1\n    frontend:\n      phases:\n        preBuild:\n          commands:\n            - yarn install\n        build:\n          commands:\n            - yarn run build\n      artifacts:\n        baseDirectory: build\n        files:\n          - '**/*'\n      cache:\n        paths:\n          - node_modules/**/*\n  EOT\n\n  # The default rewrites and redirects added by the Amplify Console.\n  custom_rule {\n    source = \"/<*>\"\n    status = \"404\"\n    target = \"/index.html\"\n  }\n\n  environment_variables = {\n    ENV = \"test\"\n  }\n}\n```\n\n### Repository with Tokens\n\nIf you create a new Amplify App with the `repository` argument, you also need to set `oauth_token` or `access_token` for authentication. For GitHub, get a [personal access token](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line) and set `access_token` as follows:\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name       = \"example\"\n  repository = \"https://github.com/example/app\"\n\n  # GitHub personal access token\n  access_token = \"...\"\n}\n```\n\nYou can omit `access_token` if you import an existing Amplify App created by the Amplify Console (using OAuth for authentication).\n\n### Auto Branch Creation\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  enable_auto_branch_creation = true\n\n  # The default patterns added by the Amplify Console.\n  auto_branch_creation_patterns = [\n    \"*\",\n    \"*/**\",\n  ]\n\n  auto_branch_creation_config {\n    # Enable auto build for the created branch.\n    enable_auto_build = true\n  }\n}\n```\n\n### Basic Authorization\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  enable_basic_auth      = true\n  basic_auth_credentials = base64encode(\"username1:password1\")\n}\n```\n\n### Rewrites and Redirects\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  # Reverse Proxy Rewrite for API requests\n  # https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html#reverse-proxy-rewrite\n  custom_rule {\n    source = \"/api/<*>\"\n    status = \"200\"\n    target = \"https://api.example.com/api/<*>\"\n  }\n\n  # Redirects for Single Page Web Apps (SPA)\n  # https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html#redirects-for-single-page-web-apps-spa\n  custom_rule {\n    source = \"</^[^.]+$|\\\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>\"\n    status = \"200\"\n    target = \"/index.html\"\n  }\n}\n```\n\n### Custom Image\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  environment_variables = {\n    \"_CUSTOM_IMAGE\" = \"node:16\",\n  }\n}\n```\n\n### Custom Headers\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  custom_headers = <<-EOT\n    customHeaders:\n      - pattern: '**'\n        headers:\n          - key: 'Strict-Transport-Security'\n            value: 'max-age=31536000; includeSubDomains'\n          - key: 'X-Frame-Options'\n            value: 'SAMEORIGIN'\n          - key: 'X-XSS-Protection'\n            value: '1; mode=block'\n          - key: 'X-Content-Type-Options'\n            value: 'nosniff'\n          - key: 'Content-Security-Policy'\n            value: \"default-src 'self'\"\n  EOT\n}\n```\n\n### Job Config\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n\n  job_config {\n    build_compute_type = \"STANDARD_8GB\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name for an Amplify app.\n* `access_token` - (Optional) Personal access token for a third-party source control system for an Amplify app. This token must have write access to the relevant repo to create a webhook and a read-only deploy key for the Amplify project. The token is not stored, so after applying this attribute can be removed and the setup token deleted.\n* `auto_branch_creation_config` - (Optional) Automated branch creation configur",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/amplify_app"
  },
  {
    "name": "aws_amplify_backend_environment",
    "type": "resource",
    "description": "subcategory: \"Amplify\" layout: \"aws\" page_title: \"AWS: aws_amplify_backend_environment\"",
    "example": "resource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n}\n\nresource \"aws_amplify_backend_environment\" \"example\" {\n  app_id           = aws_amplify_app.example.id\n  environment_name = \"example\"\n\n  deployment_artifacts = \"app-example-deployment\"\n  stack_name           = \"amplify-app-example\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `environment_name` - (Required) Name for the backend environment.\n* `deployment_artifacts` - (Optional) Name of deployment artifacts.\n* `stack_name` - (Optional) AWS CloudFormation stack name of a backend environment.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN for a backend environment that is part of an Amplify app.\n* `id` - Unique ID of the Amplify backend environment.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify backend environment using `app_id` and `environment_name`. For example:\n",
    "full_text": "---\nsubcategory: \"Amplify\"\nlayout: \"aws\"\npage_title: \"AWS: aws_amplify_backend_environment\"\ndescription: |-\n  Provides an Amplify Backend Environment resource.\n---\n\n# Resource: aws_amplify_backend_environment\n\nProvides an Amplify Backend Environment resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"example\"\n}\n\nresource \"aws_amplify_backend_environment\" \"example\" {\n  app_id           = aws_amplify_app.example.id\n  environment_name = \"example\"\n\n  deployment_artifacts = \"app-example-deployment\"\n  stack_name           = \"amplify-app-example\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `environment_name` - (Required) Name for the backend environment.\n* `deployment_artifacts` - (Optional) Name of deployment artifacts.\n* `stack_name` - (Optional) AWS CloudFormation stack name of a backend environment.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN for a backend environment that is part of an Amplify app.\n* `id` - Unique ID of the Amplify backend environment.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify backend environment using `app_id` and `environment_name`. For example:\n\n```terraform\nimport {\n  to = aws_amplify_backend_environment.example\n  id = \"d2ypk4k47z8u6/example\"\n}\n```\n\nUsing `terraform import`, import Amplify backend environment using `app_id` and `environment_name`. For example:\n\n```console\n% terraform import aws_amplify_backend_environment.example d2ypk4k47z8u6/example\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/amplify_backend_environment"
  },
  {
    "name": "aws_amplify_branch",
    "type": "resource",
    "description": "subcategory: \"Amplify\" layout: \"aws\" page_title: \"AWS: aws_amplify_branch\"",
    "example": "resource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n\n  framework = \"React\"\n  stage     = \"PRODUCTION\"\n\n  environment_variables = {\n    REACT_APP_API_SERVER = \"https://api.example.com\"\n  }\n}\n```\n\n### Basic Authentication\n\nresource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n\n  # Enable SNS notifications.\n  enable_notification = true\n}\n\n# EventBridge Rule for Amplify notifications\n\nresource \"aws_cloudwatch_event_rule\" \"amplify_app_master\" {\n  name        = \"amplify-${aws_amplify_app.app.id}-${aws_amplify_branch.master.branch_name}-branch-notification\"\n  description = \"AWS Amplify build notifications for :  App: ${aws_amplify_app.app.id} Branch: ${aws_amplify_branch.master.branch_name}\"\n\n  event_pattern = jsonencode({\n    \"detail\" = {\n      \"appId\" = [\n        aws_amplify_app.example.id\n      ]\n      \"branchName\" = [\n        aws_amplify_branch.master.branch_name\n      ],\n      \"jobStatus\" = [\n        \"SUCCEED\",\n        \"FAILED\",\n        \"STARTED\"\n      ]",
    "full_text": "---\nsubcategory: \"Amplify\"\nlayout: \"aws\"\npage_title: \"AWS: aws_amplify_branch\"\ndescription: |-\n  Provides an Amplify Branch resource.\n---\n\n# Resource: aws_amplify_branch\n\nProvides an Amplify Branch resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n\n  framework = \"React\"\n  stage     = \"PRODUCTION\"\n\n  environment_variables = {\n    REACT_APP_API_SERVER = \"https://api.example.com\"\n  }\n}\n```\n\n### Basic Authentication\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n\n  enable_basic_auth      = true\n  basic_auth_credentials = base64encode(\"username:password\")\n}\n```\n\n### Notifications\n\nAmplify Console uses EventBridge (formerly known as CloudWatch Events) and SNS for email notifications.  To implement the same functionality, you need to set `enable_notification` in a `aws_amplify_branch` resource, as well as creating an EventBridge Rule, an SNS topic, and SNS subscriptions.\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n\n  # Enable SNS notifications.\n  enable_notification = true\n}\n\n# EventBridge Rule for Amplify notifications\n\nresource \"aws_cloudwatch_event_rule\" \"amplify_app_master\" {\n  name        = \"amplify-${aws_amplify_app.app.id}-${aws_amplify_branch.master.branch_name}-branch-notification\"\n  description = \"AWS Amplify build notifications for :  App: ${aws_amplify_app.app.id} Branch: ${aws_amplify_branch.master.branch_name}\"\n\n  event_pattern = jsonencode({\n    \"detail\" = {\n      \"appId\" = [\n        aws_amplify_app.example.id\n      ]\n      \"branchName\" = [\n        aws_amplify_branch.master.branch_name\n      ],\n      \"jobStatus\" = [\n        \"SUCCEED\",\n        \"FAILED\",\n        \"STARTED\"\n      ]\n    }\n    \"detail-type\" = [\n      \"Amplify Deployment Status Change\"\n    ]\n    \"source\" = [\n      \"aws.amplify\"\n    ]\n  })\n}\n\nresource \"aws_cloudwatch_event_target\" \"amplify_app_master\" {\n  rule      = aws_cloudwatch_event_rule.amplify_app_master.name\n  target_id = aws_amplify_branch.master.branch_name\n  arn       = aws_sns_topic.amplify_app_master.arn\n\n  input_transformer {\n    input_paths = {\n      jobId  = \"$.detail.jobId\"\n      appId  = \"$.detail.appId\"\n      region = \"$.region\"\n      branch = \"$.detail.branchName\"\n      status = \"$.detail.jobStatus\"\n    }\n\n    input_template = \"\\\"Build notification from the AWS Amplify Console for app: https://<branch>.<appId>.amplifyapp.com/. Your build status is <status>. Go to https://console.aws.amazon.com/amplify/home?region=<region>#<appId>/<branch>/<jobId> to view details on your build. \\\"\"\n  }\n}\n\n# SNS Topic for Amplify notifications\n\nresource \"aws_sns_topic\" \"amplify_app_master\" {\n  name = \"amplify-${aws_amplify_app.app.id}_${aws_amplify_branch.master.branch_name}\"\n}\n\ndata \"aws_iam_policy_document\" \"amplify_app_master\" {\n  statement {\n    sid = \"Allow_Publish_Events ${aws_amplify_branch.master.arn}\"\n\n    effect = \"Allow\"\n\n    actions = [\n      \"SNS:Publish\",\n    ]\n\n    principals {\n      type = \"Service\"\n      identifiers = [\n        \"events.amazonaws.com\",\n      ]\n    }\n\n    resources = [\n      aws_sns_topic.amplify_app_master.arn,\n    ]\n  }\n}\n\nresource \"aws_sns_topic_policy\" \"amplify_app_master\" {\n  arn    = aws_sns_topic.amplify_app_master.arn\n  policy = data.aws_iam_policy_document.amplify_app_master.json\n}\n\nresource \"aws_sns_topic_subscription\" \"this\" {\n  topic_arn = aws_sns_topic.amplify_app_master.arn\n  protocol  = \"email\"\n  endpoint  = \"user@acme.com\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `branch_name` - (Required) Name for the branch.\n* `backend_environment_arn` - (Optional) ARN for a backend environment that is part of an Amplify app.\n* `basic_auth_credentials` - (Optional) Basic authorization credentials for the branch.\n* `description` - (Optional) Description for the branch.\n* `display_name` - (Optional) Display name for a branch. This is used as the default domain prefix.\n* `enable_auto_build` - (Optional) Enables auto building for the branch.\n* `enable_basic_auth` - (Optional) Enables basic authorization for the branch.\n* `enable_notification` - (Optional) Enables notifications for the branch.\n* `enable_performance_mode` - (Optional) Enables performance mode for the branch.\n* `enable_pull_request_preview` - (Optional) Enables pull request previews for thi",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/amplify_branch"
  },
  {
    "name": "aws_amplify_domain_association",
    "type": "resource",
    "description": "subcategory: \"Amplify\" layout: \"aws\" page_title: \"AWS: aws_amplify_domain_association\"",
    "example": "resource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n\n  # Setup redirect from https://example.com to https://www.example.com\n  custom_rule {\n    source = \"https://example.com\"\n    status = \"302\"\n    target = \"https://www.example.com\"\n  }\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n}\n\nresource \"aws_amplify_domain_association\" \"example\" {\n  app_id      = aws_amplify_app.example.id\n  domain_name = \"example.com\"\n\n  # https://example.com\n  sub_domain {\n    branch_name = aws_amplify_branch.master.branch_name\n    prefix      = \"\"\n  }\n\n  # https://www.example.com\n  sub_domain {\n    branch_name = aws_amplify_branch.master.branch_name\n    prefix      = \"www\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `certificate_settings` - (Optional) The type of SSL/TLS certificate to use for your custom domain. If you don't specify a certificate type, Amplify uses the default certificate that it provisions and manages for you.\n* `domain_name` - (Required) Domain name for the domain association.\n* `enable_auto_sub_domain` - (Optional) Enables the automated creation of subdomains for branches.\n* `sub_domain` - (Required) Setting for the subdomain. Documented below.\n* `wait_for_verification` - (Optional) If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.\n\nThe `certificate_settings` configuration block supports the following arguments:\n\n* `type` - (Required) The certificate type.\n  Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.",
    "full_text": "---\nsubcategory: \"Amplify\"\nlayout: \"aws\"\npage_title: \"AWS: aws_amplify_domain_association\"\ndescription: |-\n  Provides an Amplify Domain Association resource.\n---\n\n# Resource: aws_amplify_domain_association\n\nProvides an Amplify Domain Association resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n\n  # Setup redirect from https://example.com to https://www.example.com\n  custom_rule {\n    source = \"https://example.com\"\n    status = \"302\"\n    target = \"https://www.example.com\"\n  }\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n}\n\nresource \"aws_amplify_domain_association\" \"example\" {\n  app_id      = aws_amplify_app.example.id\n  domain_name = \"example.com\"\n\n  # https://example.com\n  sub_domain {\n    branch_name = aws_amplify_branch.master.branch_name\n    prefix      = \"\"\n  }\n\n  # https://www.example.com\n  sub_domain {\n    branch_name = aws_amplify_branch.master.branch_name\n    prefix      = \"www\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `certificate_settings` - (Optional) The type of SSL/TLS certificate to use for your custom domain. If you don't specify a certificate type, Amplify uses the default certificate that it provisions and manages for you.\n* `domain_name` - (Required) Domain name for the domain association.\n* `enable_auto_sub_domain` - (Optional) Enables the automated creation of subdomains for branches.\n* `sub_domain` - (Required) Setting for the subdomain. Documented below.\n* `wait_for_verification` - (Optional) If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.\n\nThe `certificate_settings` configuration block supports the following arguments:\n\n* `type` - (Required) The certificate type.\n  Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.\n* `custom_certificate_arn` - (Optional) The Amazon resource name (ARN) for the custom certificate.\n  Required when `type` is `CUSTOM`.\n\nThe `sub_domain` configuration block supports the following arguments:\n\n* `branch_name` - (Required) Branch name setting for the subdomain.\n* `prefix` - (Required) Prefix setting for the subdomain.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN for the domain association.\n* `certificate_verification_dns_record` - DNS records for certificate verification in a space-delimited format (`<record> CNAME <target>`).\n\nThe `sub_domain` configuration block exports the following attributes:\n\n* `dns_record` - DNS record for the subdomain in a space-prefixed and space-delimited format (` CNAME <target>`).\n* `verified` - Verified status of the subdomain.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify domain association using `app_id` and `domain_name`. For example:\n\n```terraform\nimport {\n  to = aws_amplify_domain_association.app\n  id = \"d2ypk4k47z8u6/example.com\"\n}\n```\n\nUsing `terraform import`, import Amplify domain association using `app_id` and `domain_name`. For example:\n\n```console\n% terraform import aws_amplify_domain_association.app d2ypk4k47z8u6/example.com\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/amplify_domain_association"
  },
  {
    "name": "aws_amplify_webhook",
    "type": "resource",
    "description": "subcategory: \"Amplify\" layout: \"aws\" page_title: \"AWS: aws_amplify_webhook\"",
    "example": "resource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n}\n\nresource \"aws_amplify_webhook\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = aws_amplify_branch.master.branch_name\n  description = \"triggermaster\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `branch_name` - (Required) Name for a branch that is part of the Amplify app.\n* `description` - (Optional) Description for a webhook.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN for the webhook.\n* `url` - URL of the webhook.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify webhook using a webhook ID. For example:\n",
    "full_text": "---\nsubcategory: \"Amplify\"\nlayout: \"aws\"\npage_title: \"AWS: aws_amplify_webhook\"\ndescription: |-\n  Provides an Amplify Webhook resource.\n---\n\n# Resource: aws_amplify_webhook\n\nProvides an Amplify Webhook resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_amplify_app\" \"example\" {\n  name = \"app\"\n}\n\nresource \"aws_amplify_branch\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = \"master\"\n}\n\nresource \"aws_amplify_webhook\" \"master\" {\n  app_id      = aws_amplify_app.example.id\n  branch_name = aws_amplify_branch.master.branch_name\n  description = \"triggermaster\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `app_id` - (Required) Unique ID for an Amplify app.\n* `branch_name` - (Required) Name for a branch that is part of the Amplify app.\n* `description` - (Optional) Description for a webhook.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN for the webhook.\n* `url` - URL of the webhook.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify webhook using a webhook ID. For example:\n\n```terraform\nimport {\n  to = aws_amplify_webhook.master\n  id = \"a26b22a0-748b-4b57-b9a0-ae7e601fe4b1\"\n}\n```\n\nUsing `terraform import`, import Amplify webhook using a webhook ID. For example:\n\n```console\n% terraform import aws_amplify_webhook.master a26b22a0-748b-4b57-b9a0-ae7e601fe4b1\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/amplify_webhook"
  },
  {
    "name": "aws_api_gateway_account",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_account\"",
    "example": "resource \"aws_api_gateway_account\" \"demo\" {\n  cloudwatch_role_arn = aws_iam_role.cloudwatch.arn\n}\n\ndata \"aws_iam_policy_document\" \"assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"apigateway.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"cloudwatch\" {\n  name               = \"api_gateway_cloudwatch_global\"\n  assume_role_policy = data.aws_iam_policy_document.assume_role.json\n}\n\ndata \"aws_iam_policy_document\" \"cloudwatch\" {\n  statement {\n    effect = \"Allow\"\n\n    actions = [\n      \"logs:CreateLogGroup\",\n      \"logs:CreateLogStream\",\n      \"logs:DescribeLogGroups\",\n      \"logs:DescribeLogStreams\",\n      \"logs:PutLogEvents\",\n      \"logs:GetLogEvents\",\n      \"logs:FilterLogEvents\",\n    ]\n\n    resources = [\"*\"]\n  }\n}\nresource \"aws_iam_role_policy\" \"cloudwatch\" {\n  name   = \"default\"\n  role   = aws_iam_role.cloudwatch.id\n  policy = data.aws_iam_policy_document.cloudwatch.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_account\"\ndescription: |-\n  Provides a settings of an API Gateway Account.\n---\n\n# Resource: aws_api_gateway_account\n\nProvides a settings of an API Gateway Account. Settings is applied region-wide per `provider` block.\n\n-> **Note:** By default, destroying this resource will keep your account settings intact. Set `reset_on_delete` to `true` to reset the account setttings to default. In a future major version of the provider, destroying the resource will reset account settings.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_account\" \"demo\" {\n  cloudwatch_role_arn = aws_iam_role.cloudwatch.arn\n}\n\ndata \"aws_iam_policy_document\" \"assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"apigateway.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"cloudwatch\" {\n  name               = \"api_gateway_cloudwatch_global\"\n  assume_role_policy = data.aws_iam_policy_document.assume_role.json\n}\n\ndata \"aws_iam_policy_document\" \"cloudwatch\" {\n  statement {\n    effect = \"Allow\"\n\n    actions = [\n      \"logs:CreateLogGroup\",\n      \"logs:CreateLogStream\",\n      \"logs:DescribeLogGroups\",\n      \"logs:DescribeLogStreams\",\n      \"logs:PutLogEvents\",\n      \"logs:GetLogEvents\",\n      \"logs:FilterLogEvents\",\n    ]\n\n    resources = [\"*\"]\n  }\n}\nresource \"aws_iam_role_policy\" \"cloudwatch\" {\n  name   = \"default\"\n  role   = aws_iam_role.cloudwatch.id\n  policy = data.aws_iam_policy_document.cloudwatch.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `cloudwatch_role_arn` - (Optional) ARN of an IAM role for CloudWatch (to allow logging & monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.\n* `reset_on_delete` - (Optional) If `true`, destroying the resource will reset account settings to default, otherwise account settings are not modified.\n  Defaults to `false`.\n  Will be removed in a future major version of the provider.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `api_key_version` - The version of the API keys used for the account.\n* `throttle_settings` - Account-Level throttle settings. See exported fields below.\n* `features` - A list of features supported for the account.\n\n`throttle_settings` block exports the following:\n\n* `burst_limit` - Absolute maximum number of times API Gateway allows the API to be called per second (RPS).\n* `rate_limit` - Number of times API Gateway allows the API to be called per second on average (RPS).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway Accounts using the account ID. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_account.demo\n  id = \"123456789012\"\n}\n```\n\nUsing `terraform import`, import API Gateway Accounts using the account ID. For example:\n\n```console\n% terraform import aws_api_gateway_account.demo 123456789012\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_account"
  },
  {
    "name": "aws_api_gateway_api_key",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_api_key\"",
    "example": "resource \"aws_api_gateway_api_key\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the API key.\n* `customer_id` - (Optional) An Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `description` - (Optional) API key description. Defaults to \"Managed by Terraform\".\n* `enabled` - (Optional) Whether the API key can be used by callers. Defaults to `true`.\n* `value` - (Optional) Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the API key\n* `created_date` - Creation date of the API key\n* `last_updated_date` - Last update date of the API key\n* `arn` - ARN\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway Keys using the `id`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_api_key\"\ndescription: |-\n  Provides an API Gateway API Key.\n---\n\n# Resource: aws_api_gateway_api_key\n\nProvides an API Gateway API Key.\n\n~> **NOTE:** Since the API Gateway usage plans feature was launched on August 11, 2016, usage plans are now **required** to associate an API key with an API stage.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_api_key\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the API key.\n* `customer_id` - (Optional) An Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `description` - (Optional) API key description. Defaults to \"Managed by Terraform\".\n* `enabled` - (Optional) Whether the API key can be used by callers. Defaults to `true`.\n* `value` - (Optional) Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the API key\n* `created_date` - Creation date of the API key\n* `last_updated_date` - Last update date of the API key\n* `arn` - ARN\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway Keys using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_api_key.example\n  id = \"8bklk8bl1k3sB38D9B3l0enyWT8c09B30lkq0blk\"\n}\n```\n\nUsing `terraform import`, import API Gateway Keys using the `id`. For example:\n\n```console\n% terraform import aws_api_gateway_api_key.example 8bklk8bl1k3sB38D9B3l0enyWT8c09B30lkq0blk\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_api_key"
  },
  {
    "name": "aws_api_gateway_authorizer",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_authorizer\"",
    "example": "resource \"aws_api_gateway_authorizer\" \"demo\" {\n  name                   = \"demo\"\n  rest_api_id            = aws_api_gateway_rest_api.demo.id\n  authorizer_uri         = aws_lambda_function.authorizer.invoke_arn\n  authorizer_credentials = aws_iam_role.invocation_role.arn\n}\n\nresource \"aws_api_gateway_rest_api\" \"demo\" {\n  name = \"auth-demo\"\n}\n\ndata \"aws_iam_policy_document\" \"invocation_assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"apigateway.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"invocation_role\" {\n  name               = \"api_gateway_auth_invocation\"\n  path               = \"/\"\n  assume_role_policy = data.aws_iam_policy_document.invocation_assume_role.json\n}\n\ndata \"aws_iam_policy_document\" \"invocation_policy\" {\n  statement {\n    effect    = \"Allow\"\n    actions   = [\"lambda:InvokeFunction\"]\n    resources = [aws_lambda_function.authorizer.arn]\n  }\n}\n\nresource \"aws_iam_role_policy\" \"invocation_policy\" {\n  name   = \"default\"\n  role   = aws_iam_role.invocation_role.id\n  policy = data.aws_iam_policy_document.invocation_policy.json\n}\n\ndata \"aws_iam_policy_document\" \"lambda_assume_role\" {\n  statement {\n    effect  = \"Allow\"\n    actions = [\"sts:AssumeRole\"]\n\n    principals {",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_authorizer\"\ndescription: |-\n  Provides an API Gateway Authorizer.\n---\n\n# Resource: aws_api_gateway_authorizer\n\nProvides an API Gateway Authorizer.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_authorizer\" \"demo\" {\n  name                   = \"demo\"\n  rest_api_id            = aws_api_gateway_rest_api.demo.id\n  authorizer_uri         = aws_lambda_function.authorizer.invoke_arn\n  authorizer_credentials = aws_iam_role.invocation_role.arn\n}\n\nresource \"aws_api_gateway_rest_api\" \"demo\" {\n  name = \"auth-demo\"\n}\n\ndata \"aws_iam_policy_document\" \"invocation_assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"apigateway.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"invocation_role\" {\n  name               = \"api_gateway_auth_invocation\"\n  path               = \"/\"\n  assume_role_policy = data.aws_iam_policy_document.invocation_assume_role.json\n}\n\ndata \"aws_iam_policy_document\" \"invocation_policy\" {\n  statement {\n    effect    = \"Allow\"\n    actions   = [\"lambda:InvokeFunction\"]\n    resources = [aws_lambda_function.authorizer.arn]\n  }\n}\n\nresource \"aws_iam_role_policy\" \"invocation_policy\" {\n  name   = \"default\"\n  role   = aws_iam_role.invocation_role.id\n  policy = data.aws_iam_policy_document.invocation_policy.json\n}\n\ndata \"aws_iam_policy_document\" \"lambda_assume_role\" {\n  statement {\n    effect  = \"Allow\"\n    actions = [\"sts:AssumeRole\"]\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"lambda.amazonaws.com\"]\n    }\n  }\n}\n\nresource \"aws_iam_role\" \"lambda\" {\n  name               = \"demo-lambda\"\n  assume_role_policy = data.aws_iam_policy_document.lambda_assume_role.json\n}\n\nresource \"aws_lambda_function\" \"authorizer\" {\n  filename      = \"lambda-function.zip\"\n  function_name = \"api_gateway_authorizer\"\n  role          = aws_iam_role.lambda.arn\n  handler       = \"exports.example\"\n\n  source_code_hash = filebase64sha256(\"lambda-function.zip\")\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `authorizer_uri` - (Optional, required for type `TOKEN`/`REQUEST`) Authorizer's Uniform Resource Identifier (URI). This must be a well-formed Lambda function URI in the form of `arn:aws:apigateway:{region}:lambda:path/{service_api}`,\n e.g., `arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:012345678912:function:my-function/invocations`\n* `name` - (Required) Name of the authorizer\n* `rest_api_id` - (Required) ID of the associated REST API\n* `identity_source` - (Optional) Source of the identity in an incoming request. Defaults to `method.request.header.Authorization`. For `REQUEST` type, this may be a comma-separated list of values, including headers, query string parameters and stage variables - e.g., `\"method.request.header.SomeHeaderName,method.request.querystring.SomeQueryStringName,stageVariables.SomeStageVariableName\"`\n* `type` - (Optional) Type of the authorizer. Possible values are `TOKEN` for a Lambda function using a single authorization token submitted in a custom header, `REQUEST` for a Lambda function using incoming request parameters, or `COGNITO_USER_POOLS` for using an Amazon Cognito user pool. Defaults to `TOKEN`.\n* `authorizer_credentials` - (Optional) Credentials required for the authorizer. To specify an IAM Role for API Gateway to assume, use the IAM Role ARN.\n* `authorizer_result_ttl_in_seconds` - (Optional) TTL of cached authorizer results in seconds. Defaults to `300`.\n* `identity_validation_expression` - (Optional) Validation expression for the incoming identity. For `TOKEN` type, this value should be a regular expression. The incoming token from the client is matched against this expression, and will proceed if the token matches. If the token doesn't match, the client receives a 401 Unauthorized response.\n* `provider_arns` - (Optional, required for type `COGNITO_USER_POOLS`) List of the Amazon Cognito user pool ARNs. Each element is of this format: `arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the API Gateway Authorizer\n* `id` - Authorizer identifier.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS API Gateway Authorizer using the `REST-API-ID/AUTHORIZER-ID`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_authorizer.authorizer\n  id = \"12345abcde/example\"\n}\n```\n\nUsing `terraform import`, import ",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_authorizer"
  },
  {
    "name": "aws_api_gateway_base_path_mapping",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_base_path_mapping\"",
    "example": "resource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n\nresource \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name = \"example.com\"\n\n  certificate_name        = \"example-api\"\n  certificate_body        = file(\"${path.module}/example.com/example.crt\")\n  certificate_chain       = file(\"${path.module}/example.com/ca.crt\")\n  certificate_private_key = file(\"${path.module}/example.com/example.key\")\n}\n\nresource \"aws_api_gateway_base_path_mapping\" \"example\" {\n  api_id      = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  domain_name = aws_api_gateway_domain_name.example.domain_name\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `domain_name` - (Required) Already-registered domain name to connect the API to.\n* `api_id` - (Required) ID of the API to connect.\n* `stage_name` - (Optional) Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.\n* `base_path` - (Optional) Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.\n* `domain_name_id` - (Optional) The identifier for the domain name resource. Supported only for private custom domain names.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:\n\nFor an empty `base_path` or, in other words, a root path (`/`):\n\nimport {\n  to = aws_api_gateway_base_path_mapping.example\n  id = \"example.com/base-path\"\n}\n```\n\nFor a non-root `base_path` and a private custom domain name:",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_base_path_mapping\"\ndescription: |-\n  Connects a custom domain with a deployed API\n---\n\n# Resource: aws_api_gateway_base_path_mapping\n\nConnects a custom domain name registered via `aws_api_gateway_domain_name`\nwith a deployed API so that its methods can be called via the\ncustom domain name.\n\n## Example Usage\n\nAn end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).\n\n```terraform\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n\nresource \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name = \"example.com\"\n\n  certificate_name        = \"example-api\"\n  certificate_body        = file(\"${path.module}/example.com/example.crt\")\n  certificate_chain       = file(\"${path.module}/example.com/ca.crt\")\n  certificate_private_key = file(\"${path.module}/example.com/example.key\")\n}\n\nresource \"aws_api_gateway_base_path_mapping\" \"example\" {\n  api_id      = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  domain_name = aws_api_gateway_domain_name.example.domain_name\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `domain_name` - (Required) Already-registered domain name to connect the API to.\n* `api_id` - (Required) ID of the API to connect.\n* `stage_name` - (Optional) Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.\n* `base_path` - (Optional) Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.\n* `domain_name_id` - (Optional) The identifier for the domain name resource. Supported only for private custom domain names.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:\n\nFor an empty `base_path` or, in other words, a root path (`/`):\n\n```terraform\nimport {\n  to = aws_api_gateway_base_path_mapping.example\n  id = \"example.com/\"\n}\n```\n\nFor a non-root `base_path`:\n\n```terraform\nimport {\n  to = aws_api_gateway_base_path_mapping.example\n  id = \"example.com/base-path\"\n}\n```\n\nFor a non-root `base_path` and a private custom domain name:\n\n```terraform\nimport {\n  to = aws_api_gateway_base_path_mapping.example\n  id = \"api.internal.example.com/base-path/abcde12345\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:\n\nFor an empty `base_path` or, in other words, a root path (`/`):\n\n```console\n% terraform import aws_api_gateway_base_path_mapping.example example.com/\n```\n\nFor a non-root `base_path`:\n\n```console\n% terraform import aws_api_gateway_base_path_mapping.example example.com/base-path\n```\n\nFor a non-root `base_path` and a private custom domain name:\n\n```console\n% terraform import aws_api_gateway_base_path_mapping.example api.internal.example.com/base-path/abcde12345\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_base_path_mapping"
  },
  {
    "name": "aws_api_gateway_client_certificate",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_client_certificate\"",
    "example": "resource \"aws_api_gateway_client_certificate\" \"demo\" {\n  description = \"My client certificate\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `description` - (Optional) Description of the client certificate.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Identifier of the client certificate.\n* `created_date` - Date when the client certificate was created.\n* `expiration_date` - Date when the client certificate will expire.\n* `pem_encoded_certificate` - The PEM-encoded public key of the client certificate.\n* `arn` - ARN\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway Client Certificates using the id. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_client_certificate\"\ndescription: |-\n  Provides an API Gateway Client Certificate.\n---\n\n# Resource: aws_api_gateway_client_certificate\n\nProvides an API Gateway Client Certificate.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_client_certificate\" \"demo\" {\n  description = \"My client certificate\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `description` - (Optional) Description of the client certificate.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Identifier of the client certificate.\n* `created_date` - Date when the client certificate was created.\n* `expiration_date` - Date when the client certificate will expire.\n* `pem_encoded_certificate` - The PEM-encoded public key of the client certificate.\n* `arn` - ARN\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway Client Certificates using the id. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_client_certificate.demo\n  id = \"ab1cqe\"\n}\n```\n\nUsing `terraform import`, import API Gateway Client Certificates using the id. For example:\n\n```console\n% terraform import aws_api_gateway_client_certificate.demo ab1cqe\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_client_certificate"
  },
  {
    "name": "aws_api_gateway_deployment",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_deployment\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n```\n\n### Terraform Resources\n\nimport {\n  to = aws_api_gateway_deployment.example\n  id = \"aabbccddee/1122334\"\n}\n```",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_deployment\"\ndescription: |-\n  Manages an API Gateway REST Deployment.\n---\n\n# Resource: aws_api_gateway_deployment\n\nManages an API Gateway REST Deployment. A deployment is a snapshot of the REST API configuration. The deployment can then be published to callable endpoints via the [`aws_api_gateway_stage` resource](api_gateway_stage.html) and optionally managed further with the [`aws_api_gateway_base_path_mapping` resource](api_gateway_base_path_mapping.html), [`aws_api_gateway_domain_name` resource](api_gateway_domain_name.html), and [`aws_api_method_settings` resource](api_gateway_method_settings.html). For more information, see the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html).\n\nTo properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior Terraform resources that manage resources/paths, methods, integrations, etc.\n\n* For REST APIs that are configured via OpenAPI specification ([`aws_api_gateway_rest_api` resource](api_gateway_rest_api.html) `body` argument), no special dependency setup is needed beyond referencing the  `id` attribute of that resource unless additional Terraform resources have further customized the REST API.\n* When the REST API configuration involves other Terraform resources ([`aws_api_gateway_integration` resource](api_gateway_integration.html), etc.), the dependency setup can be done with implicit resource references in the `triggers` argument or explicit resource references using the [resource `depends_on` meta-argument](https://www.terraform.io/docs/configuration/meta-arguments/depends_on.html). The `triggers` argument should be preferred over `depends_on`, since `depends_on` can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.\n\n~> **NOTE:** Enable the [resource `lifecycle` configuration block `create_before_destroy` argument](https://www.terraform.io/language/meta-arguments/lifecycle#create_before_destroy) in this resource configuration to properly order redeployments in Terraform. Without enabling `create_before_destroy`, API Gateway can return errors such as `BadRequestException: Active stages pointing to this deployment must be moved or deleted` on recreation.\n\n## Example Usage\n\n### OpenAPI Specification\n\nAn end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n```\n\n### Terraform Resources\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_resource\" \"example\" {\n  parent_id   = aws_api_gateway_rest_api.example.root_resource_id\n  path_part   = \"example\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n\nresource \"aws_api_gateway_method\" \"example\" {\n  authorization = \"NONE\"\n  http_method   = \"GET\"\n  resource_id   = aws_api_gateway_resource.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n}\n\nresource \"aws_api_gateway_integration\" \"example\" {\n  http_method = aws_api_gateway_method.example.http_method\n  resource_id = aws_api_gateway_resource.example.id\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  type        = \"MOCK\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    # NOTE: The configuration below will satisfy ordering considerations,\n    #       but not pick up all future REST API changes. More advanced patterns\n    #       are possible, such as using the filesha1() function against the\n    #       Terraform configuration file(s) or removing the .id references to\n    #       calculate a hash against whole resources. Be aware that using whole\n    #       resources will show a",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_deployment"
  },
  {
    "name": "aws_api_gateway_documentation_part",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_documentation_part\"",
    "example": "resource \"aws_api_gateway_documentation_part\" \"example\" {\n  location {\n    type   = \"METHOD\"\n    method = \"GET\"\n    path   = \"/example\"\n  }\n\n  properties  = \"{\\\"description\\\":\\\"Example description\\\"}\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  name = \"example_api\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `location` - (Required) Location of the targeted API entity of the to-be-created documentation part. See below.\n* `properties` - (Required) Content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., \"{ \\\"description\\\": \\\"The API does ...\\\" }\". Only Swagger-compliant key-value pairs can be exported and, hence, published.\n* `rest_api_id` - (Required) ID of the associated Rest API\n\n### Nested fields\n\n#### `location`\n\nSee supported entity types for each field in the [official docs](https://docs.aws.amazon.com/apigateway/api-reference/resource/documentation-part/).\n\n* `method` - (Optional) HTTP verb of a method. The default value is `*` for any method.\n* `name` - (Optional) Name of the targeted API entity.\n* `path` - (Optional) URL path of the target. The default value is `/` for the root resource.\n* `status_code` - (Optional) HTTP status code of a response. The default value is `*` for any status code.\n* `type` - (Required) Type of API entity to which the documentation content appliesE.g., `API`, `METHOD` or `REQUEST_BODY`\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `documentation_part_id` - The DocumentationPart identifier, generated by API Gateway when the documentation part is created.\n* `id` - Unique ID of the Documentation Part\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway documentation_parts using `REST-API-ID/DOC-PART-ID`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_documentation_part\"\ndescription: |-\n  Provides a settings of an API Gateway Documentation Part.\n---\n\n# Resource: aws_api_gateway_documentation_part\n\nProvides a settings of an API Gateway Documentation Part.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_documentation_part\" \"example\" {\n  location {\n    type   = \"METHOD\"\n    method = \"GET\"\n    path   = \"/example\"\n  }\n\n  properties  = \"{\\\"description\\\":\\\"Example description\\\"}\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  name = \"example_api\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `location` - (Required) Location of the targeted API entity of the to-be-created documentation part. See below.\n* `properties` - (Required) Content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., \"{ \\\"description\\\": \\\"The API does ...\\\" }\". Only Swagger-compliant key-value pairs can be exported and, hence, published.\n* `rest_api_id` - (Required) ID of the associated Rest API\n\n### Nested fields\n\n#### `location`\n\nSee supported entity types for each field in the [official docs](https://docs.aws.amazon.com/apigateway/api-reference/resource/documentation-part/).\n\n* `method` - (Optional) HTTP verb of a method. The default value is `*` for any method.\n* `name` - (Optional) Name of the targeted API entity.\n* `path` - (Optional) URL path of the target. The default value is `/` for the root resource.\n* `status_code` - (Optional) HTTP status code of a response. The default value is `*` for any status code.\n* `type` - (Required) Type of API entity to which the documentation content appliesE.g., `API`, `METHOD` or `REQUEST_BODY`\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `documentation_part_id` - The DocumentationPart identifier, generated by API Gateway when the documentation part is created.\n* `id` - Unique ID of the Documentation Part\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway documentation_parts using `REST-API-ID/DOC-PART-ID`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_documentation_part.example\n  id = \"5i4e1ko720/3oyy3t\"\n}\n```\n\nUsing `terraform import`, import API Gateway documentation_parts using `REST-API-ID/DOC-PART-ID`. For example:\n\n```console\n% terraform import aws_api_gateway_documentation_part.example 5i4e1ko720/3oyy3t\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_documentation_part"
  },
  {
    "name": "aws_api_gateway_documentation_version",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_documentation_version\"",
    "example": "resource \"aws_api_gateway_documentation_version\" \"example\" {\n  version     = \"example_version\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  description = \"Example description\"\n  depends_on  = [aws_api_gateway_documentation_part.example]\n}\n\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  name = \"example_api\"\n}\n\nresource \"aws_api_gateway_documentation_part\" \"example\" {\n  location {\n    type = \"API\"\n  }\n\n  properties  = \"{\\\"description\\\":\\\"Example\\\"}\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `version` - (Required) Version identifier of the API documentation snapshot.\n* `rest_api_id` - (Required) ID of the associated Rest API\n* `description` - (Optional) Description of the API documentation version.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway documentation versions using `REST-API-ID/VERSION`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_documentation_version\"\ndescription: |-\n  Provides a resource to manage an API Gateway Documentation Version.\n---\n\n# Resource: aws_api_gateway_documentation_version\n\nProvides a resource to manage an API Gateway Documentation Version.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_documentation_version\" \"example\" {\n  version     = \"example_version\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  description = \"Example description\"\n  depends_on  = [aws_api_gateway_documentation_part.example]\n}\n\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  name = \"example_api\"\n}\n\nresource \"aws_api_gateway_documentation_part\" \"example\" {\n  location {\n    type = \"API\"\n  }\n\n  properties  = \"{\\\"description\\\":\\\"Example\\\"}\"\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `version` - (Required) Version identifier of the API documentation snapshot.\n* `rest_api_id` - (Required) ID of the associated Rest API\n* `description` - (Optional) Description of the API documentation version.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway documentation versions using `REST-API-ID/VERSION`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_documentation_version.example\n  id = \"5i4e1ko720/example-version\"\n}\n```\n\nUsing `terraform import`, import API Gateway documentation versions using `REST-API-ID/VERSION`. For example:\n\n```console\n% terraform import aws_api_gateway_documentation_version.example 5i4e1ko720/example-version\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_documentation_version"
  },
  {
    "name": "aws_api_gateway_domain_name",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_domain_name\"",
    "example": "resource \"aws_api_gateway_domain_name\" \"example\" {\n  certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n  domain_name     = \"api.example.com\"\n}\n\n# Example DNS record using Route53.\n# Route53 is not specifically required; any DNS host can be used.\nresource \"aws_route53_record\" \"example\" {\n  name    = aws_api_gateway_domain_name.example.domain_name\n  type    = \"A\"\n  zone_id = aws_route53_zone.example.id\n\n  alias {\n    evaluate_target_health = true\n    name                   = aws_api_gateway_domain_name.example.cloudfront_domain_name\n    zone_id                = aws_api_gateway_domain_name.example.cloudfront_zone_id\n  }\n}\n```\n\n### Edge Optimized (IAM Certificate)\n\nresource \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name              = \"api.example.com\"\n  regional_certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n\n  endpoint_configuration {\n    types = [\"REGIONAL\"]\n  }\n}\n\n# Example DNS record using Route53.\n# Route53 is not specifically required; any DNS host can be used.\nresource \"aws_route53_record\" \"example\" {\n  name    = aws_api_gateway_domain_name.example.domain_name\n  type    = \"A\"\n  zone_id = aws_route53_zone.example.id\n\n  alias {\n    evaluate_target_health = true\n    name                   = aws_api_gateway_domain_name.example.regional_domain_name\n    zone_id                = aws_api_gateway_domain_name.example.regional_zone_id\n  }\n}\n```\n\n### Regional (IAM Certificate)\n\nimport {\n  to = aws_api_gateway_domain_name.example",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_domain_name\"\ndescription: |-\n  Registers a custom domain name for use with AWS API Gateway.\n---\n\n# Resource: aws_api_gateway_domain_name\n\nRegisters a custom domain name for use with AWS API Gateway. Additional information about this functionality\ncan be found in the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).\n\nThis resource just establishes ownership of and the TLS settings for\na particular domain name. An API can be attached to a particular path\nunder the registered domain name using\n[the `aws_api_gateway_base_path_mapping` resource](api_gateway_base_path_mapping.html).\n\nAPI Gateway domains can be defined as either 'edge-optimized' or 'regional'.  In an edge-optimized configuration,\nAPI Gateway internally creates and manages a CloudFront distribution to route requests on the given hostname. In\naddition to this resource it's necessary to create a DNS record corresponding to the given domain name which is an alias\n(either Route53 alias or traditional CNAME) to the Cloudfront domain name exported in the `cloudfront_domain_name`\nattribute.\n\nIn a regional configuration, API Gateway does not create a CloudFront distribution to route requests to the API, though\na distribution can be created if needed. In either case, it is necessary to create a DNS record corresponding to the\ngiven domain name which is an alias (either Route53 alias or traditional CNAME) to the regional domain name exported in\nthe `regional_domain_name` attribute.\n\n~> **Note:** API Gateway requires the use of AWS Certificate Manager (ACM) certificates instead of Identity and Access Management (IAM) certificates in regions that support ACM. Regions that support ACM can be found in the [Regions and Endpoints Documentation](https://docs.aws.amazon.com/general/latest/gr/rande.html#acm_region). To import an existing private key and certificate into ACM or request an ACM certificate, see the [`aws_acm_certificate` resource](/docs/providers/aws/r/acm_certificate.html).\n\n~> **Note:** The `aws_api_gateway_domain_name` resource expects dependency on the `aws_acm_certificate_validation` as\nonly verified certificates can be used. This can be made either explicitly by adding the\n`depends_on = [aws_acm_certificate_validation.cert]` attribute. Or implicitly by referring certificate ARN\nfrom the validation resource where it will be available after the resource creation:\n`regional_certificate_arn = aws_acm_certificate_validation.cert.certificate_arn`.\n\n~> **Note:** All arguments including the private key will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).\n\n## Example Usage\n\nAn end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).\n\n### Edge Optimized (ACM Certificate)\n\n```terraform\nresource \"aws_api_gateway_domain_name\" \"example\" {\n  certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n  domain_name     = \"api.example.com\"\n}\n\n# Example DNS record using Route53.\n# Route53 is not specifically required; any DNS host can be used.\nresource \"aws_route53_record\" \"example\" {\n  name    = aws_api_gateway_domain_name.example.domain_name\n  type    = \"A\"\n  zone_id = aws_route53_zone.example.id\n\n  alias {\n    evaluate_target_health = true\n    name                   = aws_api_gateway_domain_name.example.cloudfront_domain_name\n    zone_id                = aws_api_gateway_domain_name.example.cloudfront_zone_id\n  }\n}\n```\n\n### Edge Optimized (IAM Certificate)\n\n```terraform\nresource \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name = \"api.example.com\"\n\n  certificate_name        = \"example-api\"\n  certificate_body        = file(\"${path.module}/example.com/example.crt\")\n  certificate_chain       = file(\"${path.module}/example.com/ca.crt\")\n  certificate_private_key = file(\"${path.module}/example.com/example.key\")\n}\n\n# Example DNS record using Route53.\n# Route53 is not specifically required; any DNS host can be used.\nresource \"aws_route53_record\" \"example\" {\n  zone_id = aws_route53_zone.example.id # See aws_route53_zone for how to create this\n\n  name = aws_api_gateway_domain_name.example.domain_name\n  type = \"A\"\n\n  alias {\n    name                   = aws_api_gateway_domain_name.example.cloudfront_domain_name\n    zone_id                = aws_api_gateway_domain_name.example.cloudfront_zone_id\n    evaluate_target_health = true\n  }\n}\n```\n\n### Regional (ACM Certificate)\n\n```terraform\nresource \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name              = \"api.example.com\"\n  regional_certificate_arn = aws_acm_certificate_validation.example.certificate_arn\n\n  endpoint_configuration {\n    types = [\"REGIONAL\"]\n  }\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name"
  },
  {
    "name": "aws_api_gateway_domain_name_access_association",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_domain_name_access_association\"",
    "example": "resource \"aws_api_gateway_domain_name_access_association\" \"example\" {\n  access_association_source      = aws_vpc_endpoint.example.id\n  access_association_source_type = \"VPCE\"\n  domain_name_arn                = aws_api_gateway_domain_name.example.arn\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `access_association_source` - (Required) The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.\n* `access_association_source_type` - (Required) The type of the domain name access association source. Valid values are `VPCE`.\n* `domain_name_arn` - (Required) The ARN of the domain name.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the domain name access association.\n* `id` - (**Deprecated**, use `arn` instead) Internal identifier assigned to this domain name access association.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute. For example:\n\nimport {\n  to = aws_api_gateway_domain_name_access_association.example\n  id = \"arn:aws:apigateway:us-west-2:123456789012:/domainnameaccessassociations/domainname/12qmzgp2.9m7ilski.test+hykg7a12e7/vpcesource/vpce-05de3f8f82740a748\"\n}\n```\n\nUsing `terraform import`, import API Gateway domain name acces associations as using their `arn`. For example:\n\n```console\n% terraform import aws_api_gateway_domain_name_access_association.example arn:aws:apigateway:us-west-2:123456789012:/domainnameaccessassociations/domainname/12qmzgp2.9m7ilski.test+hykg7a12e7/vpcesource/vpce-05de3f8f82740a748\n```\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_domain_name_access_association\"\ndescription: |-\n  Creates a domain name access association resource between an access association source and a private custom domain name.\n---\n\n# Resource: aws_api_gateway_domain_name_access_association\n\nCreates a domain name access association resource between an access association source and a private custom domain name.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_domain_name_access_association\" \"example\" {\n  access_association_source      = aws_vpc_endpoint.example.id\n  access_association_source_type = \"VPCE\"\n  domain_name_arn                = aws_api_gateway_domain_name.example.arn\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `access_association_source` - (Required) The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.\n* `access_association_source_type` - (Required) The type of the domain name access association source. Valid values are `VPCE`.\n* `domain_name_arn` - (Required) The ARN of the domain name.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the domain name access association.\n* `id` - (**Deprecated**, use `arn` instead) Internal identifier assigned to this domain name access association.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_domain_name_access_association.example\n  identity = {\n    \"arn\" = \"arn:aws:apigateway:us-east-1::/domainnames/example.com/accessassociation\"\n  }\n}\n\nresource \"aws_api_gateway_domain_name_access_association\" \"example\" {\n  ### Configuration omitted for brevity ###\n}\n```\n\n### Identity Schema\n\n#### Required\n\n- `arn` (String) Amazon Resource Name (ARN) of the API Gateway domain name access association.\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway domain name acces associations using their `arn`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_domain_name_access_association.example\n  id = \"arn:aws:apigateway:us-west-2:123456789012:/domainnameaccessassociations/domainname/12qmzgp2.9m7ilski.test+hykg7a12e7/vpcesource/vpce-05de3f8f82740a748\"\n}\n```\n\nUsing `terraform import`, import API Gateway domain name acces associations as using their `arn`. For example:\n\n```console\n% terraform import aws_api_gateway_domain_name_access_association.example arn:aws:apigateway:us-west-2:123456789012:/domainnameaccessassociations/domainname/12qmzgp2.9m7ilski.test+hykg7a12e7/vpcesource/vpce-05de3f8f82740a748\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name_access_association"
  },
  {
    "name": "aws_api_gateway_gateway_response",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_gateway_response\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"main\" {\n  name = \"MyDemoAPI\"\n}\n\nresource \"aws_api_gateway_gateway_response\" \"test\" {\n  rest_api_id   = aws_api_gateway_rest_api.main.id\n  status_code   = \"401\"\n  response_type = \"UNAUTHORIZED\"\n\n  response_templates = {\n    \"application/json\" = \"{\\\"message\\\":$context.error.messageString}\"\n  }\n\n  response_parameters = {\n    \"gatewayresponse.header.Authorization\" = \"'Basic'\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be managed. See the [AWS Documentation](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints) for supported values. Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) String identifier of the associated REST API.\n* `response_type` - (Required) Response type of the associated GatewayResponse. See the [AWS Documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html) for supported values.\n* `status_code` - (Optional) HTTP status code of the Gateway Response.\n* `response_templates` - (Optional) Map of templates used to transform the response body.\n* `response_parameters` - (Optional) Map of parameters (paths, query strings and headers) of the Gateway Response.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_gateway_response` using `REST-API-ID/RESPONSE-TYPE`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_gateway_response\"\ndescription: |-\n  Provides an API Gateway Gateway Response for a REST API Gateway.\n---\n\n# Resource: aws_api_gateway_gateway_response\n\nProvides an API Gateway Gateway Response for a REST API Gateway.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"main\" {\n  name = \"MyDemoAPI\"\n}\n\nresource \"aws_api_gateway_gateway_response\" \"test\" {\n  rest_api_id   = aws_api_gateway_rest_api.main.id\n  status_code   = \"401\"\n  response_type = \"UNAUTHORIZED\"\n\n  response_templates = {\n    \"application/json\" = \"{\\\"message\\\":$context.error.messageString}\"\n  }\n\n  response_parameters = {\n    \"gatewayresponse.header.Authorization\" = \"'Basic'\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be managed. See the [AWS Documentation](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints) for supported values. Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) String identifier of the associated REST API.\n* `response_type` - (Required) Response type of the associated GatewayResponse. See the [AWS Documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html) for supported values.\n* `status_code` - (Optional) HTTP status code of the Gateway Response.\n* `response_templates` - (Optional) Map of templates used to transform the response body.\n* `response_parameters` - (Optional) Map of parameters (paths, query strings and headers) of the Gateway Response.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_gateway_response` using `REST-API-ID/RESPONSE-TYPE`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_gateway_response.example\n  id = \"12345abcde/UNAUTHORIZED\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_gateway_response` using `REST-API-ID/RESPONSE-TYPE`. For example:\n\n```console\n% terraform import aws_api_gateway_gateway_response.example 12345abcde/UNAUTHORIZED\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_gateway_response"
  },
  {
    "name": "aws_api_gateway_integration",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_integration\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id          = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id          = aws_api_gateway_resource.MyDemoResource.id\n  http_method          = aws_api_gateway_method.MyDemoMethod.http_method\n  type                 = \"MOCK\"\n  cache_key_parameters = [\"method.request.path.param\"]\n  cache_namespace      = \"foobar\"\n  timeout_milliseconds = 29000\n\n  request_parameters = {\n    \"integration.request.header.X-Authorization\" = \"'static'\"\n  }\n\n  # Transforms the incoming XML request to JSON\n  request_templates = {\n    \"application/xml\" = <<EOF\n{\n   \"body\" : $input.json('$')\n}\nEOF\n  }\n}\n```\n\n## Lambda integration\n\nvariable \"name\" {}\nvariable \"subnet_id\" {}\n\nresource \"aws_lb\" \"test\" {\n  name               = var.name\n  internal           = true",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_integration\"\ndescription: |-\n  Provides an HTTP Method Integration for an API Gateway Integration.\n---\n\n# Resource: aws_api_gateway_integration\n\nProvides an HTTP Method Integration for an API Gateway Integration.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id          = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id          = aws_api_gateway_resource.MyDemoResource.id\n  http_method          = aws_api_gateway_method.MyDemoMethod.http_method\n  type                 = \"MOCK\"\n  cache_key_parameters = [\"method.request.path.param\"]\n  cache_namespace      = \"foobar\"\n  timeout_milliseconds = 29000\n\n  request_parameters = {\n    \"integration.request.header.X-Authorization\" = \"'static'\"\n  }\n\n  # Transforms the incoming XML request to JSON\n  request_templates = {\n    \"application/xml\" = <<EOF\n{\n   \"body\" : $input.json('$')\n}\nEOF\n  }\n}\n```\n\n## Lambda integration\n\n```terraform\n# Variables\nvariable \"myregion\" {}\n\nvariable \"accountId\" {}\n\n# API Gateway\nresource \"aws_api_gateway_rest_api\" \"api\" {\n  name = \"myapi\"\n}\n\nresource \"aws_api_gateway_resource\" \"resource\" {\n  path_part   = \"resource\"\n  parent_id   = aws_api_gateway_rest_api.api.root_resource_id\n  rest_api_id = aws_api_gateway_rest_api.api.id\n}\n\nresource \"aws_api_gateway_method\" \"method\" {\n  rest_api_id   = aws_api_gateway_rest_api.api.id\n  resource_id   = aws_api_gateway_resource.resource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"integration\" {\n  rest_api_id             = aws_api_gateway_rest_api.api.id\n  resource_id             = aws_api_gateway_resource.resource.id\n  http_method             = aws_api_gateway_method.method.http_method\n  integration_http_method = \"POST\"\n  type                    = \"AWS_PROXY\"\n  uri                     = aws_lambda_function.lambda.invoke_arn\n}\n\n# Lambda\nresource \"aws_lambda_permission\" \"apigw_lambda\" {\n  statement_id  = \"AllowExecutionFromAPIGateway\"\n  action        = \"lambda:InvokeFunction\"\n  function_name = aws_lambda_function.lambda.function_name\n  principal     = \"apigateway.amazonaws.com\"\n\n  # More: http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n  source_arn = \"arn:aws:execute-api:${var.myregion}:${var.accountId}:${aws_api_gateway_rest_api.api.id}/*/${aws_api_gateway_method.method.http_method}${aws_api_gateway_resource.resource.path}\"\n}\n\nresource \"aws_lambda_function\" \"lambda\" {\n  filename      = \"lambda.zip\"\n  function_name = \"mylambda\"\n  role          = aws_iam_role.role.arn\n  handler       = \"lambda.lambda_handler\"\n  runtime       = \"python3.12\"\n\n  source_code_hash = filebase64sha256(\"lambda.zip\")\n}\n\n# IAM\ndata \"aws_iam_policy_document\" \"assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"lambda.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"role\" {\n  name               = \"myrole\"\n  assume_role_policy = data.aws_iam_policy_document.assume_role.json\n}\n```\n\n## VPC Link\n\n```terraform\nvariable \"name\" {}\nvariable \"subnet_id\" {}\n\nresource \"aws_lb\" \"test\" {\n  name               = var.name\n  internal           = true\n  load_balancer_type = \"network\"\n  subnets            = [var.subnet_id]\n}\n\nresource \"aws_api_gateway_vpc_link\" \"test\" {\n  name        = var.name\n  target_arns = [aws_lb.test.arn]\n}\n\nresource \"aws_api_gateway_rest_api\" \"test\" {\n  name = var.name\n}\n\nresource \"aws_api_gateway_resource\" \"test\" {\n  rest_api_id = aws_api_gateway_rest_api.test.id\n  parent_id   = aws_api_gateway_rest_api.test.root_resource_id\n  path_part   = \"test\"\n}\n\nresource \"aws_api_gateway_method\" \"test\" {\n  rest_api_id   = aws_api_gateway_rest_api.test.id\n  resource_id   = aws_api_gateway_resource.test.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n\n  request_models = {\n    \"application/json\" = \"Error\"\n  }\n}\n\nresource \"aws_api_gateway_integration\" \"test\" {\n  rest_api_id = aws_api_gateway_rest_api.test.id\n  resource_id = aws_api_gateway_resource.test.id\n  http_method = aws_api_gateway_method.test.http_method\n\n  request_templates = {\n    \"application/json\" = \"\"\n    \"application/xml\"  = \"#set($inputRoot = $input.path('$'))\\n{ }\"\n  }\n\n  request_parameters = {\n    \"integration.request.header.X-Authorization\" = \"'static",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration"
  },
  {
    "name": "aws_api_gateway_integration_response",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_integration_response\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  type        = \"MOCK\"\n}\n\nresource \"aws_api_gateway_method_response\" \"response_200\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = \"200\"\n}\n\nresource \"aws_api_gateway_integration_response\" \"MyDemoIntegrationResponse\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = aws_api_gateway_method_response.response_200.status_code\n\n  # Transforms the backend JSON response to XML\n  response_templates = {\n    \"application/xml\" = <<EOF\n#set($inputRoot = $input.path('$'))\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<message>\n    $inputRoot.body\n</message>\nEOF\n  }\n}\n```",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_integration_response\"\ndescription: |-\n  Provides an HTTP Method Integration Response for an API Gateway Resource.\n---\n\n# Resource: aws_api_gateway_integration_response\n\nProvides an HTTP Method Integration Response for an API Gateway Resource.\n\n-> **Note:** Depends on having `aws_api_gateway_integration` inside your rest api. To ensure this\nyou might need to add an explicit `depends_on` for clean runs.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  type        = \"MOCK\"\n}\n\nresource \"aws_api_gateway_method_response\" \"response_200\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = \"200\"\n}\n\nresource \"aws_api_gateway_integration_response\" \"MyDemoIntegrationResponse\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = aws_api_gateway_method_response.response_200.status_code\n\n  # Transforms the backend JSON response to XML\n  response_templates = {\n    \"application/xml\" = <<EOF\n#set($inputRoot = $input.path('$'))\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<message>\n    $inputRoot.body\n</message>\nEOF\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `http_method` - (Required) HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).\n* `resource_id` - (Required) API resource ID.\n* `rest_api_id` - (Required) ID of the associated REST API.\n* `status_code` - (Required) HTTP status code.\n\nThe following arguments are optional:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `content_handling` - (Optional) How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.\n* `response_parameters` - (Optional) Map of response parameters that can be read from the backend response. For example: `response_parameters = { \"method.response.header.X-Some-Header\" = \"integration.response.header.X-Some-Other-Header\" }`.\n* `response_templates` - (Optional) Map of templates used to transform the integration response body.\n* `selection_pattern` - (Optional) Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_integration_response` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD/STATUS-CODE`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_integration_response.example\n  id = \"12345abcde/67890fghij/GET/200\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_integration_response` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD/STATUS-CODE`. For example:\n\n```console\n% terraform import aws_api_gateway_integration_response.example 12345abcde/67890fghij/GET/200\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration_response"
  },
  {
    "name": "aws_api_gateway_method",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_method\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n```\n\n## Usage with Cognito User Pool Authorizer\n\nimport {\n  to = aws_api_gateway_method.example\n  id = \"12345abcde/67890fghij/GET\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_method` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD`. For example:\n\n```console\n% terraform import aws_api_gateway_method.example 12345abcde/67890fghij/GET\n```\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_method\"\ndescription: |-\n  Provides a HTTP Method for an API Gateway Resource.\n---\n\n# Resource: aws_api_gateway_method\n\nProvides a HTTP Method for an API Gateway Resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n```\n\n## Usage with Cognito User Pool Authorizer\n\n```terraform\nvariable \"cognito_user_pool_name\" {}\n\ndata \"aws_cognito_user_pools\" \"this\" {\n  name = var.cognito_user_pool_name\n}\n\nresource \"aws_api_gateway_rest_api\" \"this\" {\n  name = \"with-authorizer\"\n}\n\nresource \"aws_api_gateway_resource\" \"this\" {\n  rest_api_id = aws_api_gateway_rest_api.this.id\n  parent_id   = aws_api_gateway_rest_api.this.root_resource_id\n  path_part   = \"{proxy+}\"\n}\n\nresource \"aws_api_gateway_authorizer\" \"this\" {\n  name          = \"CognitoUserPoolAuthorizer\"\n  type          = \"COGNITO_USER_POOLS\"\n  rest_api_id   = aws_api_gateway_rest_api.this.id\n  provider_arns = data.aws_cognito_user_pools.this.arns\n}\n\nresource \"aws_api_gateway_method\" \"any\" {\n  rest_api_id   = aws_api_gateway_rest_api.this.id\n  resource_id   = aws_api_gateway_resource.this.id\n  http_method   = \"ANY\"\n  authorization = \"COGNITO_USER_POOLS\"\n  authorizer_id = aws_api_gateway_authorizer.this.id\n\n  request_parameters = {\n    \"method.request.path.proxy\" = true\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API\n* `resource_id` - (Required) API resource ID\n* `http_method` - (Required) HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)\n* `authorization` - (Required) Type of authorization used for the method (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)\n* `authorizer_id` - (Optional) Authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`\n* `authorization_scopes` - (Optional) Authorization scopes used when the authorization is `COGNITO_USER_POOLS`\n* `api_key_required` - (Optional) Specify if the method requires an API key\n* `operation_name` - (Optional) Function name that will be given to the method when generating an SDK through API Gateway. If omitted, API Gateway will generate a function name based on the resource path and HTTP verb.\n* `request_models` - (Optional) Map of the API models used for the request's content type\n  where key is the content type (e.g., `application/json`)\n  and value is either `Error`, `Empty` (built-in models) or `aws_api_gateway_model`'s `name`.\n* `request_validator_id` - (Optional) ID of a `aws_api_gateway_request_validator`\n* `request_parameters` - (Optional) Map of request parameters (from the path, query string and headers) that should be passed to the integration. The boolean value indicates whether the parameter is required (`true`) or optional (`false`).\n  For example: `request_parameters = {\"method.request.header.X-Some-Header\" = true \"method.request.querystring.some-query-param\" = true}` would define that the header `X-Some-Header` and the query string `some-query-param` must be provided in the request.\n\n## Attribute Reference\n\nThis resource exports no additional attributes.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_method` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_method.example\n  id = \"12345abcde/67890fghij/GET\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_method` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD`. For example:\n\n```console\n% terraform import aws_api_gateway_method.example 12345abcde/67890fghij/GET\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method"
  },
  {
    "name": "aws_api_gateway_method_response",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_method_response\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  type        = \"MOCK\"\n}\n\nresource \"aws_api_gateway_method_response\" \"response_200\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = \"200\"\n}\n```\n\n### Response with Custom Header and Model\n\nimport {\n  to = aws_api_gateway_method_response.example\n  id = \"12345abcde/67890fghij/GET/200\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_method_response` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD/STATUS-CODE`. For example:\n\n```console\n% terraform import aws_api_gateway_method_response.example 12345abcde/67890fghij/GET/200\n```\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_method_response\"\ndescription: |-\n  Provides an HTTP Method Response for an API Gateway Resource.\n---\n\n# Resource: aws_api_gateway_method_response\n\nProvides an HTTP Method Response for an API Gateway Resource. More information about API Gateway method responses can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-response.html).\n\n## Example Usage\n\n### Basic Response\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  type        = \"MOCK\"\n}\n\nresource \"aws_api_gateway_method_response\" \"response_200\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = \"200\"\n}\n```\n\n### Response with Custom Header and Model\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n\nresource \"aws_api_gateway_method\" \"MyDemoMethod\" {\n  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id   = aws_api_gateway_resource.MyDemoResource.id\n  http_method   = \"GET\"\n  authorization = \"NONE\"\n}\n\nresource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  type        = \"MOCK\"\n}\n\nresource \"aws_api_gateway_model\" \"MyDemoResponseModel\" {\n  rest_api_id  = aws_api_gateway_rest_api.MyDemoAPI.id\n  name         = \"MyDemoResponseModel\"\n  description  = \"API response for MyDemoMethod\"\n  content_type = \"application/json\"\n  schema = jsonencode({\n    \"$schema\" = \"http://json-schema.org/draft-04/schema#\"\n    title     = \"MyDemoResponse\"\n    type      = \"object\"\n    properties = {\n      Message = {\n        type = \"string\"\n      }\n    }\n  })\n}\n\nresource \"aws_api_gateway_method_response\" \"response_200\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  resource_id = aws_api_gateway_resource.MyDemoResource.id\n  http_method = aws_api_gateway_method.MyDemoMethod.http_method\n  status_code = \"200\"\n  response_models = {\n    \"application/json\" = \"MyDemoResponseModel\"\n  }\n  response_parameters = {\n    \"method.response.header.Content-Type\"     = false\n    \"method-response-header.X-My-Demo-Header\" = false\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) The string identifier of the associated REST API.\n* `resource_id` - (Required) The Resource identifier for the method resource.\n* `http_method` - (Required) The HTTP verb of the method resource (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).\n* `status_code` - (Required) The method response's status code.\n* `response_models` - (Optional) A map specifying the model resources used for the response's content type. Response models are represented as a key/value map, with a content type as the key and a Model name as the value.\n* `response_parameters` - (Optional) A map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header name and the associated value is a boolean flag indicating whether the method response parameter is required. The method response header names must match the pattern of `method.response.header.{name}`, where `name` is a valid and unique header name.\n\nThe response parameter names defined here are available in the integration response to be mapped from an integration response heade",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_response"
  },
  {
    "name": "aws_api_gateway_method_settings",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_method_settings\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n\nresource \"aws_api_gateway_method_settings\" \"all\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"*/*\"\n\n  settings {\n    metrics_enabled = true\n    logging_level   = \"ERROR\"",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_method_settings\"\ndescription: |-\n  Manages API Gateway Stage Method Settings\n---\n\n# Resource: aws_api_gateway_method_settings\n\nManages API Gateway Stage Method Settings. For example, CloudWatch logging and metrics.\n\n~> **NOTE:** We recommend using this resource in conjunction with the [`aws_api_gateway_stage` resource](api_gateway_stage.html) instead of a stage managed by the [`aws_api_gateway_deployment` resource](api_gateway_deployment.html) optional `stage_name` argument. Stages managed by the `aws_api_gateway_deployment` resource are recreated on redeployment and this resource will require a second apply to recreate the method settings.\n\n## Example Usage\n\n### End-to-end\n\nAn end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).\n\n### Basic Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n\nresource \"aws_api_gateway_method_settings\" \"all\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"*/*\"\n\n  settings {\n    metrics_enabled = true\n    logging_level   = \"ERROR\"\n  }\n}\n\nresource \"aws_api_gateway_method_settings\" \"path_specific\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"path1/GET\"\n\n  settings {\n    metrics_enabled = true\n    logging_level   = \"INFO\"\n  }\n}\n```\n\n### CloudWatch Logging and Tracing\n\nThe AWS Console API Gateway Editor displays multiple options for CloudWatch Logs that don't directly map to the options in the AWS API and Terraform. These examples show the `settings` blocks that are equivalent to the options the AWS Console gives for CloudWatch Logs.\n\n#### Off\n\n```terraform\nresource \"aws_api_gateway_method_settings\" \"path_specific\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"path1/GET\"\n\n  settings {\n    logging_level = \"OFF\"\n  }\n}\n```\n\n#### Errors Only\n\n```terraform\nresource \"aws_api_gateway_method_settings\" \"path_specific\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"path1/GET\"\n\n  settings {\n    logging_level      = \"ERROR\"\n    metrics_enabled    = true\n    data_trace_enabled = false\n  }\n}\n```\n\n#### Errors and Info Logs\n\n```terraform\nresource \"aws_api_gateway_method_settings\" \"path_specific\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"path1/GET\"\n\n  settings {\n    logging_level      = \"INFO\"\n    metrics_enabled    = true\n    data_trace_enabled = false\n  }\n}\n```\n\n#### Full Request and Response Logs\n\n```terraform\nresource \"aws_api_gateway_method_settings\" \"path_specific\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"path1/GET\"\n\n  settings {\n    logging_level      = \"INFO\"\n    metrics_enabled    = true\n    data_trace_enabled = true\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the REST API\n* `stage_name` - (Required) Name of the stage\n* `method_path` - (Required) Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, \"/\")`).\n* `settings` - (Required) S",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings"
  },
  {
    "name": "aws_api_gateway_model",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_model\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_model\" \"MyDemoModel\" {\n  rest_api_id  = aws_api_gateway_rest_api.MyDemoAPI.id\n  name         = \"user\"\n  description  = \"a JSON schema\"\n  content_type = \"application/json\"\n\n  schema = jsonencode({\n    type = \"object\"\n  })\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API\n* `name` - (Required) Name of the model\n* `description` - (Optional) Description of the model\n* `content_type` - (Required) Content type of the model\n* `schema` - (Required) Schema of the model in a JSON form\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the model\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_model` using `REST-API-ID/NAME`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_model\"\ndescription: |-\n  Provides a Model for a REST API Gateway.\n---\n\n# Resource: aws_api_gateway_model\n\nProvides a Model for a REST API Gateway.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_model\" \"MyDemoModel\" {\n  rest_api_id  = aws_api_gateway_rest_api.MyDemoAPI.id\n  name         = \"user\"\n  description  = \"a JSON schema\"\n  content_type = \"application/json\"\n\n  schema = jsonencode({\n    type = \"object\"\n  })\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API\n* `name` - (Required) Name of the model\n* `description` - (Optional) Description of the model\n* `content_type` - (Required) Content type of the model\n* `schema` - (Required) Schema of the model in a JSON form\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the model\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_model` using `REST-API-ID/NAME`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_model.example\n  id = \"12345abcde/example\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_model` using `REST-API-ID/NAME`. For example:\n\n```console\n% terraform import aws_api_gateway_model.example 12345abcde/example\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_model"
  },
  {
    "name": "aws_api_gateway_request_validator",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_request_validator\"",
    "example": "resource \"aws_api_gateway_request_validator\" \"example\" {\n  name                        = \"example\"\n  rest_api_id                 = aws_api_gateway_rest_api.example.id\n  validate_request_body       = true\n  validate_request_parameters = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the request validator\n* `rest_api_id` - (Required) ID of the associated Rest API\n* `validate_request_body` - (Optional) Boolean whether to validate request body. Defaults to `false`.\n* `validate_request_parameters` - (Optional) Boolean whether to validate request parameters. Defaults to `false`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Unique ID of the request validator\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_request_validator` using `REST-API-ID/REQUEST-VALIDATOR-ID`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_request_validator\"\ndescription: |-\n  Manages an API Gateway Request Validator.\n---\n\n# Resource: aws_api_gateway_request_validator\n\nManages an API Gateway Request Validator.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_request_validator\" \"example\" {\n  name                        = \"example\"\n  rest_api_id                 = aws_api_gateway_rest_api.example.id\n  validate_request_body       = true\n  validate_request_parameters = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the request validator\n* `rest_api_id` - (Required) ID of the associated Rest API\n* `validate_request_body` - (Optional) Boolean whether to validate request body. Defaults to `false`.\n* `validate_request_parameters` - (Optional) Boolean whether to validate request parameters. Defaults to `false`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Unique ID of the request validator\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_request_validator` using `REST-API-ID/REQUEST-VALIDATOR-ID`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_request_validator.example\n  id = \"12345abcde/67890fghij\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_request_validator` using `REST-API-ID/REQUEST-VALIDATOR-ID`. For example:\n\n```console\n% terraform import aws_api_gateway_request_validator.example 12345abcde/67890fghij\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_request_validator"
  },
  {
    "name": "aws_api_gateway_resource",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_resource\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API\n* `parent_id` - (Required) ID of the parent API resource\n* `path_part` - (Required) Last path segment of this API resource.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Resource's identifier.\n* `path` - Complete path for this API resource, including all parent paths.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_resource` using `REST-API-ID/RESOURCE-ID`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_resource\"\ndescription: |-\n  Provides an API Gateway Resource.\n---\n\n# Resource: aws_api_gateway_resource\n\nProvides an API Gateway Resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {\n  name        = \"MyDemoAPI\"\n  description = \"This is my API for demonstration purposes\"\n}\n\nresource \"aws_api_gateway_resource\" \"MyDemoResource\" {\n  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id\n  path_part   = \"mydemoresource\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API\n* `parent_id` - (Required) ID of the parent API resource\n* `path_part` - (Required) Last path segment of this API resource.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Resource's identifier.\n* `path` - Complete path for this API resource, including all parent paths.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_resource` using `REST-API-ID/RESOURCE-ID`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_resource.example\n  id = \"12345abcde/67890fghij\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_resource` using `REST-API-ID/RESOURCE-ID`. For example:\n\n```console\n% terraform import aws_api_gateway_resource.example 12345abcde/67890fghij\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_resource"
  },
  {
    "name": "aws_api_gateway_rest_api",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_rest_api\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n\n  endpoint_configuration {\n    types = [\"REGIONAL\"]\n  }\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n```\n\n### OpenAPI Specification with Private Endpoints\n\nUsing `put_rest_api_mode` = `merge` when importing the OpenAPI Specification, the AWS control plane will not delete all existing literal properties that are not explicitly set in the OpenAPI definition. Impacted API Gateway properties: ApiKeySourceType, BinaryMediaTypes, Description, EndpointConfiguration, MinimumCompressionSize, Name, Policy).",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_rest_api\"\ndescription: |-\n  Manages an API Gateway REST API.\n---\n\n# Resource: aws_api_gateway_rest_api\n\nManages an API Gateway REST API. The REST API can be configured via [importing an OpenAPI specification](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html) in the `body` argument (with other arguments serving as overrides) or via other Terraform resources to manage the resources ([`aws_api_gateway_resource` resource](api_gateway_resource.html)), methods ([`aws_api_gateway_method` resource](api_gateway_method.html)), integrations ([`aws_api_gateway_integration` resource](api_gateway_integration.html)), etc. of the REST API. Once the REST API is configured, the [`aws_api_gateway_deployment` resource](api_gateway_deployment.html) can be used along with the [`aws_api_gateway_stage` resource](api_gateway_stage.html) to publish the REST API.\n\n-> **Note:** Amazon API Gateway Version 1 resources are used for creating and deploying REST APIs. To create and deploy WebSocket and HTTP APIs, use Amazon API Gateway Version 2 [resources](/docs/providers/aws/r/apigatewayv2_api.html).\n\n!> **WARN:** When importing Open API Specifications with the `body` argument, by default the API Gateway REST API will be replaced with the Open API Specification thus removing any existing methods, resources, integrations, or endpoints. Endpoint mutations are asynchronous operations, and race conditions with DNS are possible. To overcome this limitation, use the `put_rest_api_mode` attribute and set it to `merge`.\n\n## Example Usage\n\n### OpenAPI Specification\n\nAn end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n\n  endpoint_configuration {\n    types = [\"REGIONAL\"]\n  }\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n```\n\n### OpenAPI Specification with Private Endpoints\n\nUsing `put_rest_api_mode` = `merge` when importing the OpenAPI Specification, the AWS control plane will not delete all existing literal properties that are not explicitly set in the OpenAPI definition. Impacted API Gateway properties: ApiKeySourceType, BinaryMediaTypes, Description, EndpointConfiguration, MinimumCompressionSize, Name, Policy).\n\n```terraform\ndata \"aws_availability_zones\" \"available\" {\n  state = \"available\"\n\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"opt-in-not-required\"]\n  }\n}\n\ndata \"aws_region\" \"current\" {}\n\nresource \"aws_vpc\" \"example\" {\n  cidr_block           = \"10.0.0.0/16\"\n  enable_dns_support   = true\n  enable_dns_hostnames = true\n}\n\nresource \"aws_default_security_group\" \"example\" {\n  vpc_id = aws_vpc.example.id\n}\n\nresource \"aws_subnet\" \"example\" {\n  availability_zone = data.aws_availability_zones.available.names[0]\n  cidr_block        = cidrsubnet(aws_vpc.example.cidr_block, 8, 0)\n  vpc_id            = aws_vpc.example.id\n}\n\nresource \"aws_vpc_endpoint\" \"example\" {\n  count = 3\n\n  private_dns_enabled = false\n  security_group_ids  = [aws_default_security_group.example.id]\n  service_name        = \"com.amazonaws.${data.aws_region.current.region}.execute-api\"\n  subnet_ids          = [aws_subnet.example.id]\n  vpc_endpoint_type   = \"Interface\"\n  vpc_id              = aws_vpc.example.id\n}\n\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name              = \"example\"\n  put_rest_api_mode = \"merge\"\n\n  endpoint_configuration {\n    types            = [\"PRIVATE\"",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
  },
  {
    "name": "aws_api_gateway_rest_api_policy",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_rest_api_policy\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"test\" {\n  name = \"example-rest-api\"\n}\n\ndata \"aws_iam_policy_document\" \"test\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"*\"]\n    }\n\n    actions   = [\"execute-api:Invoke\"]\n    resources = [\"${aws_api_gateway_rest_api.test.execution_arn}/*\"]\n\n    condition {\n      test     = \"IpAddress\"\n      variable = \"aws:SourceIp\"\n      values   = [\"123.123.123.123/32\"]\n    }\n  }\n}\nresource \"aws_api_gateway_rest_api_policy\" \"test\" {\n  rest_api_id = aws_api_gateway_rest_api.test.id\n  policy      = data.aws_iam_policy_document.test.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the REST API.\n* `policy` - (Required) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the REST API\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_rest_api_policy` using the REST API ID. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_rest_api_policy\"\ndescription: |-\n  Provides an API Gateway REST API Policy.\n---\n\n# Resource: aws_api_gateway_rest_api_policy\n\nProvides an API Gateway REST API Policy.\n\n-> **Note:** Amazon API Gateway Version 1 resources are used for creating and deploying REST APIs. To create and deploy WebSocket and HTTP APIs, use Amazon API Gateway Version 2 [resources](/docs/providers/aws/r/apigatewayv2_api.html).\n\n## Example Usage\n\n### Basic\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"test\" {\n  name = \"example-rest-api\"\n}\n\ndata \"aws_iam_policy_document\" \"test\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"*\"]\n    }\n\n    actions   = [\"execute-api:Invoke\"]\n    resources = [\"${aws_api_gateway_rest_api.test.execution_arn}/*\"]\n\n    condition {\n      test     = \"IpAddress\"\n      variable = \"aws:SourceIp\"\n      values   = [\"123.123.123.123/32\"]\n    }\n  }\n}\nresource \"aws_api_gateway_rest_api_policy\" \"test\" {\n  rest_api_id = aws_api_gateway_rest_api.test.id\n  policy      = data.aws_iam_policy_document.test.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the REST API.\n* `policy` - (Required) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the REST API\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_rest_api_policy` using the REST API ID. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_rest_api_policy.example\n  id = \"12345abcde\"\n}\n```\n\nUsing `terraform import`, import `aws_api_gateway_rest_api_policy` using the REST API ID. For example:\n\n```console\n% terraform import aws_api_gateway_rest_api_policy.example 12345abcde\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api_policy"
  },
  {
    "name": "aws_api_gateway_rest_api_put",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_rest_api_put\"",
    "example": "resource \"aws_api_gateway_rest_api_put\" \"example\" {\n  body = jsonencode({\n    swagger = \"2.0\"\n    info = {\n      title   = \"Example API\"\n      version = \"v1\"\n    }\n    schemes = [\"https\"]\n    paths = {\n      \"/example\" = {\n        get = {\n          responses = {\n            \"200\" = {\n              description = \"OK\"\n            }\n          }\n          x-amazon-apigateway-integration = {\n            httpMethod = \"GET\"\n            type       = \"HTTP\"\n            responses = {\n              default = {\n                statusCode = 200\n              }\n            }\n            uri = \"https://api.example.com/\"\n          }\n        }\n      }\n    }\n  })\n\n  fail_on_warnings = true\n  rest_api_id      = aws_api_gateway_rest_api.example.id\n}\n```\n\n### Multi-stage\n\nThis example demonstrates how to use `aws_api_gateway_rest_api_put` to manage blue-green deployments and multi-stage APIs in Amazon API Gateway with Swagger/OpenAPI. The new resource provides native support for a simple and reliable process.\n\nimport {\n  to = aws_api_gateway_rest_api_put.example\n  id = \"import-id-12345678\"\n}\n```\n\nUsing `terraform import`, import API Gateway REST API Put using the `rest_api_id`. For example:\n\n```console\n% terraform import aws_api_gateway_rest_api_put.example import-id-12345678",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_rest_api_put\"\ndescription: |-\n  Terraform resource for updating an AWS API Gateway REST API.\n---\n# Resource: aws_api_gateway_rest_api_put\n\nTerraform resource for updating an AWS API Gateway REST API with a new API description.\n\n~> **NOTE:** When importing an OpenAPI specification using the `body` argument, the `info.title` field updates the `name` of the [`aws_api_gateway_rest_api`](/docs/providers/aws/r/api_gateway_rest_api.html). If the imported `title` differs from the configured `name`, Terraform will report the difference.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api_put\" \"example\" {\n  body = jsonencode({\n    swagger = \"2.0\"\n    info = {\n      title   = \"Example API\"\n      version = \"v1\"\n    }\n    schemes = [\"https\"]\n    paths = {\n      \"/example\" = {\n        get = {\n          responses = {\n            \"200\" = {\n              description = \"OK\"\n            }\n          }\n          x-amazon-apigateway-integration = {\n            httpMethod = \"GET\"\n            type       = \"HTTP\"\n            responses = {\n              default = {\n                statusCode = 200\n              }\n            }\n            uri = \"https://api.example.com/\"\n          }\n        }\n      }\n    }\n  })\n\n  fail_on_warnings = true\n  rest_api_id      = aws_api_gateway_rest_api.example.id\n}\n```\n\n### Multi-stage\n\nThis example demonstrates how to use `aws_api_gateway_rest_api_put` to manage blue-green deployments and multi-stage APIs in Amazon API Gateway with Swagger/OpenAPI. The new resource provides native support for a simple and reliable process.\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  name = \"Example API\"\n}\n\nresource \"aws_api_gateway_rest_api_put\" \"examplev1\" {\n  body             = file(\"v1.yaml\")\n  fail_on_warnings = true\n  rest_api_id      = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(file(\"v1.yaml\"))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_deployment\" \"examplev1\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = aws_api_gateway_rest_api_put.examplev1.triggers.redeployment\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"examplev1\" {\n  stage_name    = \"v1\"\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  deployment_id = aws_api_gateway_deployment.examplev1.id\n}\n\nresource \"aws_api_gateway_rest_api_put\" \"examplev2\" {\n  depends_on = [\n    aws_api_gateway_stage.examplev1\n  ]\n\n  body             = file(\"v2.yaml\")\n  fail_on_warnings = true\n  rest_api_id      = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(file(\"v2.yaml\"))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_deployment\" \"examplev2\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = aws_api_gateway_rest_api_put.examplev2.triggers.redeployment\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"examplev2\" {\n  stage_name    = \"v2\"\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  deployment_id = aws_api_gateway_deployment.examplev2.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `body` - (Required) PUT request body containing external API definitions. Currently, only OpenAPI definition JSON/YAML files are supported. The maximum size of the API definition file is 6MB.\n* `rest_api_id` - (Required) Identifier of the associated REST API.\n\nThe following arguments are optional:\n\n* `region` \u2013 (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `fail_on_warnings` - (Optional) Whether to rollback the API update when a warning is encountered. The default value is `false`.\n* `parameters` - (Optional) Map of customizations for importing the specification in the `body` argument. For example, to exclude DocumentationParts from an imported API, use `ignore = \"documentation\"`. Additional documentation, including other parameters such as `basepath`, can be found in the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html).\n* `triggers` - (Optional) Map of arbitrary keys and values that, when changed, will trigger a redeployment. To force a redeployment without changing these keys/values, use the [`-replace` opt",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api_put"
  },
  {
    "name": "aws_api_gateway_stage",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_stage\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n\nresource \"aws_api_gateway_method_settings\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"*/*\"\n\n  settings {\n    metrics_enabled = true\n    logging_level   = \"INFO\"",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_stage\"\ndescription: |-\n  Manages an API Gateway Stage.\n---\n\n# Resource: aws_api_gateway_stage\n\nManages an API Gateway Stage. A stage is a named reference to a deployment, which can be done via the [`aws_api_gateway_deployment` resource](api_gateway_deployment.html). Stages can be optionally managed further with the [`aws_api_gateway_base_path_mapping` resource](api_gateway_base_path_mapping.html), [`aws_api_gateway_domain_name` resource](api_gateway_domain_name.html), and [`aws_api_method_settings` resource](api_gateway_method_settings.html). For more information, see the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html).\n\n## Example Usage\n\nAn end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"example\"\n}\n\nresource \"aws_api_gateway_method_settings\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  method_path = \"*/*\"\n\n  settings {\n    metrics_enabled = true\n    logging_level   = \"INFO\"\n  }\n}\n```\n\n### Managing the API Logging CloudWatch Log Group\n\nAPI Gateway provides the ability to [enable CloudWatch API logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html). To manage the CloudWatch Log Group when this feature is enabled, the [`aws_cloudwatch_log_group` resource](/docs/providers/aws/r/cloudwatch_log_group.html) can be used where the name matches the API Gateway naming convention. If the CloudWatch Log Group previously exists, import the [`aws_cloudwatch_log_group` resource into Terraform](/docs/providers/aws/r/cloudwatch_log_group.html#import) as a one time operation. You can recreate the environment without import.\n\n-> The below configuration uses [`depends_on`](https://www.terraform.io/language/meta-arguments/depends_on) to prevent ordering issues with API Gateway automatically creating the log group first and a variable for naming consistency. Other ordering and naming methodologies may be more appropriate for your environment.\n\n```terraform\nvariable \"stage_name\" {\n  default = \"example\"\n  type    = string\n}\n\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  # ... other configuration ...\n}\n\nresource \"aws_api_gateway_stage\" \"example\" {\n  depends_on = [aws_cloudwatch_log_group.example]\n\n  stage_name = var.stage_name\n  # ... other configuration ...\n}\n\nresource \"aws_cloudwatch_log_group\" \"example\" {\n  name              = \"API-Gateway-Execution-Logs_${aws_api_gateway_rest_api.example.id}/${var.stage_name}\"\n  retention_in_days = 7\n  # ... potentially other configuration ...\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API\n* `stage_name` - (Required) Name of the stage\n* `deployment_id` - (Required) ID of the deployment that the stage points to\n* `access_log_settings` - (Optional) Enables access logs for the API stage. See [Access Log Settings](#access-log-settings) below.\n* `cache_cluster_enabled` - (Optional) Whether a cache cluster is enabled for the stage\n* `cache_cluster_size` - (Optional) Size of the cache cluster for the stage, if enabled. Allowed values include `0.5`, `1.6`, `6.1`, `13.5`, `28.4`, `58.2`, `118` and `237`.\n* `canary_settings` - (Optional) Configuration settings of a canary deployment. See [Canary Settings](#canary-settings) below.\n* `client_certificate_id` - (Optional) Identifier of a client certificate",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage"
  },
  {
    "name": "aws_api_gateway_usage_plan",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_usage_plan\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"development\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"development\"\n}\n\nresource \"aws_api_gateway_stage\" \"production\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"production\"\n}\n\nresource \"aws_api_gateway_usage_plan\" \"example\" {\n  name         = \"my-usage-plan\"",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_usage_plan\"\ndescription: |-\n  Provides an API Gateway Usage Plan.\n---\n\n# Resource: aws_api_gateway_usage_plan\n\nProvides an API Gateway Usage Plan.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"example\" {\n  body = jsonencode({\n    openapi = \"3.0.1\"\n    info = {\n      title   = \"example\"\n      version = \"1.0\"\n    }\n    paths = {\n      \"/path1\" = {\n        get = {\n          x-amazon-apigateway-integration = {\n            httpMethod           = \"GET\"\n            payloadFormatVersion = \"1.0\"\n            type                 = \"HTTP_PROXY\"\n            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"\n          }\n        }\n      }\n    }\n  })\n\n  name = \"example\"\n}\n\nresource \"aws_api_gateway_deployment\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n\n  triggers = {\n    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_api_gateway_stage\" \"development\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"development\"\n}\n\nresource \"aws_api_gateway_stage\" \"production\" {\n  deployment_id = aws_api_gateway_deployment.example.id\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  stage_name    = \"production\"\n}\n\nresource \"aws_api_gateway_usage_plan\" \"example\" {\n  name         = \"my-usage-plan\"\n  description  = \"my description\"\n  product_code = \"MYCODE\"\n\n  api_stages {\n    api_id = aws_api_gateway_rest_api.example.id\n    stage  = aws_api_gateway_stage.development.stage_name\n  }\n\n  api_stages {\n    api_id = aws_api_gateway_rest_api.example.id\n    stage  = aws_api_gateway_stage.production.stage_name\n  }\n\n  quota_settings {\n    limit  = 20\n    offset = 2\n    period = \"WEEK\"\n  }\n\n  throttle_settings {\n    burst_limit = 5\n    rate_limit  = 10\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the usage plan.\n* `description` - (Optional) Description of a usage plan.\n* `api_stages` - (Optional) Associated [API stages](#api-stages-arguments) of the usage plan.\n* `quota_settings` - (Optional) The [quota settings](#quota-settings-arguments) of the usage plan.\n* `throttle_settings` - (Optional) The [throttling limits](#throttling-settings-arguments) of the usage plan.\n* `product_code` - (Optional) AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n#### Api Stages arguments\n\n* `api_id` (Required) - API Id of the associated API stage in a usage plan.\n* `stage` (Required) - API stage name of the associated API stage in a usage plan.\n* `throttle` - (Optional) The [throttling limits](#throttle) of the usage plan.\n\n##### Throttle\n\n* `path` (Required) - Method to apply the throttle settings for. Specfiy the path and method, for example `/test/GET`.\n* `burst_limit` (Optional) - The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.\n* `rate_limit` (Optional) - The API request steady-state rate limit.\n\n#### Quota Settings Arguments\n\n* `limit` (Optional) - Maximum number of requests that can be made in a given time period.\n* `offset` (Optional) - Number of requests subtracted from the given limit in the initial time period.\n* `period` (Optional) - Time period in which the limit applies. Valid values are \"DAY\", \"WEEK\" or \"MONTH\".\n\n#### Throttling Settings Arguments\n\n* `burst_limit` (Optional) - The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.\n* `rate_limit` (Optional) - The API request steady-state rate limit.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the API resource\n* `name` - Name of the usage plan.\n* `description` - Description of a usage plan.\n* `api_stages` - Associated API stages of the usage plan.\n* `quota_settings` - Quota of the usage plan.\n* `throttle_settings` - Throttling limits of the usage plan.\n* `product_code` - AWS Marketplace product identifier to associate with the usage plan as a SaaS",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_usage_plan"
  },
  {
    "name": "aws_api_gateway_usage_plan_key",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_usage_plan_key\"",
    "example": "resource \"aws_api_gateway_rest_api\" \"test\" {\n  name = \"MyDemoAPI\"\n}\n\n# ...\n\nresource \"aws_api_gateway_usage_plan\" \"myusageplan\" {\n  name = \"my_usage_plan\"\n\n  api_stages {\n    api_id = aws_api_gateway_rest_api.test.id\n    stage  = aws_api_gateway_stage.foo.stage_name\n  }\n}\n\nresource \"aws_api_gateway_api_key\" \"mykey\" {\n  name = \"my_key\"\n}\n\nresource \"aws_api_gateway_usage_plan_key\" \"main\" {\n  key_id        = aws_api_gateway_api_key.mykey.id\n  key_type      = \"API_KEY\"\n  usage_plan_id = aws_api_gateway_usage_plan.myusageplan.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `key_id` - (Required) Identifier of the API key resource.\n* `key_type` - (Required) Type of the API key resource. Currently, the valid key type is API_KEY.\n* `usage_plan_id` - (Required) Id of the usage plan resource representing to associate the key to.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of a usage plan key.\n* `key_id` - Identifier of the API gateway key resource.\n* `key_type` - Type of a usage plan key. Currently, the valid key type is API_KEY.\n* `usage_plan_id` - ID of the API resource\n* `name` - Name of a usage plan key.\n* `value` - Value of a usage plan key.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS API Gateway Usage Plan Key using the `USAGE-PLAN-ID/USAGE-PLAN-KEY-ID`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_usage_plan_key\"\ndescription: |-\n  Provides an API Gateway Usage Plan Key.\n---\n\n# Resource: aws_api_gateway_usage_plan_key\n\nProvides an API Gateway Usage Plan Key.\n\n## Example Usage\n\n```terraform\nresource \"aws_api_gateway_rest_api\" \"test\" {\n  name = \"MyDemoAPI\"\n}\n\n# ...\n\nresource \"aws_api_gateway_usage_plan\" \"myusageplan\" {\n  name = \"my_usage_plan\"\n\n  api_stages {\n    api_id = aws_api_gateway_rest_api.test.id\n    stage  = aws_api_gateway_stage.foo.stage_name\n  }\n}\n\nresource \"aws_api_gateway_api_key\" \"mykey\" {\n  name = \"my_key\"\n}\n\nresource \"aws_api_gateway_usage_plan_key\" \"main\" {\n  key_id        = aws_api_gateway_api_key.mykey.id\n  key_type      = \"API_KEY\"\n  usage_plan_id = aws_api_gateway_usage_plan.myusageplan.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `key_id` - (Required) Identifier of the API key resource.\n* `key_type` - (Required) Type of the API key resource. Currently, the valid key type is API_KEY.\n* `usage_plan_id` - (Required) Id of the usage plan resource representing to associate the key to.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of a usage plan key.\n* `key_id` - Identifier of the API gateway key resource.\n* `key_type` - Type of a usage plan key. Currently, the valid key type is API_KEY.\n* `usage_plan_id` - ID of the API resource\n* `name` - Name of a usage plan key.\n* `value` - Value of a usage plan key.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS API Gateway Usage Plan Key using the `USAGE-PLAN-ID/USAGE-PLAN-KEY-ID`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_usage_plan_key.key\n  id = \"12345abcde/zzz\"\n}\n```\n\nUsing `terraform import`, import AWS API Gateway Usage Plan Key using the `USAGE-PLAN-ID/USAGE-PLAN-KEY-ID`. For example:\n\n```console\n% terraform import aws_api_gateway_usage_plan_key.key 12345abcde/zzz\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_usage_plan_key"
  },
  {
    "name": "aws_api_gateway_vpc_link",
    "type": "resource",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_vpc_link\"",
    "example": "resource \"aws_lb\" \"example\" {\n  name               = \"example\"\n  internal           = true\n  load_balancer_type = \"network\"\n\n  subnet_mapping {\n    subnet_id = \"12345\"\n  }\n}\n\nresource \"aws_api_gateway_vpc_link\" \"example\" {\n  name        = \"example\"\n  description = \"example description\"\n  target_arns = [aws_lb.example.arn]\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name used to label and identify the VPC link.\n* `description` - (Optional) Description of the VPC link.\n* `target_arns` - (Required, ForceNew) List of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Identifier of the VpcLink.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway VPC Link using the `id`. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_vpc_link\"\ndescription: |-\n  Provides an API Gateway VPC Link.\n---\n\n# Resource: aws_api_gateway_vpc_link\n\nProvides an API Gateway VPC Link.\n\n-> **Note:** Amazon API Gateway Version 1 VPC Links enable private integrations that connect REST APIs to private resources in a VPC.\nTo enable private integration for HTTP APIs, use the Amazon API Gateway Version 2 VPC Link [resource](/docs/providers/aws/r/apigatewayv2_vpc_link.html).\n\n## Example Usage\n\n```terraform\nresource \"aws_lb\" \"example\" {\n  name               = \"example\"\n  internal           = true\n  load_balancer_type = \"network\"\n\n  subnet_mapping {\n    subnet_id = \"12345\"\n  }\n}\n\nresource \"aws_api_gateway_vpc_link\" \"example\" {\n  name        = \"example\"\n  description = \"example description\"\n  target_arns = [aws_lb.example.arn]\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name used to label and identify the VPC link.\n* `description` - (Optional) Description of the VPC link.\n* `target_arns` - (Required, ForceNew) List of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Identifier of the VpcLink.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway VPC Link using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_api_gateway_vpc_link.example\n  id = \"12345abcde\"\n}\n```\n\nUsing `terraform import`, import API Gateway VPC Link using the `id`. For example:\n\n```console\n% terraform import aws_api_gateway_vpc_link.example 12345abcde\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_vpc_link"
  },
  {
    "name": "aws_apigatewayv2_api",
    "type": "resource",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_api\"",
    "example": "resource \"aws_apigatewayv2_api\" \"example\" {\n  name                       = \"example-websocket-api\"\n  protocol_type              = \"WEBSOCKET\"\n  route_selection_expression = \"$request.body.action\"\n}\n```\n\n### Basic HTTP API\n\nimport {\n  to = aws_apigatewayv2_api.example\n  id = \"aabbccddee\"\n}\n```\n\nUsing `terraform import`, import `aws_apigatewayv2_api` using the API identifier. For example:\n\n```console\n% terraform import aws_apigatewayv2_api.example aabbccddee\n```\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_api\"\ndescription: |-\n  Manages an Amazon API Gateway Version 2 API.\n---\n\n# Resource: aws_apigatewayv2_api\n\nManages an Amazon API Gateway Version 2 API.\n\n-> **Note:** Amazon API Gateway Version 2 resources are used for creating and deploying WebSocket and HTTP APIs. To create and deploy REST APIs, use Amazon API Gateway Version 1 [resources](/docs/providers/aws/r/api_gateway_rest_api.html).\n\n## Example Usage\n\n### Basic WebSocket API\n\n```terraform\nresource \"aws_apigatewayv2_api\" \"example\" {\n  name                       = \"example-websocket-api\"\n  protocol_type              = \"WEBSOCKET\"\n  route_selection_expression = \"$request.body.action\"\n}\n```\n\n### Basic HTTP API\n\n```terraform\nresource \"aws_apigatewayv2_api\" \"example\" {\n  name          = \"example-http-api\"\n  protocol_type = \"HTTP\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the API. Must be less than or equal to 128 characters in length.\n* `protocol_type` - (Required) API protocol. Valid values: `HTTP`, `WEBSOCKET`.\n* `api_key_selection_expression` - (Optional) An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).\nValid values: `$context.authorizer.usageIdentifierKey`, `$request.header.x-api-key`. Defaults to `$request.header.x-api-key`.\nApplicable for WebSocket APIs.\n* `cors_configuration` - (Optional) Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html). Applicable for HTTP APIs.\n* `credentials_arn` - (Optional) Part of _quick create_. Specifies any credentials required for the integration. Applicable for HTTP APIs.\n* `description` - (Optional) Description of the API. Must be less than or equal to 1024 characters in length.\n* `disable_execute_api_endpoint` - (Optional) Whether clients can invoke the API by using the default `execute-api` endpoint.\nBy default, clients can invoke the API with the default `{api_id}.execute-api.{region}.amazonaws.com endpoint`.\nTo require that clients use a custom domain name to invoke the API, disable the default endpoint.\n* `ip_address_type` - (Optional) The IP address types that can invoke the API. Valid values: `ipv4`, `dualstack`. Use `ipv4` to allow only IPv4 addresses to invoke your API, or use `dualstack` to allow both IPv4 and IPv6 addresses to invoke your API. Defaults to `ipv4`.\n* `route_key` - (Optional) Part of _quick create_. Specifies any [route key](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-routes.html). Applicable for HTTP APIs.\n* `route_selection_expression` - (Optional) The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.\nDefaults to `$request.method $request.path`.\n* `tags` - (Optional) Map of tags to assign to the API. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `target` - (Optional) Part of _quick create_. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes.\nFor HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN.\nThe type of the integration will be `HTTP_PROXY` or `AWS_PROXY`, respectively. Applicable for HTTP APIs.\n* `body` - (Optional) An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.\n* `version` - (Optional) Version identifier for the API. Must be between 1 and 64 characters in length.\n* `fail_on_warnings` - (Optional) Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to `false`. Applicable for HTTP APIs.\n\n__Note__: If the `body` argument is provided, the OpenAPI specification will be used to configure the integrations and route for the HTTP API. If this argument is provided, the following resources should not be managed as separate ones, as updates may cause manual resource updates to be overwritten:\n\n* `aws_apigatewayv2_integration`\n* `aws_apigatewayv2_route`\n\nFurther more, the `name`, `description`, `cors_configuration`,",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_api"
  },
  {
    "name": "aws_apigatewayv2_api_mapping",
    "type": "resource",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_api_mapping\"",
    "example": "resource \"aws_apigatewayv2_api_mapping\" \"example\" {\n  api_id      = aws_apigatewayv2_api.example.id\n  domain_name = aws_apigatewayv2_domain_name.example.id\n  stage       = aws_apigatewayv2_stage.example.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n* `domain_name` - (Required) Domain name. Use the [`aws_apigatewayv2_domain_name`](/docs/providers/aws/r/apigatewayv2_domain_name.html) resource to configure a domain name.\n* `stage` - (Required) API stage. Use the [`aws_apigatewayv2_stage`](/docs/providers/aws/r/apigatewayv2_stage.html) resource to configure an API stage.\n* `api_mapping_key` - (Optional) The API mapping key. Refer to [REST API](https://docs.aws.amazon.com/apigateway/latest/developerguide/rest-api-mappings.html), [HTTP API](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-mappings.html) or [WebSocket API](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-mappings.html).\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - API mapping identifier.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_apigatewayv2_api_mapping` using the API mapping identifier and domain name. For example:\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_api_mapping\"\ndescription: |-\n  Manages an Amazon API Gateway Version 2 API mapping.\n---\n\n# Resource: aws_apigatewayv2_api_mapping\n\nManages an Amazon API Gateway Version 2 API mapping.\nMore information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).\n\n## Example Usage\n\n### Basic\n\n```terraform\nresource \"aws_apigatewayv2_api_mapping\" \"example\" {\n  api_id      = aws_apigatewayv2_api.example.id\n  domain_name = aws_apigatewayv2_domain_name.example.id\n  stage       = aws_apigatewayv2_stage.example.id\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n* `domain_name` - (Required) Domain name. Use the [`aws_apigatewayv2_domain_name`](/docs/providers/aws/r/apigatewayv2_domain_name.html) resource to configure a domain name.\n* `stage` - (Required) API stage. Use the [`aws_apigatewayv2_stage`](/docs/providers/aws/r/apigatewayv2_stage.html) resource to configure an API stage.\n* `api_mapping_key` - (Optional) The API mapping key. Refer to [REST API](https://docs.aws.amazon.com/apigateway/latest/developerguide/rest-api-mappings.html), [HTTP API](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-mappings.html) or [WebSocket API](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-mappings.html).\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - API mapping identifier.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_apigatewayv2_api_mapping` using the API mapping identifier and domain name. For example:\n\n```terraform\nimport {\n  to = aws_apigatewayv2_api_mapping.example\n  id = \"1122334/ws-api.example.com\"\n}\n```\n\nUsing `terraform import`, import `aws_apigatewayv2_api_mapping` using the API mapping identifier and domain name. For example:\n\n```console\n% terraform import aws_apigatewayv2_api_mapping.example 1122334/ws-api.example.com\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_api_mapping"
  },
  {
    "name": "aws_apigatewayv2_authorizer",
    "type": "resource",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_authorizer\"",
    "example": "resource \"aws_apigatewayv2_authorizer\" \"example\" {\n  api_id           = aws_apigatewayv2_api.example.id\n  authorizer_type  = \"REQUEST\"\n  authorizer_uri   = aws_lambda_function.example.invoke_arn\n  identity_sources = [\"route.request.header.Auth\"]\n  name             = \"example-authorizer\"\n}\n```\n\n### Basic HTTP API\n\nimport {\n  to = aws_apigatewayv2_authorizer.example\n  id = \"aabbccddee/1122334\"\n}\n```\n\nUsing `terraform import`, import `aws_apigatewayv2_authorizer` using the API identifier and authorizer identifier. For example:\n\n```console\n% terraform import aws_apigatewayv2_authorizer.example aabbccddee/1122334\n```\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_authorizer\"\ndescription: |-\n  Manages an Amazon API Gateway Version 2 authorizer.\n---\n\n# Resource: aws_apigatewayv2_authorizer\n\nManages an Amazon API Gateway Version 2 authorizer.\nMore information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).\n\n## Example Usage\n\n### Basic WebSocket API\n\n```terraform\nresource \"aws_apigatewayv2_authorizer\" \"example\" {\n  api_id           = aws_apigatewayv2_api.example.id\n  authorizer_type  = \"REQUEST\"\n  authorizer_uri   = aws_lambda_function.example.invoke_arn\n  identity_sources = [\"route.request.header.Auth\"]\n  name             = \"example-authorizer\"\n}\n```\n\n### Basic HTTP API\n\n```terraform\nresource \"aws_apigatewayv2_authorizer\" \"example\" {\n  api_id                            = aws_apigatewayv2_api.example.id\n  authorizer_type                   = \"REQUEST\"\n  authorizer_uri                    = aws_lambda_function.example.invoke_arn\n  identity_sources                  = [\"$request.header.Authorization\"]\n  name                              = \"example-authorizer\"\n  authorizer_payload_format_version = \"2.0\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n* `authorizer_type` - (Required) Authorizer type. Valid values: `JWT`, `REQUEST`.\nSpecify `REQUEST` for a Lambda function using incoming request parameters.\nFor HTTP APIs, specify `JWT` to use JSON Web Tokens.\n* `name` - (Required) Name of the authorizer. Must be between 1 and 128 characters in length.\n* `authorizer_credentials_arn` - (Optional) Required credentials as an IAM role for API Gateway to invoke the authorizer.\nSupported only for `REQUEST` authorizers.\n* `authorizer_payload_format_version` - (Optional) Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.\nValid values: `1.0`, `2.0`.\n* `authorizer_result_ttl_in_seconds` - (Optional) Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.\nIf it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to `300`.\nSupported only for HTTP API Lambda authorizers.\n* `authorizer_uri` - (Optional) Authorizer's Uniform Resource Identifier (URI).\nFor `REQUEST` authorizers this must be a well-formed Lambda function URI, such as the `invoke_arn` attribute of the [`aws_lambda_function`](/docs/providers/aws/r/lambda_function.html) resource.\nSupported only for `REQUEST` authorizers. Must be between 1 and 2048 characters in length.\n* `enable_simple_responses` - (Optional) Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.\nSupported only for HTTP APIs.\n* `identity_sources` - (Optional) Identity sources for which authorization is requested.\nFor `REQUEST` authorizers the value is a list of one or more mapping expressions of the specified request parameters.\nFor `JWT` authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.\n* `jwt_configuration` - (Optional) Configuration of a JWT authorizer. Required for the `JWT` authorizer type.\nSupported only for HTTP APIs.\n\nThe `jwt_configuration` object supports the following:\n\n* `audience` - (Optional) List of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.\n* `issuer` - (Optional) Base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the [`aws_cognito_user_pool`](/docs/providers/aws/r/cognito_user_pool.html) resource.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Authorizer identifier.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `delete` - (Default `30m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_apigatewayv2_authorizer` using the API identifier and authorizer identifier. For example:\n\n```terraform\nimport {\n  to = aws_apigatewayv2_authorizer.example\n  id = \"aabbccddee/1122334\"\n}\n```\n\nUsing `terraform import`, import `aws_apigatewayv2_authorizer` using the API identifier and authorizer identifier. For example:\n\n```console\n% terraform import aws_apigatewayv2_authorizer.example aabbccddee/1122334\n```\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_authorizer"
  },
  {
    "name": "aws_account_primary_contact",
    "type": "data_source",
    "description": "subcategory: \"Account Management\" layout: \"aws\" page_title: \"AWS: aws_account_primary_contact\"",
    "example": "data \"aws_account_primary_contact\" \"test\" {}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `account_id` - (Optional) The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `address_line_1` - The first line of the primary contact address.\n* `address_line_2` - The second line of the primary contact address.\n* `address_line_3` - The third line of the primary contact address.\n* `city` - The city of the primary contact address.\n* `company_name` - The name of the company associated with the primary contact information.\n* `country_code` - The ISO-3166 two-letter country code for the primary contact address.\n* `district_or_county` - The district or county of the primary contact address.\n* `full_name` - The full name of the primary contact address.\n* `phone_number` - The phone number of the primary contact information.\n* `postal_code` - The postal code of the primary contact address.\n* `state_or_region` - The state or region of the primary contact address.\n* `website_url` - The URL of the website associated with the primary contact information.\n",
    "full_text": "---\nsubcategory: \"Account Management\"\nlayout: \"aws\"\npage_title: \"AWS: aws_account_primary_contact\"\ndescription: |-\n  Terraform data source for the primary contact information associated with an AWS Account.\n---\n\n# Data Source: aws_account_primary_contact\n\nTerraform data source for the primary contact information associated with an AWS Account.\n\n## Example Usage\n\n```terraform\ndata \"aws_account_primary_contact\" \"test\" {}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `account_id` - (Optional) The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `address_line_1` - The first line of the primary contact address.\n* `address_line_2` - The second line of the primary contact address.\n* `address_line_3` - The third line of the primary contact address.\n* `city` - The city of the primary contact address.\n* `company_name` - The name of the company associated with the primary contact information.\n* `country_code` - The ISO-3166 two-letter country code for the primary contact address.\n* `district_or_county` - The district or county of the primary contact address.\n* `full_name` - The full name of the primary contact address.\n* `phone_number` - The phone number of the primary contact information.\n* `postal_code` - The postal code of the primary contact address.\n* `state_or_region` - The state or region of the primary contact address.\n* `website_url` - The URL of the website associated with the primary contact information.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/account_primary_contact"
  },
  {
    "name": "aws_acm_certificate",
    "type": "data_source",
    "description": "subcategory: \"ACM (Certificate Manager)\" layout: \"aws\" page_title: \"AWS: aws_acm_certificate\"",
    "example": "# Find a certificate that is issued\ndata \"aws_acm_certificate\" \"issued\" {\n  domain   = \"tf.example.com\"\n  statuses = [\"ISSUED\"]\n}\n\n# Find a certificate issued by (not imported into) ACM\ndata \"aws_acm_certificate\" \"amazon_issued\" {\n  domain      = \"tf.example.com\"\n  types       = [\"AMAZON_ISSUED\"]\n  most_recent = true\n}\n\n# Find a RSA 4096 bit certificate\ndata \"aws_acm_certificate\" \"rsa_4096\" {\n  domain    = \"tf.example.com\"\n  key_types = [\"RSA_4096\"]\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `domain` - (Optional) Domain of the certificate to look up. If set and no certificate is found with this name, an error will be returned.\n* `key_types` - (Optional) List of key algorithms to filter certificates. By default, ACM does not return all certificate types when searching. See the [ACM API Reference](https://docs.aws.amazon.com/acm/latest/APIReference/API_CertificateDetail.html#ACM-Type-CertificateDetail-KeyAlgorithm) for supported key algorithms.\n* `statuses` - (Optional) List of statuses on which to filter the returned list. Valid values are `PENDING_VALIDATION`, `ISSUED`,\n   `INACTIVE`, `EXPIRED`, `VALIDATION_TIMED_OUT`, `REVOKED` and `FAILED`. If no value is specified, only certificates in the `ISSUED` state\n   are returned.\n* `types` - (Optional) List of types on which to filter the returned list. Valid values are `AMAZON_ISSUED`, `PRIVATE`, and `IMPORTED`.\n* `most_recent` - (Optional) If set to true, it sorts the certificates matched by previous criteria by the NotBefore field, returning only the most recent one. If set to false, it returns an error if more than one certificate is found. Defaults to false.\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match a pair on the desired certificates.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the found certificate, suitable for referencing in other resources that support ACM certificates.\n* `id` - ARN of the found certificate, suitable for referencing in other resources that support ACM certificates.\n* `status` - Status of the found certificate.\n* `certificate` - ACM-issued certificate.\n* `certificate_chain` - Certificates forming the requested ACM-issued certificate's chain of trust. The chain consists of the certificate of the issuing CA and the intermediate certificates of any other subordinate CAs.\n* `tags` - Mapping of tags for the resource.\n",
    "full_text": "---\nsubcategory: \"ACM (Certificate Manager)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acm_certificate\"\ndescription: |-\n  Get information on a Amazon Certificate Manager (ACM) Certificate\n---\n\n# Data Source: aws_acm_certificate\n\nUse this data source to get the ARN of a certificate in AWS Certificate Manager (ACM).\nYou can reference the certificate by domain or tags without having to hard code the ARNs as input.\n\n## Example Usage\n\n```terraform\n# Find a certificate that is issued\ndata \"aws_acm_certificate\" \"issued\" {\n  domain   = \"tf.example.com\"\n  statuses = [\"ISSUED\"]\n}\n\n# Find a certificate issued by (not imported into) ACM\ndata \"aws_acm_certificate\" \"amazon_issued\" {\n  domain      = \"tf.example.com\"\n  types       = [\"AMAZON_ISSUED\"]\n  most_recent = true\n}\n\n# Find a RSA 4096 bit certificate\ndata \"aws_acm_certificate\" \"rsa_4096\" {\n  domain    = \"tf.example.com\"\n  key_types = [\"RSA_4096\"]\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `domain` - (Optional) Domain of the certificate to look up. If set and no certificate is found with this name, an error will be returned.\n* `key_types` - (Optional) List of key algorithms to filter certificates. By default, ACM does not return all certificate types when searching. See the [ACM API Reference](https://docs.aws.amazon.com/acm/latest/APIReference/API_CertificateDetail.html#ACM-Type-CertificateDetail-KeyAlgorithm) for supported key algorithms.\n* `statuses` - (Optional) List of statuses on which to filter the returned list. Valid values are `PENDING_VALIDATION`, `ISSUED`,\n   `INACTIVE`, `EXPIRED`, `VALIDATION_TIMED_OUT`, `REVOKED` and `FAILED`. If no value is specified, only certificates in the `ISSUED` state\n   are returned.\n* `types` - (Optional) List of types on which to filter the returned list. Valid values are `AMAZON_ISSUED`, `PRIVATE`, and `IMPORTED`.\n* `most_recent` - (Optional) If set to true, it sorts the certificates matched by previous criteria by the NotBefore field, returning only the most recent one. If set to false, it returns an error if more than one certificate is found. Defaults to false.\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match a pair on the desired certificates.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the found certificate, suitable for referencing in other resources that support ACM certificates.\n* `id` - ARN of the found certificate, suitable for referencing in other resources that support ACM certificates.\n* `status` - Status of the found certificate.\n* `certificate` - ACM-issued certificate.\n* `certificate_chain` - Certificates forming the requested ACM-issued certificate's chain of trust. The chain consists of the certificate of the issuing CA and the intermediate certificates of any other subordinate CAs.\n* `tags` - Mapping of tags for the resource.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/acm_certificate"
  },
  {
    "name": "aws_acmpca_certificate",
    "type": "data_source",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_certificate\"",
    "example": "data \"aws_acmpca_certificate\" \"example\" {\n  arn                       = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/1234b4a0d73e2056789bdbe77d5b1a23\"\n  certificate_authority_arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `arn` - (Required) ARN of the certificate issued by the private certificate authority.\n* `certificate_authority_arn` - (Required) ARN of the certificate authority.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `certificate` - PEM-encoded certificate value.\n* `certificate_chain` - PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.\n",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_certificate\"\ndescription: |-\n  Get information on a Certificate issued by a AWS Certificate Manager Private Certificate Authority\n---\n\n# Data Source: aws_acmpca_certificate\n\nGet information on a Certificate issued by a AWS Certificate Manager Private Certificate Authority.\n\n## Example Usage\n\n```terraform\ndata \"aws_acmpca_certificate\" \"example\" {\n  arn                       = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/1234b4a0d73e2056789bdbe77d5b1a23\"\n  certificate_authority_arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `arn` - (Required) ARN of the certificate issued by the private certificate authority.\n* `certificate_authority_arn` - (Required) ARN of the certificate authority.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `certificate` - PEM-encoded certificate value.\n* `certificate_chain` - PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/acmpca_certificate"
  },
  {
    "name": "aws_acmpca_certificate_authority",
    "type": "data_source",
    "description": "subcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\" layout: \"aws\" page_title: \"AWS: aws_acmpca_certificate_authority\"",
    "example": "data \"aws_acmpca_certificate_authority\" \"example\" {\n  arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `arn` - (Required) ARN of the certificate authority.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - ARN of the certificate authority.\n* `certificate` - Base64-encoded certificate authority (CA) certificate. Only available after the certificate authority certificate has been imported.\n* `certificate_chain` - Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. Only available after the certificate authority certificate has been imported.\n* `certificate_signing_request` - The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.\n* `usage_mode` - Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly.\n* `not_after` - Date and time after which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.\n* `not_before` - Date and time before which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.\n* `revocation_configuration` - Nested attribute containing revocation configuration.\n    * `revocation_configuration.0.crl_configuration` - Nested attribute containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority.\n        * `revocation_configuration.0.crl_configuration.0.custom_cname` - Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point.\n        * `revocation_configuration.0.crl_configuration.0.enabled` - Boolean value that specifies whether certificate revocation lists (CRLs) are enabled.\n        * `revocation_configuration.0.crl_configuration.0.expiration_in_days` - Number of days until a certificate expires.\n        * `revocation_configuration.0.crl_configuration.0.s3_bucket_name` - Name of the S3 bucket that contains the CRL.\n        * `revocation_configuration.0.crl_configuration.0.s3_object_acl` - Whether the CRL is publicly readable or privately held in the CRL Amazon S3 bucket.\n        * `revocation_configuration.0.ocsp_configuration.0.enabled` - Boolean value that specifies whether a custom OCSP responder is enabled.\n        * `revocation_configuration.0.ocsp_configuration.0.ocsp_custom_cname` - A CNAME specifying a customized OCSP domain.\n* `serial` - Serial number of the certificate authority. Only available after the certificate authority certificate has been imported.\n* `status` - Status of the certificate authority.\n* `tags` - Key-value map of user-defined tags that are attached to the certificate authority.\n* `type` - Type of the certificate authority.\n",
    "full_text": "---\nsubcategory: \"ACM PCA (Certificate Manager Private Certificate Authority)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_acmpca_certificate_authority\"\ndescription: |-\n  Get information on a AWS Certificate Manager Private Certificate Authority\n---\n\n# Data Source: aws_acmpca_certificate_authority\n\nGet information on a AWS Certificate Manager Private Certificate Authority (ACM PCA Certificate Authority).\n\n## Example Usage\n\n```terraform\ndata \"aws_acmpca_certificate_authority\" \"example\" {\n  arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `arn` - (Required) ARN of the certificate authority.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - ARN of the certificate authority.\n* `certificate` - Base64-encoded certificate authority (CA) certificate. Only available after the certificate authority certificate has been imported.\n* `certificate_chain` - Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. Only available after the certificate authority certificate has been imported.\n* `certificate_signing_request` - The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.\n* `usage_mode` - Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly.\n* `not_after` - Date and time after which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.\n* `not_before` - Date and time before which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.\n* `revocation_configuration` - Nested attribute containing revocation configuration.\n    * `revocation_configuration.0.crl_configuration` - Nested attribute containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority.\n        * `revocation_configuration.0.crl_configuration.0.custom_cname` - Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point.\n        * `revocation_configuration.0.crl_configuration.0.enabled` - Boolean value that specifies whether certificate revocation lists (CRLs) are enabled.\n        * `revocation_configuration.0.crl_configuration.0.expiration_in_days` - Number of days until a certificate expires.\n        * `revocation_configuration.0.crl_configuration.0.s3_bucket_name` - Name of the S3 bucket that contains the CRL.\n        * `revocation_configuration.0.crl_configuration.0.s3_object_acl` - Whether the CRL is publicly readable or privately held in the CRL Amazon S3 bucket.\n        * `revocation_configuration.0.ocsp_configuration.0.enabled` - Boolean value that specifies whether a custom OCSP responder is enabled.\n        * `revocation_configuration.0.ocsp_configuration.0.ocsp_custom_cname` - A CNAME specifying a customized OCSP domain.\n* `serial` - Serial number of the certificate authority. Only available after the certificate authority certificate has been imported.\n* `status` - Status of the certificate authority.\n* `tags` - Key-value map of user-defined tags that are attached to the certificate authority.\n* `type` - Type of the certificate authority.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/acmpca_certificate_authority"
  },
  {
    "name": "aws_ami",
    "type": "data_source",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_ami\"",
    "example": "data \"aws_ami\" \"example\" {\n  executable_users = [\"self\"]\n  most_recent      = true\n  name_regex       = \"^myami-[0-9]{3}\"\n  owners           = [\"self\"]\n\n  filter {\n    name   = \"name\"\n    values = [\"myami-*\"]\n  }\n\n  filter {\n    name   = \"root-device-type\"\n    values = [\"ebs\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `owners` - (Optional) List of AMI owners to limit search. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent AMI.\n* `executable_users` - (Optional) Limit search to users with *explicit* launch permission on\n the image. Valid items are the numeric account ID or `self`.\n* `include_deprecated` - (Optional) If true, all deprecated AMIs are included in the response. If false, no deprecated AMIs are included in the response. If no value is specified, the default value is false.\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n* `allow_unsafe_filter` - (Optional) If true, allow unsafe filter values. With unsafe\nfilters and `most_recent` set to `true`, a third party may introduce a new image which\nwill be returned by this data source. Consider filtering by owner or image ID rather\nthan setting this argument.\n* `name_regex` - (Optional) Regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API. This\nfiltering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. Combine this with other\noptions to narrow down the list AWS returns.\n\n~> **NOTE:** If more or less than a single match is returned by the search,\nTerraform will fail. Ensure that your search is specific enough to return\na single AMI ID only, or use `most_recent` to choose the most recent one. If",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ami\"\ndescription: |-\n  Get information on an Amazon Machine Image (AMI).\n---\n\n# Data Source: aws_ami\n\nUse this data source to get the ID of a registered AMI for use in other\nresources.\n\n## Example Usage\n\n```terraform\ndata \"aws_ami\" \"example\" {\n  executable_users = [\"self\"]\n  most_recent      = true\n  name_regex       = \"^myami-[0-9]{3}\"\n  owners           = [\"self\"]\n\n  filter {\n    name   = \"name\"\n    values = [\"myami-*\"]\n  }\n\n  filter {\n    name   = \"root-device-type\"\n    values = [\"ebs\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `owners` - (Optional) List of AMI owners to limit search. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent AMI.\n* `executable_users` - (Optional) Limit search to users with *explicit* launch permission on\n the image. Valid items are the numeric account ID or `self`.\n* `include_deprecated` - (Optional) If true, all deprecated AMIs are included in the response. If false, no deprecated AMIs are included in the response. If no value is specified, the default value is false.\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n* `allow_unsafe_filter` - (Optional) If true, allow unsafe filter values. With unsafe\nfilters and `most_recent` set to `true`, a third party may introduce a new image which\nwill be returned by this data source. Consider filtering by owner or image ID rather\nthan setting this argument.\n* `name_regex` - (Optional) Regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API. This\nfiltering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. Combine this with other\noptions to narrow down the list AWS returns.\n\n~> **NOTE:** If more or less than a single match is returned by the search,\nTerraform will fail. Ensure that your search is specific enough to return\na single AMI ID only, or use `most_recent` to choose the most recent one. If\nyou want to match multiple AMIs, use the `aws_ami_ids` data source instead.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the AMI.\n* `arn` - ARN of the AMI.\n* `architecture` - OS architecture of the AMI (ie: `i386` or `x86_64`).\n* `boot_mode` - Boot mode of the image.\n* `block_device_mappings` - Set of objects with block device mappings of the AMI.\n    * `device_name` - Physical name of the device.\n    * `ebs` - Map containing EBS information, if the device is EBS based. Unlike most object attributes, these are accessed directly (e.g., `ebs.volume_size` or `ebs[\"volume_size\"]`) rather than accessed through the first element of a list (e.g., `ebs[0].volume_size`).\n        * `delete_on_termination` - `true` if the EBS volume will be deleted on termination.\n        * `encrypted` - `true` if the EBS volume is encrypted.\n        * `iops` - `0` if the EBS volume is not a provisioned IOPS image, otherwise the supported IOPS count.\n        * `snapshot_id` - The ID of the snapshot.\n        * `volume_size` - The size of the volume, in GiB.\n        * `throughput` - The throughput that the EBS volume supports, in MiB/s.\n        * `volume_type` - The volume type.\n        * `volume_initialization_rate` - The volume initialization rate, in MiB/s.\n    * `no_device` - Suppresses the specified device included in the block device mapping of the AMI.\n    * `virtual_name` - Virtual device name (for instance stores).\n* `creation_date` - Date and time the image was created.\n* `deprecation_time` - Date and time when the image will be deprecated.\n* `description` - Description of the AMI that was provided during image\n  creation.\n* `hypervisor` - Hypervisor type of the image.\n* `image_id` - ID of the AMI. Should be the same as the resource `id`.\n* `image_location` - Location of the AMI.\n* `image_owner_alias` - AWS account alias (for example, `amazon`, `self`) or\n  the AWS account ID of the AMI owner.\n* `image_type` - Type of image.\n* `imds_support` - Instance Metadata Service (IMDS) support mode for the image. Set to `v2.0` if instances ran from this image enforce IMDSv2.\n* `kernel_id` - Kernel associated with the image, if any. Only applicable\n  for machine images.\n* `last_launched_time` - Da",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ami"
  },
  {
    "name": "aws_ami_ids",
    "type": "data_source",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_ami_ids\"",
    "example": "data \"aws_ami_ids\" \"ubuntu\" {\n  owners = [\"099720109477\"]\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/ubuntu-*-*-amd64-server-*\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `owners` - (Required) List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).\n* `executable_users` - (Optional) Limit search to users with *explicit* launch\npermission on  the image. Valid items are the numeric account ID or `self`.\n* `filter` - (Optional) One or more name/value pairs to filter off of. There\nare several valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n* `name_regex` - (Optional) Regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API.\nThis filtering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. Combine this with other\noptions to narrow down the list AWS returns.\n* `sort_ascending` - (Optional) Used to sort AMIs by creation time.\nIf no value is specified, the default value is `false`.\n* `include_deprecated` - (Optional) If true, all deprecated AMIs are included in the response.\nIf false, no deprecated AMIs are included in the response. If no value is specified, the default value is `false`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `ids` is set to the list of AMI IDs, sorted by creation time according to `sort_ascending`.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `read` - (Default `20m`)\n",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ami_ids\"\ndescription: |-\n  Provides a list of AMI IDs.\n---\n\n# Data Source: aws_ami_ids\n\nUse this data source to get a list of AMI IDs matching the specified criteria.\n\n## Example Usage\n\n```terraform\ndata \"aws_ami_ids\" \"ubuntu\" {\n  owners = [\"099720109477\"]\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/ubuntu-*-*-amd64-server-*\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `owners` - (Required) List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).\n* `executable_users` - (Optional) Limit search to users with *explicit* launch\npermission on  the image. Valid items are the numeric account ID or `self`.\n* `filter` - (Optional) One or more name/value pairs to filter off of. There\nare several valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n* `name_regex` - (Optional) Regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API.\nThis filtering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. Combine this with other\noptions to narrow down the list AWS returns.\n* `sort_ascending` - (Optional) Used to sort AMIs by creation time.\nIf no value is specified, the default value is `false`.\n* `include_deprecated` - (Optional) If true, all deprecated AMIs are included in the response.\nIf false, no deprecated AMIs are included in the response. If no value is specified, the default value is `false`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `ids` is set to the list of AMI IDs, sorted by creation time according to `sort_ascending`.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `read` - (Default `20m`)\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ami_ids"
  },
  {
    "name": "aws_api_gateway_api_key",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_api_key\"",
    "example": "data \"aws_api_gateway_api_key\" \"my_api_key\" {\n  id = \"ru3mpjgse6\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `id` - (Required) ID of the API Key to look up.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - Set to the ID of the API Key.\n* `name` - Set to the name of the API Key.\n* `value` - Set to the value of the API Key.\n* `created_date` - Date and time when the API Key was created.\n* `last_updated_date` - Date and time when the API Key was last updated.\n* `customer_id` - Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `description` - Description of the API Key.\n* `enabled` - Whether the API Key is enabled.\n* `tags` - Map of tags for the resource.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_api_key\"\ndescription: |-\n  Get information on an API Gateway REST API Key\n---\n\n# Data Source: aws_api_gateway_api_key\n\nUse this data source to get the name and value of a pre-existing API Key, for\nexample to supply credentials for a dependency microservice.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_api_key\" \"my_api_key\" {\n  id = \"ru3mpjgse6\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `id` - (Required) ID of the API Key to look up.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - Set to the ID of the API Key.\n* `name` - Set to the name of the API Key.\n* `value` - Set to the value of the API Key.\n* `created_date` - Date and time when the API Key was created.\n* `last_updated_date` - Date and time when the API Key was last updated.\n* `customer_id` - Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `description` - Description of the API Key.\n* `enabled` - Whether the API Key is enabled.\n* `tags` - Map of tags for the resource.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_api_key"
  },
  {
    "name": "aws_api_gateway_api_keys",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_api_keys\"",
    "example": "data \"aws_api_gateway_api_keys\" \"example\" {}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `customer_id` - (Optional) Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `include_values` - (Optional) Set this value to `true` if you wish the result contains the key value. Defaults to `false`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - AWS Region.\n* `items` - List of objects containing API Key information. See below.\n\n### `items`\n\n* `id` - ID of the API Key.\n* `name` - Name of the API Key.\n* `value` - Value of the API Key.\n* `created_date` - Date and time when the API Key was created.\n* `last_updated_date` - Date and time when the API Key was last updated.\n* `customer_id` - Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `description` - Description of the API Key.\n* `enabled` - Whether the API Key is enabled.\n* `tags` - Map of tags for the resource.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_api_keys\"\ndescription: |-\n  Terraform data source for managing AWS API Gateway API Keys.\n---\n\n# Data Source: aws_api_gateway_api_keys\n\nTerraform data source for managing AWS API Gateway API Keys.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_api_keys\" \"example\" {}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `customer_id` - (Optional) Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `include_values` - (Optional) Set this value to `true` if you wish the result contains the key value. Defaults to `false`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - AWS Region.\n* `items` - List of objects containing API Key information. See below.\n\n### `items`\n\n* `id` - ID of the API Key.\n* `name` - Name of the API Key.\n* `value` - Value of the API Key.\n* `created_date` - Date and time when the API Key was created.\n* `last_updated_date` - Date and time when the API Key was last updated.\n* `customer_id` - Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace.\n* `description` - Description of the API Key.\n* `enabled` - Whether the API Key is enabled.\n* `tags` - Map of tags for the resource.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_api_keys"
  },
  {
    "name": "aws_api_gateway_authorizer",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_authorizer\"",
    "example": "data \"aws_api_gateway_authorizer\" \"example\" {\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  authorizer_id = data.aws_api_gateway_authorizers.example.ids[0]\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `authorizer_id` - (Required) Authorizer identifier.\n* `rest_api_id` - (Required) ID of the associated REST API.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the API Gateway Authorizer.\n* `authorizer_credentials` - Credentials required for the authorizer.\n* `authorizer_result_ttl_in_seconds` - TTL of cached authorizer results in seconds.\n* `authorizer_uri` - Authorizer's Uniform Resource Identifier (URI).\n* `identity_source` - Source of the identity in an incoming request.\n* `identity_validation_expression` - Validation expression for the incoming identity.\n* `name` - Name of the authorizer.\n* `provider_arns` - List of the Amazon Cognito user pool ARNs.\n* `type` - Type of the authorizer.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_authorizer\"\ndescription: |-\n  Provides details about a specific API Gateway Authorizer.\n---\n\n# Data Source: aws_api_gateway_authorizer\n\nProvides details about a specific API Gateway Authorizer.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_authorizer\" \"example\" {\n  rest_api_id   = aws_api_gateway_rest_api.example.id\n  authorizer_id = data.aws_api_gateway_authorizers.example.ids[0]\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `authorizer_id` - (Required) Authorizer identifier.\n* `rest_api_id` - (Required) ID of the associated REST API.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the API Gateway Authorizer.\n* `authorizer_credentials` - Credentials required for the authorizer.\n* `authorizer_result_ttl_in_seconds` - TTL of cached authorizer results in seconds.\n* `authorizer_uri` - Authorizer's Uniform Resource Identifier (URI).\n* `identity_source` - Source of the identity in an incoming request.\n* `identity_validation_expression` - Validation expression for the incoming identity.\n* `name` - Name of the authorizer.\n* `provider_arns` - List of the Amazon Cognito user pool ARNs.\n* `type` - Type of the authorizer.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_authorizer"
  },
  {
    "name": "aws_api_gateway_authorizers",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_authorizers\"",
    "example": "data \"aws_api_gateway_authorizers\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `ids` - List of Authorizer identifiers.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_authorizers\"\ndescription: |-\n  Provides details about multiple API Gateway Authorizers.\n---\n\n# Data Source: aws_api_gateway_authorizers\n\nProvides details about multiple API Gateway Authorizers.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_authorizers\" \"example\" {\n  rest_api_id = aws_api_gateway_rest_api.example.id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) ID of the associated REST API.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `ids` - List of Authorizer identifiers.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_authorizers"
  },
  {
    "name": "aws_api_gateway_domain_name",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_domain_name\"",
    "example": "data \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name = \"api.example.com\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `domain_name` - (Required) Fully-qualified domain name to look up. If no domain name is found, an error will be returned.\n* `domain_name_id` - (Optional) The identifier for the domain name resource. Supported only for private custom domain names.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the found custom domain name.\n* `certificate_arn` - ARN for an AWS-managed certificate that is used by edge-optimized endpoint for this domain name.\n* `certificate_name` - Name of the certificate that is used by edge-optimized endpoint for this domain name.\n* `certificate_upload_date` - Upload date associated with the domain certificate.\n* `cloudfront_domain_name` - Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.\n* `cloudfront_zone_id` - For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.\n* `endpoint_configuration` - List of objects with the endpoint configuration of this domain name.\n    * `ip_address_type` - The IP address types that can invoke an API (RestApi).\n    * `types` - List of endpoint types.\n* `policy` - A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.\n* `regional_certificate_arn` - ARN for an AWS-managed certificate that is used for validating the regional domain name.\n* `regional_certificate_name` - User-friendly name of the certificate that is used by regional endpoint for this domain name.\n* `regional_domain_name` - Hostname for the custom domain's regional endpoint.\n* `regional_zone_id` - Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.\n* `security_policy` - Security policy for the domain name.\n* `tags` - Key-value map of tags for the resource.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_domain_name\"\ndescription: |-\n Get information on a custom domain name for use with AWS API Gateway.\n---\n\n# Data Source: aws_api_gateway_domain_name\n\nUse this data source to get the custom domain name for use with AWS API Gateway.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name = \"api.example.com\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `domain_name` - (Required) Fully-qualified domain name to look up. If no domain name is found, an error will be returned.\n* `domain_name_id` - (Optional) The identifier for the domain name resource. Supported only for private custom domain names.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the found custom domain name.\n* `certificate_arn` - ARN for an AWS-managed certificate that is used by edge-optimized endpoint for this domain name.\n* `certificate_name` - Name of the certificate that is used by edge-optimized endpoint for this domain name.\n* `certificate_upload_date` - Upload date associated with the domain certificate.\n* `cloudfront_domain_name` - Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.\n* `cloudfront_zone_id` - For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.\n* `endpoint_configuration` - List of objects with the endpoint configuration of this domain name.\n    * `ip_address_type` - The IP address types that can invoke an API (RestApi).\n    * `types` - List of endpoint types.\n* `policy` - A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.\n* `regional_certificate_arn` - ARN for an AWS-managed certificate that is used for validating the regional domain name.\n* `regional_certificate_name` - User-friendly name of the certificate that is used by regional endpoint for this domain name.\n* `regional_domain_name` - Hostname for the custom domain's regional endpoint.\n* `regional_zone_id` - Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.\n* `security_policy` - Security policy for the domain name.\n* `tags` - Key-value map of tags for the resource.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_domain_name"
  },
  {
    "name": "aws_api_gateway_export",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_export\"",
    "example": "data \"aws_api_gateway_export\" \"example\" {\n  rest_api_id = aws_api_gateway_stage.example.rest_api_id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  export_type = \"oas30\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `export_type` - (Required) Type of export. Acceptable values are `oas30` for OpenAPI 3.0.x and `swagger` for Swagger/OpenAPI 2.0.\n* `rest_api_id` - (Required) Identifier of the associated REST API.\n* `stage_name` - (Required) Name of the Stage that will be exported.\n* `accepts` - (Optional) Content-type of the export. Valid values are `application/json` and `application/yaml` are supported for `export_type` `ofoas30` and `swagger`.\n* `parameters` - (Optional) Key-value map of query string parameters that specify properties of the export. the following parameters are supported: `extensions='integrations'` or `extensions='apigateway'` will export the API with x-amazon-apigateway-integration extensions. `extensions='authorizers'` will export the API with x-amazon-apigateway-authorizer extensions.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - The `REST-API-ID:STAGE-NAME`\n* `body` - API Spec.\n* `content_type` - Content-type header value in the HTTP response.\n* `content_disposition` - Content-disposition header value in the HTTP response.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_export\"\ndescription: |-\n  Get information on an API Gateway REST API Key\n---\n\n# Data Source: aws_api_gateway_export\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_export\" \"example\" {\n  rest_api_id = aws_api_gateway_stage.example.rest_api_id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  export_type = \"oas30\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `export_type` - (Required) Type of export. Acceptable values are `oas30` for OpenAPI 3.0.x and `swagger` for Swagger/OpenAPI 2.0.\n* `rest_api_id` - (Required) Identifier of the associated REST API.\n* `stage_name` - (Required) Name of the Stage that will be exported.\n* `accepts` - (Optional) Content-type of the export. Valid values are `application/json` and `application/yaml` are supported for `export_type` `ofoas30` and `swagger`.\n* `parameters` - (Optional) Key-value map of query string parameters that specify properties of the export. the following parameters are supported: `extensions='integrations'` or `extensions='apigateway'` will export the API with x-amazon-apigateway-integration extensions. `extensions='authorizers'` will export the API with x-amazon-apigateway-authorizer extensions.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - The `REST-API-ID:STAGE-NAME`\n* `body` - API Spec.\n* `content_type` - Content-type header value in the HTTP response.\n* `content_disposition` - Content-disposition header value in the HTTP response.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_export"
  },
  {
    "name": "aws_api_gateway_resource",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_resource\"",
    "example": "data \"aws_api_gateway_rest_api\" \"my_rest_api\" {\n  name = \"my-rest-api\"\n}\n\ndata \"aws_api_gateway_resource\" \"my_resource\" {\n  rest_api_id = data.aws_api_gateway_rest_api.my_rest_api.id\n  path        = \"/endpoint/path\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) REST API id that owns the resource. If no REST API is found, an error will be returned.\n* `path` - (Required) Full path of the resource.  If no path is found, an error will be returned.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - Set to the ID of the found Resource.\n* `parent_id` - Set to the ID of the parent Resource.\n* `path_part` - Set to the path relative to the parent Resource.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_resource\"\ndescription: |-\n  Get information on a API Gateway Resource\n---\n\n# Data Source: aws_api_gateway_resource\n\nUse this data source to get the id of a Resource in API Gateway.\nTo fetch the Resource, you must provide the REST API id as well as the full path.  \n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_rest_api\" \"my_rest_api\" {\n  name = \"my-rest-api\"\n}\n\ndata \"aws_api_gateway_resource\" \"my_resource\" {\n  rest_api_id = data.aws_api_gateway_rest_api.my_rest_api.id\n  path        = \"/endpoint/path\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) REST API id that owns the resource. If no REST API is found, an error will be returned.\n* `path` - (Required) Full path of the resource.  If no path is found, an error will be returned.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - Set to the ID of the found Resource.\n* `parent_id` - Set to the ID of the parent Resource.\n* `path_part` - Set to the path relative to the parent Resource.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_resource"
  },
  {
    "name": "aws_api_gateway_rest_api",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_rest_api\"",
    "example": "data \"aws_api_gateway_rest_api\" \"my_rest_api\" {\n  name = \"my-rest-api\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the REST API to look up. If no REST API is found with this name, an error will be returned. If multiple REST APIs are found with this name, an error will be returned.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `api_key_source` - Source of the API key for requests.\n* `arn` - ARN of the REST API.\n* `binary_media_types` - List of binary media types supported by the REST API.\n* `description` - Description of the REST API.\n* `endpoint_configuration` - The endpoint configuration of this RestApi showing the endpoint types of the API.\n    * `ip_address_type` - The IP address types that can invoke an API (RestApi).\n    * `types` - List of endpoint types.\n    * `vpc_endpoint_ids` - Set of VPC Endpoint identifiers.\n* `execution_arn` - Execution ARN part to be used in [`lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn` when allowing API Gateway to invoke a Lambda function, e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.\n* `id` - Set to the ID of the found REST API.\n* `minimum_compression_size` - Minimum response size to compress for the REST API.\n* `policy` - JSON formatted policy document that controls access to the API Gateway.\n* `root_resource_id` - Set to the ID of the API Gateway Resource on the found REST API where the route matches '/'.\n* `tags` - Key-value map of resource tags.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_rest_api\"\ndescription: |-\n  Get information on a API Gateway REST API\n---\n\n# Data Source: aws_api_gateway_rest_api\n\nUse this data source to get the id and root_resource_id of a REST API in\nAPI Gateway. To fetch the REST API you must provide a name to match against.\nAs there is no unique name constraint on REST APIs this data source will\nerror if there is more than one match.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_rest_api\" \"my_rest_api\" {\n  name = \"my-rest-api\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the REST API to look up. If no REST API is found with this name, an error will be returned. If multiple REST APIs are found with this name, an error will be returned.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `api_key_source` - Source of the API key for requests.\n* `arn` - ARN of the REST API.\n* `binary_media_types` - List of binary media types supported by the REST API.\n* `description` - Description of the REST API.\n* `endpoint_configuration` - The endpoint configuration of this RestApi showing the endpoint types of the API.\n    * `ip_address_type` - The IP address types that can invoke an API (RestApi).\n    * `types` - List of endpoint types.\n    * `vpc_endpoint_ids` - Set of VPC Endpoint identifiers.\n* `execution_arn` - Execution ARN part to be used in [`lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn` when allowing API Gateway to invoke a Lambda function, e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.\n* `id` - Set to the ID of the found REST API.\n* `minimum_compression_size` - Minimum response size to compress for the REST API.\n* `policy` - JSON formatted policy document that controls access to the API Gateway.\n* `root_resource_id` - Set to the ID of the API Gateway Resource on the found REST API where the route matches '/'.\n* `tags` - Key-value map of resource tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_rest_api"
  },
  {
    "name": "aws_api_gateway_sdk",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_sdk\"",
    "example": "data \"aws_api_gateway_sdk\" \"example\" {\n  rest_api_id = aws_api_gateway_stage.example.rest_api_id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  sdk_type    = \"android\"\n\n  parameters = {\n    groupId         = \"example\"\n    artifactId      = \"example\"\n    artifactVersion = \"example\"\n    invokerPackage  = \"example\"\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) Identifier of the associated REST API.\n* `stage_name` - (Required) Name of the Stage that will be exported.\n* `sdk_type` - (Required) Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.\n* `parameters` - (Optional) Key-value map of query string parameters `sdk_type` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - The `REST-API-ID:STAGE-NAME`\n* `body` - SDK as a string.\n* `content_type` - Content-type header value in the HTTP response.\n* `content_disposition` - Content-disposition header value in the HTTP response.\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_sdk\"\ndescription: |-\n  Gets an API Gateway client SDK\n---\n\n# Data Source: aws_api_gateway_sdk\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_sdk\" \"example\" {\n  rest_api_id = aws_api_gateway_stage.example.rest_api_id\n  stage_name  = aws_api_gateway_stage.example.stage_name\n  sdk_type    = \"android\"\n\n  parameters = {\n    groupId         = \"example\"\n    artifactId      = \"example\"\n    artifactVersion = \"example\"\n    invokerPackage  = \"example\"\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `rest_api_id` - (Required) Identifier of the associated REST API.\n* `stage_name` - (Required) Name of the Stage that will be exported.\n* `sdk_type` - (Required) Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.\n* `parameters` - (Optional) Key-value map of query string parameters `sdk_type` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - The `REST-API-ID:STAGE-NAME`\n* `body` - SDK as a string.\n* `content_type` - Content-type header value in the HTTP response.\n* `content_disposition` - Content-disposition header value in the HTTP response.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_sdk"
  },
  {
    "name": "aws_api_gateway_vpc_link",
    "type": "data_source",
    "description": "subcategory: \"API Gateway\" layout: \"aws\" page_title: \"AWS: aws_api_gateway_vpc_link\"",
    "example": "data \"aws_api_gateway_vpc_link\" \"my_api_gateway_vpc_link\" {\n  name = \"my-vpc-link\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the API Gateway VPC Link to look up. If no API Gateway VPC Link is found with this name, an error will be returned.\n If multiple API Gateway VPC Links are found with this name, an error will be returned.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - Set to the ID of the found API Gateway VPC Link.\n* `description` - Description of the VPC link.\n* `status` - Status of the VPC link.\n* `status_message` - Status message of the VPC link.\n* `target_arns` - List of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.\n* `tags` - Key-value map of resource tags\n",
    "full_text": "---\nsubcategory: \"API Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_api_gateway_vpc_link\"\ndescription: |-\n  Get information on a API Gateway VPC Link\n---\n\n# Data Source: aws_api_gateway_vpc_link\n\nUse this data source to get the id of a VPC Link in\nAPI Gateway. To fetch the VPC Link you must provide a name to match against.\nAs there is no unique name constraint on API Gateway VPC Links this data source will\nerror if there is more than one match.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_vpc_link\" \"my_api_gateway_vpc_link\" {\n  name = \"my-vpc-link\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the API Gateway VPC Link to look up. If no API Gateway VPC Link is found with this name, an error will be returned.\n If multiple API Gateway VPC Links are found with this name, an error will be returned.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - Set to the ID of the found API Gateway VPC Link.\n* `description` - Description of the VPC link.\n* `status` - Status of the VPC link.\n* `status_message` - Status message of the VPC link.\n* `target_arns` - List of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.\n* `tags` - Key-value map of resource tags\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/api_gateway_vpc_link"
  },
  {
    "name": "aws_apigatewayv2_api",
    "type": "data_source",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_api\"",
    "example": "data \"aws_apigatewayv2_api\" \"example\" {\n  api_id = \"aabbccddee\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `api_endpoint` - URI of the API, of the form `https://{api-id}.execute-api.{region}.amazonaws.com` for HTTP APIs and `wss://{api-id}.execute-api.{region}.amazonaws.com` for WebSocket APIs.\n* `api_key_selection_expression` - An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).\nApplicable for WebSocket APIs.\n* `arn` - ARN of the API.\n* `cors_configuration` - Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html).\nApplicable for HTTP APIs.\n* `description` - Description of the API.\n* `disable_execute_api_endpoint` - Whether clients can invoke the API by using the default `execute-api` endpoint.\n* `execution_arn` - ARN prefix to be used in an [`aws_lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn` attribute\nor in an [`aws_iam_policy`](/docs/providers/aws/r/iam_policy.html) to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).\nSee the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.\n* `name` - Name of the API.\n* `protocol_type` - API protocol.\n* `route_selection_expression` - The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.\n* `tags` - Map of resource tags.\n* `version` - Version identifier for the API.\n\nThe `cors_configuration` object supports the following:\n\n* `allow_credentials` - Whether credentials are included in the CORS request.\n* `allow_headers` - Set of allowed HTTP headers.\n* `allow_methods` - Set of allowed HTTP methods.\n* `allow_origins` - Set of allowed origins.\n* `expose_headers` - Set of exposed HTTP headers.\n* `max_age` - Number of seconds that the browser should cache preflight request results.\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_api\"\ndescription: |-\n  Provides details about a specific Amazon API Gateway Version 2 API.\n---\n\n# Data Source: aws_apigatewayv2_api\n\nProvides details about a specific Amazon API Gateway Version 2 API.\n\n## Example Usage\n\n```terraform\ndata \"aws_apigatewayv2_api\" \"example\" {\n  api_id = \"aabbccddee\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `api_endpoint` - URI of the API, of the form `https://{api-id}.execute-api.{region}.amazonaws.com` for HTTP APIs and `wss://{api-id}.execute-api.{region}.amazonaws.com` for WebSocket APIs.\n* `api_key_selection_expression` - An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).\nApplicable for WebSocket APIs.\n* `arn` - ARN of the API.\n* `cors_configuration` - Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html).\nApplicable for HTTP APIs.\n* `description` - Description of the API.\n* `disable_execute_api_endpoint` - Whether clients can invoke the API by using the default `execute-api` endpoint.\n* `execution_arn` - ARN prefix to be used in an [`aws_lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn` attribute\nor in an [`aws_iam_policy`](/docs/providers/aws/r/iam_policy.html) to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).\nSee the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.\n* `name` - Name of the API.\n* `protocol_type` - API protocol.\n* `route_selection_expression` - The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.\n* `tags` - Map of resource tags.\n* `version` - Version identifier for the API.\n\nThe `cors_configuration` object supports the following:\n\n* `allow_credentials` - Whether credentials are included in the CORS request.\n* `allow_headers` - Set of allowed HTTP headers.\n* `allow_methods` - Set of allowed HTTP methods.\n* `allow_origins` - Set of allowed origins.\n* `expose_headers` - Set of exposed HTTP headers.\n* `max_age` - Number of seconds that the browser should cache preflight request results.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/apigatewayv2_api"
  },
  {
    "name": "aws_apigatewayv2_apis",
    "type": "data_source",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_apis\"",
    "example": "data \"aws_apigatewayv2_apis\" \"example\" {\n  protocol_type = \"HTTP\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Optional) API name.\n* `protocol_type` - (Optional) API protocol.\n* `tags` - (Optional) Map of tags, each pair of which must exactly match\n  a pair on the desired APIs.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `ids` - Set of API identifiers.\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_apis\"\ndescription: |-\n  Provides details about multiple Amazon API Gateway Version 2 APIs.\n---\n\n# Data Source: aws_apigatewayv2_apis\n\nProvides details about multiple Amazon API Gateway Version 2 APIs.\n\n## Example Usage\n\n```terraform\ndata \"aws_apigatewayv2_apis\" \"example\" {\n  protocol_type = \"HTTP\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Optional) API name.\n* `protocol_type` - (Optional) API protocol.\n* `tags` - (Optional) Map of tags, each pair of which must exactly match\n  a pair on the desired APIs.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `ids` - Set of API identifiers.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/apigatewayv2_apis"
  },
  {
    "name": "aws_apigatewayv2_export",
    "type": "data_source",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_export\"",
    "example": "data \"aws_apigatewayv2_export\" \"test\" {\n  api_id        = aws_apigatewayv2_route.test.api_id\n  specification = \"OAS30\"\n  output_type   = \"JSON\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n* `specification` - (Required) Version of the API specification to use. `OAS30`, for OpenAPI 3.0, is the only supported value.\n* `output_type` - (Required) Output type of the exported definition file. Valid values are `JSON` and `YAML`.\n* `export_version` - (Optional) Version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is `1.0`.\n* `include_extensions` - (Optional) Whether to include API Gateway extensions in the exported API definition. API Gateway extensions are included by default.\n* `stage_name` - (Optional) Name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - API identifier.\n* `body` - ID of the API.\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_export\"\ndescription: |-\n  Exports a definition of an API in a particular output format and specification.\n---\n\n# Data Source: aws_apigatewayv2_export\n\nExports a definition of an API in a particular output format and specification.\n\n## Example Usage\n\n```terraform\ndata \"aws_apigatewayv2_export\" \"test\" {\n  api_id        = aws_apigatewayv2_route.test.api_id\n  specification = \"OAS30\"\n  output_type   = \"JSON\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `api_id` - (Required) API identifier.\n* `specification` - (Required) Version of the API specification to use. `OAS30`, for OpenAPI 3.0, is the only supported value.\n* `output_type` - (Required) Output type of the exported definition file. Valid values are `JSON` and `YAML`.\n* `export_version` - (Optional) Version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is `1.0`.\n* `include_extensions` - (Optional) Whether to include API Gateway extensions in the exported API definition. API Gateway extensions are included by default.\n* `stage_name` - (Optional) Name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - API identifier.\n* `body` - ID of the API.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/apigatewayv2_export"
  },
  {
    "name": "aws_apigatewayv2_vpc_link",
    "type": "data_source",
    "description": "subcategory: \"API Gateway V2\" layout: \"aws\" page_title: \"AWS: aws_apigatewayv2_vpc_link\"",
    "example": "data \"aws_apigatewayv2_vpc_link\" \"example\" {\n  vpc_link_id = \"example\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `vpc_link_id` - (Required) VPC Link ID\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the VPC Link.\n* `id` - VPC Link ID.\n* `name` - VPC Link Name.\n* `security_group_ids` - List of security groups associated with the VPC Link.\n* `subnet_ids` - List of subnets attached to the VPC Link.\n* `tags` - VPC Link Tags.\n",
    "full_text": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_vpc_link\"\ndescription: |-\n  Terraform data source for managing an AWS API Gateway V2 VPC Link.\n---\n\n# Data Source: aws_apigatewayv2_vpc_link\n\nTerraform data source for managing an AWS API Gateway V2 VPC Link.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_apigatewayv2_vpc_link\" \"example\" {\n  vpc_link_id = \"example\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `vpc_link_id` - (Required) VPC Link ID\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the VPC Link.\n* `id` - VPC Link ID.\n* `name` - VPC Link Name.\n* `security_group_ids` - List of security groups associated with the VPC Link.\n* `subnet_ids` - List of subnets attached to the VPC Link.\n* `tags` - VPC Link Tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/apigatewayv2_vpc_link"
  },
  {
    "name": "aws_appconfig_application",
    "type": "data_source",
    "description": "subcategory: \"AppConfig\" layout: \"aws\" page_title: \"AWS: aws_appconfig_application\"",
    "example": "data \"aws_appconfig_application\" \"example\" {\n  name = \"my-appconfig-application\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `id` - (Optional) ID of the Application. Either `id` or `name` must be specified.\n* `name` - (Optional) AWS AppConfig Application name. Either `name` or `id` must be specified.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the Application.\n* `description` - Description of the Application.\n",
    "full_text": "---\nsubcategory: \"AppConfig\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appconfig_application\"\ndescription: |-\n  Retrieves an AWS AppConfig Application by name.\n---\n\n# Data Source: aws_appconfig_application\n\nProvides details about an AWS AppConfig Application.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_appconfig_application\" \"example\" {\n  name = \"my-appconfig-application\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `id` - (Optional) ID of the Application. Either `id` or `name` must be specified.\n* `name` - (Optional) AWS AppConfig Application name. Either `name` or `id` must be specified.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the Application.\n* `description` - Description of the Application.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appconfig_application"
  },
  {
    "name": "aws_appconfig_configuration_profile",
    "type": "data_source",
    "description": "subcategory: \"AppConfig\" layout: \"aws\" page_title: \"AWS: aws_appconfig_configuration_profile\"",
    "example": "data \"aws_appconfig_configuration_profile\" \"example\" {\n  application_id           = \"b5d5gpj\"\n  configuration_profile_id = \"qrbb1c1\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig application to which this configuration profile belongs.\n* `configuration_profile_id` - (Required) ID of the Configuration Profile.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the Configuration Profile.\n* `description` - Description of the Configuration Profile.\n* `id` - AppConfig Configuration Profile ID and Application ID separated by a colon `(:)`.\n* `location_uri` - Location URI of the Configuration Profile.\n* `name` - Name of the Configuration Profile.\n* `retrieval_role_arn` - ARN of an IAM role with permission to access the configuration at the specified location_uri.\n* `tags` - Map of tags for the resource.\n* `validator` - Nested list of methods for validating the configuration.\n    * `content` - Either the JSON Schema content or the ARN of an AWS Lambda function.\n    * `type` - Type of validator. Valid values: JSON_SCHEMA and LAMBDA.\n",
    "full_text": "---\nsubcategory: \"AppConfig\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appconfig_configuration_profile\"\ndescription: |-\n  Terraform data source for managing an AWS AppConfig Configuration Profile.\n---\n\n# Data Source: aws_appconfig_configuration_profile\n\nProvides access to an AppConfig Configuration Profile.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_appconfig_configuration_profile\" \"example\" {\n  application_id           = \"b5d5gpj\"\n  configuration_profile_id = \"qrbb1c1\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig application to which this configuration profile belongs.\n* `configuration_profile_id` - (Required) ID of the Configuration Profile.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the Configuration Profile.\n* `description` - Description of the Configuration Profile.\n* `id` - AppConfig Configuration Profile ID and Application ID separated by a colon `(:)`.\n* `location_uri` - Location URI of the Configuration Profile.\n* `name` - Name of the Configuration Profile.\n* `retrieval_role_arn` - ARN of an IAM role with permission to access the configuration at the specified location_uri.\n* `tags` - Map of tags for the resource.\n* `validator` - Nested list of methods for validating the configuration.\n    * `content` - Either the JSON Schema content or the ARN of an AWS Lambda function.\n    * `type` - Type of validator. Valid values: JSON_SCHEMA and LAMBDA.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appconfig_configuration_profile"
  },
  {
    "name": "aws_appconfig_configuration_profiles",
    "type": "data_source",
    "description": "subcategory: \"AppConfig\" layout: \"aws\" page_title: \"AWS: aws_appconfig_configuration_profiles\"",
    "example": "data \"aws_appconfig_configuration_profiles\" \"example\" {\n  application_id = \"a1d3rpe\"\n}\n\ndata \"aws_appconfig_configuration_profile\" \"example\" {\n  for_each                 = data.aws_appconfig_configuration_profiles.example.configuration_profile_ids\n  configuration_profile_id = each.value\n  application_id           = aws_appconfig_application.example.id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig Application.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `configuration_profile_ids` - Set of Configuration Profile IDs associated with the AppConfig Application.\n",
    "full_text": "---\nsubcategory: \"AppConfig\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appconfig_configuration_profiles\"\ndescription: |-\n    Terraform data source for managing an AWS AppConfig Configuration Profiles.\n---\n\n# Data Source: aws_appconfig_configuration_profiles\n\nProvides access to all Configuration Properties for an AppConfig Application. This will allow you to pass Configuration\nProfile IDs to another resource.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_appconfig_configuration_profiles\" \"example\" {\n  application_id = \"a1d3rpe\"\n}\n\ndata \"aws_appconfig_configuration_profile\" \"example\" {\n  for_each                 = data.aws_appconfig_configuration_profiles.example.configuration_profile_ids\n  configuration_profile_id = each.value\n  application_id           = aws_appconfig_application.example.id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig Application.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `configuration_profile_ids` - Set of Configuration Profile IDs associated with the AppConfig Application.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appconfig_configuration_profiles"
  },
  {
    "name": "aws_appconfig_environment",
    "type": "data_source",
    "description": "subcategory: \"AppConfig\" layout: \"aws\" page_title: \"AWS: aws_appconfig_environment\"",
    "example": "data \"aws_appconfig_environment\" \"example\" {\n  application_id = \"b5d5gpj\"\n  environment_id = \"qrbb1c1\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig Application to which this Environment belongs.\n* `environment_id` - (Required) ID of the AppConfig Environment.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the environment.\n* `name` - Name of the environment.\n* `description` - Name of the environment.\n* `monitor` - Set of Amazon CloudWatch alarms to monitor during the deployment process.\n    * `alarm_arn` - ARN of the Amazon CloudWatch alarm.\n    * `alarm_role_arn` - ARN of an IAM role for AWS AppConfig to monitor.\n* `state` - State of the environment. Possible values are `READY_FOR_DEPLOYMENT`, `DEPLOYING`, `ROLLING_BACK`\n  or `ROLLED_BACK`.\n* `tags` - Map of tags for the resource.\n",
    "full_text": "---\nsubcategory: \"AppConfig\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appconfig_environment\"\ndescription: |-\n  Terraform data source for managing an AWS AppConfig Environment.\n---\n\n# Data Source: aws_appconfig_environment\n\nProvides access to an AppConfig Environment.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_appconfig_environment\" \"example\" {\n  application_id = \"b5d5gpj\"\n  environment_id = \"qrbb1c1\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig Application to which this Environment belongs.\n* `environment_id` - (Required) ID of the AppConfig Environment.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the environment.\n* `name` - Name of the environment.\n* `description` - Name of the environment.\n* `monitor` - Set of Amazon CloudWatch alarms to monitor during the deployment process.\n    * `alarm_arn` - ARN of the Amazon CloudWatch alarm.\n    * `alarm_role_arn` - ARN of an IAM role for AWS AppConfig to monitor.\n* `state` - State of the environment. Possible values are `READY_FOR_DEPLOYMENT`, `DEPLOYING`, `ROLLING_BACK`\n  or `ROLLED_BACK`.\n* `tags` - Map of tags for the resource.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appconfig_environment"
  },
  {
    "name": "aws_appconfig_environments",
    "type": "data_source",
    "description": "subcategory: \"AppConfig\" layout: \"aws\" page_title: \"AWS: aws_appconfig_environments\"",
    "example": "data \"aws_appconfig_environments\" \"example\" {\n  application_id = \"a1d3rpe\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig Application.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `environment_ids` - Set of Environment IDs associated with this AppConfig Application.\n",
    "full_text": "---\nsubcategory: \"AppConfig\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appconfig_environments\"\ndescription: |-\n    Terraform data source for managing an AWS AppConfig Environments.\n---\n\n# Data Source: aws_appconfig_environments\n\nProvides access to all Environments for an AppConfig Application. This will allow you to pass Environment IDs to another\nresource.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_appconfig_environments\" \"example\" {\n  application_id = \"a1d3rpe\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `application_id` - (Required) ID of the AppConfig Application.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `environment_ids` - Set of Environment IDs associated with this AppConfig Application.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appconfig_environments"
  },
  {
    "name": "aws_appintegrations_event_integration",
    "type": "data_source",
    "description": "subcategory: \"AppIntegrations\" layout: \"aws\" page_title: \"AWS: aws_appintegrations_event_integration\"",
    "example": "data \"aws_appintegrations_event_integration\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) The AppIntegrations Event Integration name.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - The ARN of the AppIntegrations Event Integration.\n* `description` - The description of the Event Integration.\n* `eventbridge_bus` - The EventBridge bus.\n* `event_filter` - A block that defines the configuration information for the event filter. The Event Filter block is documented below.\n* `id` - The identifier of the Event Integration which is the name of the Event Integration.\n* `tags` - Metadata that you can assign to help organize the report plans you create.\n\n### Event Filter Attributes\n\n`event_filter` has the following attributes:\n\n* `source` - The source of the events.\n",
    "full_text": "---\nsubcategory: \"AppIntegrations\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appintegrations_event_integration\"\ndescription: |-\n  Provides details about an Amazon AppIntegrations Event Integration\n---\n\n# Data Source: aws_appintegrations_event_integration\n\nUse this data source to get information on an existing AppIntegrations Event Integration.\n\n## Example Usage\n\n```terraform\ndata \"aws_appintegrations_event_integration\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) The AppIntegrations Event Integration name.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - The ARN of the AppIntegrations Event Integration.\n* `description` - The description of the Event Integration.\n* `eventbridge_bus` - The EventBridge bus.\n* `event_filter` - A block that defines the configuration information for the event filter. The Event Filter block is documented below.\n* `id` - The identifier of the Event Integration which is the name of the Event Integration.\n* `tags` - Metadata that you can assign to help organize the report plans you create.\n\n### Event Filter Attributes\n\n`event_filter` has the following attributes:\n\n* `source` - The source of the events.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appintegrations_event_integration"
  },
  {
    "name": "aws_appmesh_gateway_route",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_gateway_route\"",
    "example": "data \"aws_appmesh_gateway_route\" \"test\" {\n  name                 = \"test-route\"\n  mesh_name            = \"test-mesh\"\n  virtual_gateway_name = \"test-gateway\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the gateway route.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual gateway exists.\n* `virtual_gateway_name` - (Required) Name of the virtual gateway in which the route exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the gateway route.\n* `created_date` - Creation date of the gateway route.\n* `last_updated_date` - Last update date of the gateway route.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Gateway route specification. See the [`aws_appmesh_gateway_route`](/docs/providers/aws/r/appmesh_gateway_route.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_gateway_route\"\ndescription: |-\n    Terraform data source for managing an AWS App Mesh Gateway Route.\n---\n\n# Data Source: aws_appmesh_gateway_route\n\nThe App Mesh Gateway Route data source allows details of an App Mesh Gateway Route to be retrieved by its name, mesh_name, virtual_gateway_name, and optionally the mesh_owner.\n\n## Example Usage\n\n```terraform\ndata \"aws_appmesh_gateway_route\" \"test\" {\n  name                 = \"test-route\"\n  mesh_name            = \"test-mesh\"\n  virtual_gateway_name = \"test-gateway\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the gateway route.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual gateway exists.\n* `virtual_gateway_name` - (Required) Name of the virtual gateway in which the route exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the gateway route.\n* `created_date` - Creation date of the gateway route.\n* `last_updated_date` - Last update date of the gateway route.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Gateway route specification. See the [`aws_appmesh_gateway_route`](/docs/providers/aws/r/appmesh_gateway_route.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_gateway_route"
  },
  {
    "name": "aws_appmesh_mesh",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_mesh\"",
    "example": "data \"aws_appmesh_mesh\" \"simple\" {\n  name = \"simpleapp\"\n}\n```\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_mesh\"\ndescription: |-\n    Terraform data source for managing an AWS App Mesh Mesh.\n---\n\n# Data Source: aws_appmesh_mesh\n\nThe App Mesh Mesh data source allows details of an App Mesh Mesh to be retrieved by its name and optionally the mesh_owner.\n\n## Example Usage\n\n```terraform\ndata \"aws_appmesh_mesh\" \"simple\" {\n  name = \"simpleapp\"\n}\n```\n\n```terraform\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_appmesh_mesh\" \"simple\" {\n  name       = \"simpleapp\"\n  mesh_owner = data.aws_caller_identity.current.account_id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the service mesh.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the service mesh.\n* `created_date` - Creation date of the service mesh.\n* `last_updated_date` - Last update date of the service mesh.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Service mesh specification. See the [`aws_appmesh_mesh`](/docs/providers/aws/r/appmesh_mesh.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_mesh"
  },
  {
    "name": "aws_appmesh_route",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_route\"",
    "example": "data \"aws_appmesh_route\" \"test\" {\n  name                = \"test-route\"\n  mesh_name           = \"test-mesh\"\n  virtual_router_name = \"test-router\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the route.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual router exists.\n* `virtual_router_name` - (Required) Name of the virtual router in which the route exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the route.\n* `created_date` - Creation date of the route.\n* `last_updated_date` - Last update date of the route.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Route specification. See the [`aws_appmesh_route`](/docs/providers/aws/r/appmesh_route.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_route\"\ndescription: |-\n    Terraform data source for managing an AWS App Mesh Route.\n---\n\n# Data Source: aws_appmesh_route\n\nThe App Mesh Route data source allows details of an App Mesh Route to be retrieved by its name, mesh_name, virtual_router_name, and optionally the mesh_owner.\n\n## Example Usage\n\n```terraform\ndata \"aws_appmesh_route\" \"test\" {\n  name                = \"test-route\"\n  mesh_name           = \"test-mesh\"\n  virtual_router_name = \"test-router\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the route.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual router exists.\n* `virtual_router_name` - (Required) Name of the virtual router in which the route exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the route.\n* `created_date` - Creation date of the route.\n* `last_updated_date` - Last update date of the route.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Route specification. See the [`aws_appmesh_route`](/docs/providers/aws/r/appmesh_route.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_route"
  },
  {
    "name": "aws_appmesh_virtual_gateway",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_virtual_gateway\"",
    "example": "data \"aws_appmesh_virtual_gateway\" \"example\" {\n  mesh_name = \"mesh-gateway\"\n  name      = \"example-mesh\"\n}\n```\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_virtual_gateway\"\ndescription: |-\n  Terraform data source for managing an AWS App Mesh Virtual Gateway.\n---\n\n# Data Source: aws_appmesh_virtual_gateway\n\nTerraform data source for managing an AWS App Mesh Virtual Gateway.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_appmesh_virtual_gateway\" \"example\" {\n  mesh_name = \"mesh-gateway\"\n  name      = \"example-mesh\"\n}\n```\n\n```terraform\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_appmesh_virtual_gateway\" \"test\" {\n  name       = \"example.mesh.local\"\n  mesh_name  = \"example-mesh\"\n  mesh_owner = data.aws_caller_identity.current.account_id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the virtual gateway.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual gateway exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the virtual gateway.\n* `created_date` - Creation date of the virtual gateway.\n* `last_updated_date` - Last update date of the virtual gateway.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Virtual gateway specification. See the [`aws_appmesh_virtual_gateway`](/docs/providers/aws/r/appmesh_virtual_gateway.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_virtual_gateway"
  },
  {
    "name": "aws_appmesh_virtual_node",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_virtual_node\"",
    "example": "data \"aws_appmesh_virtual_node\" \"test\" {\n  name      = \"serviceBv1\"\n  mesh_name = \"example-mesh\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the virtual node.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual node exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the virtual node.\n* `created_date` - Creation date of the virtual node.\n* `last_updated_date` - Last update date of the virtual node.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Virtual node specification. See the [`aws_appmesh_virtual_node`](/docs/providers/aws/r/appmesh_virtual_node.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_virtual_node\"\ndescription: |-\n    Terraform data source for managing an AWS App Mesh Virtual Node.\n---\n\n# Data Source: aws_appmesh_virtual_node\n\nTerraform data source for managing an AWS App Mesh Virtual Node.\n\n## Example Usage\n\n```terraform\ndata \"aws_appmesh_virtual_node\" \"test\" {\n  name      = \"serviceBv1\"\n  mesh_name = \"example-mesh\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the virtual node.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual node exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the virtual node.\n* `created_date` - Creation date of the virtual node.\n* `last_updated_date` - Last update date of the virtual node.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Virtual node specification. See the [`aws_appmesh_virtual_node`](/docs/providers/aws/r/appmesh_virtual_node.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_virtual_node"
  },
  {
    "name": "aws_appmesh_virtual_router",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_virtual_router\"",
    "example": "data \"aws_appmesh_virtual_router\" \"test\" {\n  name      = \"example-router-name\"\n  mesh_name = \"example-mesh-name\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the virtual router.\n* `mesh_name` - (Required) Name of the mesh in which the virtual router exists\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the virtual router.\n* `created_date` - Creation date of the virtual router.\n* `last_updated_date` - Last update date of the virtual router.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Virtual routers specification. See the [`aws_appmesh_virtual_router`](/docs/providers/aws/r/appmesh_virtual_router.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_virtual_router\"\ndescription: |-\n    Terraform data source for managing an AWS App Mesh Virtual Router.\n---\n\n# Data Source: aws_appmesh_virtual_router\n\nThe App Mesh Virtual Router data source allows details of an App Mesh Virtual Service to be retrieved by its name and mesh_name.\n\n## Example Usage\n\n```terraform\ndata \"aws_appmesh_virtual_router\" \"test\" {\n  name      = \"example-router-name\"\n  mesh_name = \"example-mesh-name\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the virtual router.\n* `mesh_name` - (Required) Name of the mesh in which the virtual router exists\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the virtual router.\n* `created_date` - Creation date of the virtual router.\n* `last_updated_date` - Last update date of the virtual router.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Virtual routers specification. See the [`aws_appmesh_virtual_router`](/docs/providers/aws/r/appmesh_virtual_router.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_virtual_router"
  },
  {
    "name": "aws_appmesh_virtual_service",
    "type": "data_source",
    "description": "subcategory: \"App Mesh\" layout: \"aws\" page_title: \"AWS: aws_appmesh_virtual_service\"",
    "example": "data \"aws_appmesh_virtual_service\" \"test\" {\n  name      = \"example.mesh.local\"\n  mesh_name = \"example-mesh\"\n}\n```\n",
    "full_text": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_virtual_service\"\ndescription: |-\n    Terraform data source for managing an AWS App Mesh Virtual Service.\n---\n\n# Data Source: aws_appmesh_virtual_service\n\nThe App Mesh Virtual Service data source allows details of an App Mesh Virtual Service to be retrieved by its name, mesh_name, and optionally the mesh_owner.\n\n## Example Usage\n\n```terraform\ndata \"aws_appmesh_virtual_service\" \"test\" {\n  name      = \"example.mesh.local\"\n  mesh_name = \"example-mesh\"\n}\n```\n\n```terraform\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_appmesh_virtual_service\" \"test\" {\n  name       = \"example.mesh.local\"\n  mesh_name  = \"example-mesh\"\n  mesh_owner = data.aws_caller_identity.current.account_id\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the virtual service.\n* `mesh_name` - (Required) Name of the service mesh in which the virtual service exists.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the virtual service.\n* `created_date` - Creation date of the virtual service.\n* `last_updated_date` - Last update date of the virtual service.\n* `resource_owner` - Resource owner's AWS account ID.\n* `spec` - Virtual service specification. See the [`aws_appmesh_virtual_service`](/docs/providers/aws/r/appmesh_virtual_service.html#spec) resource for details.\n* `tags` - Map of tags.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appmesh_virtual_service"
  },
  {
    "name": "aws_apprunner_hosted_zone_id",
    "type": "data_source",
    "description": "subcategory: \"App Runner\" layout: \"aws\" page_title: \"AWS: aws_apprunner_hosted_zone_id\"",
    "example": "data \"aws_apprunner_hosted_zone_id\" \"main\" {}\n\nresource \"aws_route53_record\" \"www\" {\n  zone_id = aws_route53_zone.primary.zone_id\n  name    = \"example.com\"\n  type    = \"A\"\n\n  alias {\n    name                   = aws_apprunner_custom_domain_association.main.dns_target\n    zone_id                = data.aws_apprunner_hosted_zone_id.main.id\n    evaluate_target_health = true\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Name of the Region whose AWS App Runner service HostedZoneId is desired. Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the AWS App Runner service HostedZoneId in the selected Region.\n",
    "full_text": "---\nsubcategory: \"App Runner\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apprunner_hosted_zone_id\"\ndescription: |-\n  Get AWS App Runner Hosted Zone Id\n---\n\n# Data Source: aws_apprunner_hosted_zone_id\n\nUse this data source to get the HostedZoneId of an AWS App Runner service deployed\nin a given region for the purpose of using it in an AWS Route53 Alias record.\n\n## Example Usage\n\n```terraform\ndata \"aws_apprunner_hosted_zone_id\" \"main\" {}\n\nresource \"aws_route53_record\" \"www\" {\n  zone_id = aws_route53_zone.primary.zone_id\n  name    = \"example.com\"\n  type    = \"A\"\n\n  alias {\n    name                   = aws_apprunner_custom_domain_association.main.dns_target\n    zone_id                = data.aws_apprunner_hosted_zone_id.main.id\n    evaluate_target_health = true\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Name of the Region whose AWS App Runner service HostedZoneId is desired. Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the AWS App Runner service HostedZoneId in the selected Region.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/apprunner_hosted_zone_id"
  },
  {
    "name": "aws_appstream_image",
    "type": "data_source",
    "description": "subcategory: \"AppStream 2.0\" layout: \"aws\" page_title: \"AWS: aws_appstream_image\"",
    "example": "data \"aws_appstream_image\" \"test\" {\n  name        = \"AppStream-WinServer2019-06-17-2024\"\n  type        = \"PUBLIC\"\n  most_recent = true\n}\n\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - Name of the image being searched for. Cannot be used with name_regex or arn.\n* `name_regex` - Regular expression name of the image being searched for. Cannot be used with arn or name.\n* `arn` - Arn of the image being searched for. Cannot be used with name_regex or name.\n* `type` - The type of image which must be (PUBLIC, PRIVATE, or SHARED).\n* `most_recent` - Boolean that if it is set to true and there are multiple images returned the most recent will be returned. If it is set to false and there are multiple images return the datasource will error.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `application` - A application object that contains the following:\n    * `app_block_arn` - The app block ARN of the application.\n    * `created_time` - The time at which the application was created within the app block.\n    * `description` - The description of the application.\n    * `display_name` - The application name to display.\n    * `enabled` - Bool based on if the application is enabled.\n    * `icon_s3_location` - A list named icon_s3_location that contains the following:\n        * `s3_bucket` - S3 bucket of the S3 object.\n        * `s3_key` - S3 key of the S3 object.\n    * `icon_url` - URL of the application icon. This URL may be time-limited.\n    * `instance_families` - List of the instance families of the application.\n    * `launch_parameters` - Arguments that are passed to the application at it's launch.\n    * `launch_path` -  Path to the application's excecutable in the instance.\n    * `metadata` - String to string map that contains additional attributes used to describe the application.\n    * `Name` - Name of the application.\n    * `platforms` - Array of strings describing the platforms on which the application can run.\n      Values will be from: WINDOWS | WINDOWS_SERVER_2016 | WINDOWS_SERVER_2019 | WINDOWS_SERVER_2022 | AMAZON_LINUX2\n    * `working_directory` - Working directory for the application.\n* `appstream_agent_version` - Version of the AppStream 2.0 agent to use for instances that are launched from this image. Has a maximum length of 100 characters.\n* `arn` - ARN of the image.\n* `base_image_arn` - ARN of the image from which the image was created.\n* `created_time` - Time at which this image was created.\n* `description` - Description of image.\n* `display_name` - Image name to display.\n* `image_builder_name` - The name of the image builder that was used to created the private image. If the image is sharedthen the value is null.\n* `image_builder_supported` - Boolean to indicate whether an image builder can be launched from this image.\n* `image error` - Resource error object that describes the error containing the following:",
    "full_text": "---\nsubcategory: \"AppStream 2.0\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appstream_image\"\ndescription: |-\n  Terraform data source for describing an AWS AppStream 2.0 Appstream Image.\n---\n\n# Data Source: aws_appstream_image\n\nTerraform data source for managing an AWS AppStream 2.0 Image.\n\n## Example Usage\n\n```terraform\ndata \"aws_appstream_image\" \"test\" {\n  name        = \"AppStream-WinServer2019-06-17-2024\"\n  type        = \"PUBLIC\"\n  most_recent = true\n}\n\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - Name of the image being searched for. Cannot be used with name_regex or arn.\n* `name_regex` - Regular expression name of the image being searched for. Cannot be used with arn or name.\n* `arn` - Arn of the image being searched for. Cannot be used with name_regex or name.\n* `type` - The type of image which must be (PUBLIC, PRIVATE, or SHARED).\n* `most_recent` - Boolean that if it is set to true and there are multiple images returned the most recent will be returned. If it is set to false and there are multiple images return the datasource will error.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `application` - A application object that contains the following:\n    * `app_block_arn` - The app block ARN of the application.\n    * `created_time` - The time at which the application was created within the app block.\n    * `description` - The description of the application.\n    * `display_name` - The application name to display.\n    * `enabled` - Bool based on if the application is enabled.\n    * `icon_s3_location` - A list named icon_s3_location that contains the following:\n        * `s3_bucket` - S3 bucket of the S3 object.\n        * `s3_key` - S3 key of the S3 object.\n    * `icon_url` - URL of the application icon. This URL may be time-limited.\n    * `instance_families` - List of the instance families of the application.\n    * `launch_parameters` - Arguments that are passed to the application at it's launch.\n    * `launch_path` -  Path to the application's excecutable in the instance.\n    * `metadata` - String to string map that contains additional attributes used to describe the application.\n    * `Name` - Name of the application.\n    * `platforms` - Array of strings describing the platforms on which the application can run.\n      Values will be from: WINDOWS | WINDOWS_SERVER_2016 | WINDOWS_SERVER_2019 | WINDOWS_SERVER_2022 | AMAZON_LINUX2\n    * `working_directory` - Working directory for the application.\n* `appstream_agent_version` - Version of the AppStream 2.0 agent to use for instances that are launched from this image. Has a maximum length of 100 characters.\n* `arn` - ARN of the image.\n* `base_image_arn` - ARN of the image from which the image was created.\n* `created_time` - Time at which this image was created.\n* `description` - Description of image.\n* `display_name` - Image name to display.\n* `image_builder_name` - The name of the image builder that was used to created the private image. If the image is sharedthen the value is null.\n* `image_builder_supported` - Boolean to indicate whether an image builder can be launched from this image.\n* `image error` - Resource error object that describes the error containing the following:\n    * `error_code` - Error code of the image. Values will be from: IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION | IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION | IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION | NETWORK_INTERFACE_LIMIT_EXCEEDED | INTERNAL_SERVICE_ERROR | IAM_SERVICE_ROLE_IS_MISSING | MACHINE_ROLE_IS_MISSING | STS_DISABLED_IN_REGION | SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES | IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION | SUBNET_NOT_FOUND | IMAGE_NOT_FOUND | INVALID_SUBNET_CONFIGURATION | SECURITY_GROUPS_NOT_FOUND | IGW_NOT_ATTACHED | IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION | FLEET_STOPPED | FLEET_INSTANCE_PROVISIONING_FAILURE | DOMAIN_JOIN_ERROR_FILE_NOT_FOUND | DOMAIN_JOIN_ERROR_ACCESS_DENIED | DOMAIN_JOIN_ERROR_LOGON_FAILURE | DOMAIN_JOIN_ERROR_INVALID_PARAMETER | DOMAIN_JOIN_ERROR_MORE_DATA | DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN | DOMAIN_JOIN_ERROR_NOT_SUPPORTED | DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME | DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED | DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED | DOMAIN_JOIN_NERR_PASSWORD_EXPIRED | DOMAIN_JOIN_INTERNAL_SERVICE_ERROR as the values.\n    * `error_message` - Error message of the image.\n    * `error_timestamp` - Time when the error occurred.\n* `image_permissions` - List of strings describing the image permissions containing the following:\n    * `allow_fleet` - Boolean indicating if the image can be used for a fleet.\n    * `a",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/appstream_image"
  },
  {
    "name": "aws_arn",
    "type": "data_source",
    "description": "subcategory: \"Meta Data Sources\" layout: \"aws\" page_title: \"AWS: aws_arn\"",
    "example": "data \"aws_arn\" \"db_instance\" {\n  arn = \"arn:aws:rds:eu-west-1:123456789012:db:mysql-db\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `arn` - (Required) ARN to parse.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `partition` - Partition that the resource is in.\n* `service` - The [service namespace](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces) that identifies the AWS product.\n* `region` - Region the resource resides in.\nNote that the ARNs for some resources do not include a Region, so this component might be omitted.\n* `account` - The [ID](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS account that owns the resource, without the hyphens.\n* `resource` - Content of this part of the ARN varies by service.\nIt often includes an indicator of the type of resource\u2014for example, an IAM user or Amazon RDS database \u2014followed by a slash (/) or a colon (:), followed by the resource name itself.\n",
    "full_text": "---\nsubcategory: \"Meta Data Sources\"\nlayout: \"aws\"\npage_title: \"AWS: aws_arn\"\ndescription: |-\n    Parses an ARN into its constituent parts.\n---\n\n# Data Source: aws_arn\n\nParses an ARN into its constituent parts.\n\n## Example Usage\n\n```terraform\ndata \"aws_arn\" \"db_instance\" {\n  arn = \"arn:aws:rds:eu-west-1:123456789012:db:mysql-db\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `arn` - (Required) ARN to parse.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `partition` - Partition that the resource is in.\n* `service` - The [service namespace](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces) that identifies the AWS product.\n* `region` - Region the resource resides in.\nNote that the ARNs for some resources do not include a Region, so this component might be omitted.\n* `account` - The [ID](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS account that owns the resource, without the hyphens.\n* `resource` - Content of this part of the ARN varies by service.\nIt often includes an indicator of the type of resource\u2014for example, an IAM user or Amazon RDS database \u2014followed by a slash (/) or a colon (:), followed by the resource name itself.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/arn"
  },
  {
    "name": "aws_athena_named_query",
    "type": "data_source",
    "description": "subcategory: \"Athena\" layout: \"aws\" page_title: \"AWS: aws_athena_named_query\"",
    "example": "data \"aws_athena_named_query\" \"example\" {\n  name = \"athenaQueryName\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) The plain language name for the query. Maximum length of 128.\n* `workgroup` - (Optional) The workgroup to which the query belongs. Defaults to `primary`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `database` - Database to which the query belongs.\n* `description` - Brief explanation of the query.\n* `id` - The unique ID of the query.\n* `query` - Text of the query itself.\n",
    "full_text": "---\nsubcategory: \"Athena\"\nlayout: \"aws\"\npage_title: \"AWS: aws_athena_named_query\"\ndescription: |-\n    Provides an Athena Named Query data source.\n---\n\n# Data Source: aws_athena_named_query\n\nProvides an Athena Named Query data source.\n\n## Example Usage\n\n```terraform\ndata \"aws_athena_named_query\" \"example\" {\n  name = \"athenaQueryName\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) The plain language name for the query. Maximum length of 128.\n* `workgroup` - (Optional) The workgroup to which the query belongs. Defaults to `primary`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `database` - Database to which the query belongs.\n* `description` - Brief explanation of the query.\n* `id` - The unique ID of the query.\n* `query` - Text of the query itself.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/athena_named_query"
  },
  {
    "name": "aws_auditmanager_control",
    "type": "data_source",
    "description": "subcategory: \"Audit Manager\" layout: \"aws\" page_title: \"AWS: aws_auditmanager_control\"",
    "example": "data \"aws_auditmanager_control\" \"example\" {\n  name = \"1. Risk Management\"\n  type = \"Standard\"\n}\n```\n\n### With Framework Resource\n",
    "full_text": "---\nsubcategory: \"Audit Manager\"\nlayout: \"aws\"\npage_title: \"AWS: aws_auditmanager_control\"\ndescription: |-\n  Terraform data source for managing an AWS Audit Manager Control.\n---\n\n# Data Source: aws_auditmanager_control\n\nTerraform data source for managing an AWS Audit Manager Control.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_auditmanager_control\" \"example\" {\n  name = \"1. Risk Management\"\n  type = \"Standard\"\n}\n```\n\n### With Framework Resource\n\n```terraform\ndata \"aws_auditmanager_control\" \"example\" {\n  name = \"1. Risk Management\"\n  type = \"Standard\"\n}\n\ndata \"aws_auditmanager_control\" \"example2\" {\n  name = \"2. Personnel\"\n  type = \"Standard\"\n}\n\nresource \"aws_auditmanager_framework\" \"example\" {\n  name = \"example\"\n\n  control_sets {\n    name = \"example\"\n    controls {\n      id = data.aws_auditmanager_control.example.id\n    }\n  }\n  control_sets {\n    name = \"example2\"\n    controls {\n      id = data.aws_auditmanager_control.example2.id\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the control.\n* `type` - (Required) Type of control. Valid values are `Custom` and `Standard`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\nSee the [`aws_auditmanager_control` resource](/docs/providers/aws/r/auditmanager_control.html) for details on the returned attributes - they are identical.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/auditmanager_control"
  },
  {
    "name": "aws_auditmanager_framework",
    "type": "data_source",
    "description": "subcategory: \"Audit Manager\" layout: \"aws\" page_title: \"AWS: aws_auditmanager_framework\"",
    "example": "data \"aws_auditmanager_framework\" \"example\" {\n  name           = \"Essential Eight\"\n  framework_type = \"Standard\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the framework.\n* `type` - (Required) Type of framework. Valid values are `Custom` and `Standard`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\nSee the [`aws_auditmanager_framework` resource](/docs/providers/aws/r/auditmanager_framework.html) for details on the returned attributes - they are identical.\n",
    "full_text": "---\nsubcategory: \"Audit Manager\"\nlayout: \"aws\"\npage_title: \"AWS: aws_auditmanager_framework\"\ndescription: |-\n  Terraform data source for managing an AWS Audit Manager Framework.\n---\n\n# Data Source: aws_auditmanager_framework\n\nTerraform data source for managing an AWS Audit Manager Framework.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_auditmanager_framework\" \"example\" {\n  name           = \"Essential Eight\"\n  framework_type = \"Standard\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the framework.\n* `type` - (Required) Type of framework. Valid values are `Custom` and `Standard`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\nSee the [`aws_auditmanager_framework` resource](/docs/providers/aws/r/auditmanager_framework.html) for details on the returned attributes - they are identical.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/auditmanager_framework"
  },
  {
    "name": "aws_autoscaling_group",
    "type": "data_source",
    "description": "subcategory: \"Auto Scaling\" layout: \"aws\" page_title: \"AWS: aws_autoscaling_group\"",
    "example": "data \"aws_autoscaling_group\" \"foo\" {\n  name = \"foo\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - Specify the exact name of the desired autoscaling group.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the Auto Scaling group.\n* `availability_zones` - One or more Availability Zones for the group.\n* `default_cool_down` - Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.\n* `desired_capacity` - Desired size of the group.\n* `desired_capacity_type` - The unit of measurement for the value returned for `desired_capacity`.\n* `enabled_metrics` - List of metrics enabled for collection.\n* `health_check_grace_period` - The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.\n* `health_check_type` - Service to use for the health checks. The valid values are EC2 and ELB.\n* `id` - Name of the Auto Scaling Group.\n* `instance_maintenance_policy` - Instance maintenance policy for the group.\n    * `min_healthy_percentage` - Specifies the lower limit on the number of instances that must be in the InService state with a healthy status during an instance replacement activity.\n    * `max_healthy_percentage` - Specifies the upper limit on the number of instances that are in the InService or Pending state with a healthy status during an instance replacement activity.\n* `launch_configuration` - The name of the associated launch configuration.\n* `launch_template` - List of launch templates for the group.\n    * `id` - ID of the launch template.\n    * `name` - Name of the launch template.\n    * `version` - Template version.\n* `load_balancers` - One or more load balancers associated with the group.\n* `max_instance_lifetime` - Maximum amount of time, in seconds, that an instance can be in service.\n* `max_size` - Maximum size of the group.\n* `min_size` - Minimum size of the group.\n* `mixed_instances_policy` - List of mixed instances policy objects for the group.\n    * `instances_distribution` - List of instances distribution objects.\n        * `on_demand_allocation_strategy` - Strategy used when launching on-demand instances.\n        * `on_demand_base_capacity` -  Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances.\n        * `spot_allocation_strategy` - Strategy used when launching Spot instances.\n        * `spot_instance_pools` - Number of Spot pools per availability zone to allocate capacity.\n        * `spot_max_price` - Maximum price per unit hour that the user is willing to pay for the Spot instances.\n    * `launch_template` - List of launch templates along with the overrides.\n        * `launch_template_specification` - List of launch template specification objects.\n            * `launch_template_id` - ID of the launch template.\n            * `launch_template_name` - Name of the launch template.\n            * `version` - Template version.\n        * `override` - List of properties overriding the same properties in the launch template.",
    "full_text": "---\nsubcategory: \"Auto Scaling\"\nlayout: \"aws\"\npage_title: \"AWS: aws_autoscaling_group\"\ndescription: |-\n  Get information on an Amazon EC2 Autoscaling Group.\n---\n\n# Data Source: aws_autoscaling_group\n\nUse this data source to get information on an existing autoscaling group.\n\n## Example Usage\n\n```terraform\ndata \"aws_autoscaling_group\" \"foo\" {\n  name = \"foo\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - Specify the exact name of the desired autoscaling group.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the Auto Scaling group.\n* `availability_zones` - One or more Availability Zones for the group.\n* `default_cool_down` - Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.\n* `desired_capacity` - Desired size of the group.\n* `desired_capacity_type` - The unit of measurement for the value returned for `desired_capacity`.\n* `enabled_metrics` - List of metrics enabled for collection.\n* `health_check_grace_period` - The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.\n* `health_check_type` - Service to use for the health checks. The valid values are EC2 and ELB.\n* `id` - Name of the Auto Scaling Group.\n* `instance_maintenance_policy` - Instance maintenance policy for the group.\n    * `min_healthy_percentage` - Specifies the lower limit on the number of instances that must be in the InService state with a healthy status during an instance replacement activity.\n    * `max_healthy_percentage` - Specifies the upper limit on the number of instances that are in the InService or Pending state with a healthy status during an instance replacement activity.\n* `launch_configuration` - The name of the associated launch configuration.\n* `launch_template` - List of launch templates for the group.\n    * `id` - ID of the launch template.\n    * `name` - Name of the launch template.\n    * `version` - Template version.\n* `load_balancers` - One or more load balancers associated with the group.\n* `max_instance_lifetime` - Maximum amount of time, in seconds, that an instance can be in service.\n* `max_size` - Maximum size of the group.\n* `min_size` - Minimum size of the group.\n* `mixed_instances_policy` - List of mixed instances policy objects for the group.\n    * `instances_distribution` - List of instances distribution objects.\n        * `on_demand_allocation_strategy` - Strategy used when launching on-demand instances.\n        * `on_demand_base_capacity` -  Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances.\n        * `spot_allocation_strategy` - Strategy used when launching Spot instances.\n        * `spot_instance_pools` - Number of Spot pools per availability zone to allocate capacity.\n        * `spot_max_price` - Maximum price per unit hour that the user is willing to pay for the Spot instances.\n    * `launch_template` - List of launch templates along with the overrides.\n        * `launch_template_specification` - List of launch template specification objects.\n            * `launch_template_id` - ID of the launch template.\n            * `launch_template_name` - Name of the launch template.\n            * `version` - Template version.\n        * `override` - List of properties overriding the same properties in the launch template.\n            * `instance_requirements` - List of instance requirements objects.\n                * `accelerator_count - List of objects describing the minimum and maximum number of accelerators for an instance type.\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `accelerator_manufacturers` - List of accelerator manufacturer names.\n                * `accelerator_names` - List of accelerator names.\n                * `accelerator_total_memory_mib` - List of objects describing the minimum and maximum total memory of the accelerators.\n                * `accelerator_types` - List of accelerator types.\n                * `allowed_instance_types` - List of instance types to apply the specified attributes against.\n                * `bare_metal` - Indicates whether bare metal instances are included, excluded, or required.\n                * `baseline_ebs_bandwidth_mbps` - List of objects describing the minimum and maximum baseline EBS bandwidth (Mbps).\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `burstable_performance` - Indicates whether burstable performance instance types are included, excluded, or required.\n    ",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/autoscaling_group"
  },
  {
    "name": "aws_autoscaling_groups",
    "type": "data_source",
    "description": "subcategory: \"Auto Scaling\" layout: \"aws\" page_title: \"AWS: aws_autoscaling_groups\"",
    "example": "data \"aws_autoscaling_groups\" \"groups\" {\n  filter {\n    name   = \"tag:Team\"\n    values = [\"Pets\"]\n  }\n\n  filter {\n    name   = \"tag-key\"\n    values = [\"Environment\"]\n  }\n}\n\nresource \"aws_autoscaling_notification\" \"slack_notifications\" {\n  group_names = data.aws_autoscaling_groups.groups.names\n\n  notifications = [\n    \"autoscaling:EC2_INSTANCE_LAUNCH\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE\",\n    \"autoscaling:EC2_INSTANCE_LAUNCH_ERROR\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE_ERROR\",\n  ]\n\n  topic_arn = \"TOPIC ARN\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `names` - (Optional) List of autoscaling group names\n* `filter` - (Optional) Filter used to scope the list e.g., by tags. See [related docs](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_Filter.html).\n    * `name` - (Required) Name of the DescribeAutoScalingGroup filter. The recommended values are: `tag-key`, `tag-value`, and `tag:<tag name>`\n    * `values` - (Required) Value of the filter.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arns` - List of the Autoscaling Groups Arns in the current region.\n* `id` - AWS Region.\n* `names` - List of the Autoscaling Groups in the current region.\n",
    "full_text": "---\nsubcategory: \"Auto Scaling\"\nlayout: \"aws\"\npage_title: \"AWS: aws_autoscaling_groups\"\ndescription: |-\n    Provides a list of Autoscaling Groups within a specific region.\n---\n\n# Data Source: aws_autoscaling_groups\n\nThe Autoscaling Groups data source allows access to the list of AWS\nASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.\n\n## Example Usage\n\n```terraform\ndata \"aws_autoscaling_groups\" \"groups\" {\n  filter {\n    name   = \"tag:Team\"\n    values = [\"Pets\"]\n  }\n\n  filter {\n    name   = \"tag-key\"\n    values = [\"Environment\"]\n  }\n}\n\nresource \"aws_autoscaling_notification\" \"slack_notifications\" {\n  group_names = data.aws_autoscaling_groups.groups.names\n\n  notifications = [\n    \"autoscaling:EC2_INSTANCE_LAUNCH\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE\",\n    \"autoscaling:EC2_INSTANCE_LAUNCH_ERROR\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE_ERROR\",\n  ]\n\n  topic_arn = \"TOPIC ARN\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `names` - (Optional) List of autoscaling group names\n* `filter` - (Optional) Filter used to scope the list e.g., by tags. See [related docs](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_Filter.html).\n    * `name` - (Required) Name of the DescribeAutoScalingGroup filter. The recommended values are: `tag-key`, `tag-value`, and `tag:<tag name>`\n    * `values` - (Required) Value of the filter.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arns` - List of the Autoscaling Groups Arns in the current region.\n* `id` - AWS Region.\n* `names` - List of the Autoscaling Groups in the current region.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/autoscaling_groups"
  },
  {
    "name": "aws_availability_zone",
    "type": "data_source",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_availability_zone\"",
    "example": "variable \"region_number\" {\n  # Arbitrary mapping of region name to number to use in\n  # a VPC's CIDR prefix.\n  default = {\n    us-east-1      = 1\n    us-west-1      = 2\n    us-west-2      = 3\n    eu-central-1   = 4\n    ap-northeast-1 = 5\n  }\n}\n\nvariable \"az_number\" {\n  # Assign a number to each AZ letter used in our configuration\n  default = {\n    a = 1\n    b = 2\n    c = 3\n    d = 4\n    e = 5\n    f = 6\n  }\n}\n\n# Retrieve the AZ where we want to create network resources\n# This must be in the region selected on the AWS provider.\ndata \"aws_availability_zone\" \"example\" {\n  name = \"eu-central-1a\"\n}\n\n# Create a VPC for the region associated with the AZ\nresource \"aws_vpc\" \"example\" {\n  cidr_block = cidrsubnet(\"10.0.0.0/8\", 4, var.region_number[data.aws_availability_zone.example.region])\n}\n\n# Create a subnet for the AZ within the regional VPC\nresource \"aws_subnet\" \"example\" {\n  vpc_id     = aws_vpc.example.id\n  cidr_block = cidrsubnet(aws_vpc.example.cidr_block, 4, var.az_number[data.aws_availability_zone.example.name_suffix])\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `all_availability_zones` - (Optional) Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `name` - (Optional) Full name of the availability zone to select.",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_availability_zone\"\ndescription: |-\n    Provides details about a specific availability zone\n---\n\n# Data Source: aws_availability_zone\n\n`aws_availability_zone` provides details about a specific availability zone (AZ)\nin the current Region.\n\nThis can be used both to validate an availability zone given in a variable\nand to split the AZ name into its component parts of an AWS Region and an\nAZ identifier letter. The latter may be useful e.g., for implementing a\nconsistent subnet numbering scheme across several regions by mapping both\nthe region and the subnet letter to network numbers.\n\nThis is different from the `aws_availability_zones` (plural) data source,\nwhich provides a list of the available zones.\n\n## Example Usage\n\nThe following example shows how this data source might be used to derive\nVPC and subnet CIDR prefixes systematically for an availability zone.\n\n```terraform\nvariable \"region_number\" {\n  # Arbitrary mapping of region name to number to use in\n  # a VPC's CIDR prefix.\n  default = {\n    us-east-1      = 1\n    us-west-1      = 2\n    us-west-2      = 3\n    eu-central-1   = 4\n    ap-northeast-1 = 5\n  }\n}\n\nvariable \"az_number\" {\n  # Assign a number to each AZ letter used in our configuration\n  default = {\n    a = 1\n    b = 2\n    c = 3\n    d = 4\n    e = 5\n    f = 6\n  }\n}\n\n# Retrieve the AZ where we want to create network resources\n# This must be in the region selected on the AWS provider.\ndata \"aws_availability_zone\" \"example\" {\n  name = \"eu-central-1a\"\n}\n\n# Create a VPC for the region associated with the AZ\nresource \"aws_vpc\" \"example\" {\n  cidr_block = cidrsubnet(\"10.0.0.0/8\", 4, var.region_number[data.aws_availability_zone.example.region])\n}\n\n# Create a subnet for the AZ within the regional VPC\nresource \"aws_subnet\" \"example\" {\n  vpc_id     = aws_vpc.example.id\n  cidr_block = cidrsubnet(aws_vpc.example.cidr_block, 4, var.az_number[data.aws_availability_zone.example.name_suffix])\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `all_availability_zones` - (Optional) Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `name` - (Optional) Full name of the availability zone to select.\n* `state` - (Optional) Specific availability zone state to require. May be any of `\"available\"`, `\"information\"` or `\"impaired\"`.\n* `zone_id` - (Optional) Zone ID of the availability zone to select.\n\nThe arguments of this data source act as filters for querying the available\navailability zones. The given filters must match exactly one availability\nzone whose data will be exported as attributes.\n\n### filter Configuration Block\n\nThe `filter` configuration block supports the following arguments:\n\n* `name` - (Required) Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `group_long_name` - The long name of the Availability Zone group, Local Zone group, or Wavelength Zone group.\n* `group_name` - The name of the zone group. For example: `us-east-1-zg-1`, `us-west-2-lax-1`, or `us-east-1-wl1-bos-wlz-1`.\n* `name_suffix` - Part of the AZ name that appears after the region name, uniquely identifying the AZ within its region.\nFor Availability Zones this is usually a single letter, for example `a` for the `us-west-2a` zone.\nFor Local and Wavelength Zones this is a longer string, for example `wl1-sfo-wlz-1` for the `us-west-2-wl1-sfo-wlz-1` zone.\n* `network_border_group` - The name of the location from which the address is advertised.\n* `opt_in_status` - For Availability Zones, this always has the value of `opt-in-not-required`. For Local Zones, this is the opt in status. The possible values are `opted-in` and `not-opted-in`.\n* `parent_zone_id` - ID of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.\n* `parent_zone_name` - Name of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.\n* `zone_type` - Type of zone. Values are `availability-zone`, `local-zone`, and `wavelength-zone`.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeout",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/availability_zone"
  },
  {
    "name": "aws_availability_zones",
    "type": "data_source",
    "description": "subcategory: \"EC2 (Elastic Compute Cloud)\" layout: \"aws\" page_title: \"AWS: aws_availability_zones\"",
    "example": "# Declare the data source\ndata \"aws_availability_zones\" \"available\" {\n  state = \"available\"\n}\n\n# e.g., Create subnets in the first two available availability zones\n\nresource \"aws_subnet\" \"primary\" {\n  availability_zone = data.aws_availability_zones.available.names[0]\n\n  # ...\n}\n\nresource \"aws_subnet\" \"secondary\" {\n  availability_zone = data.aws_availability_zones.available.names[1]\n\n  # ...\n}\n```\n\n### By Filter\n\nAll Local Zones (regardless of opt-in status):\n\ndata \"aws_availability_zones\" \"example\" {\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"opt-in-not-required\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `all_availability_zones` - (Optional) Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `exclude_names` - (Optional) List of Availability Zone names to exclude.\n* `exclude_zone_ids` - (Optional) List of Availability Zone IDs to exclude.\n* `state` - (Optional) Allows to filter list of Availability Zones based on their\ncurrent state. Can be either `\"available\"`, `\"information\"`, `\"impaired\"` or\n`\"unavailable\"`. By default the list includes a complete set of Availability Zones\nto which the underlying AWS account has access, regardless of their state.\n\n### filter Configuration Block\n\nThe `filter` configuration block supports the following arguments:\n",
    "full_text": "---\nsubcategory: \"EC2 (Elastic Compute Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_availability_zones\"\ndescription: |-\n    Provides a list of Availability Zones which can be used by an AWS account.\n---\n\n# Data Source: aws_availability_zones\n\nThe Availability Zones data source allows access to the list of AWS\nAvailability Zones which can be accessed by an AWS account within the region\nconfigured in the provider.\n\nThis is different from the `aws_availability_zone` (singular) data source,\nwhich provides some details about a specific availability zone.\n\n-> When [Local Zones](https://aws.amazon.com/about-aws/global-infrastructure/localzones/) are enabled in a region, by default the API and this data source include both Local Zones and Availability Zones. To return only Availability Zones, see the example section below.\n\n## Example Usage\n\n### By State\n\n```terraform\n# Declare the data source\ndata \"aws_availability_zones\" \"available\" {\n  state = \"available\"\n}\n\n# e.g., Create subnets in the first two available availability zones\n\nresource \"aws_subnet\" \"primary\" {\n  availability_zone = data.aws_availability_zones.available.names[0]\n\n  # ...\n}\n\nresource \"aws_subnet\" \"secondary\" {\n  availability_zone = data.aws_availability_zones.available.names[1]\n\n  # ...\n}\n```\n\n### By Filter\n\nAll Local Zones (regardless of opt-in status):\n\n```terraform\ndata \"aws_availability_zones\" \"example\" {\n  all_availability_zones = true\n\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"not-opted-in\", \"opted-in\"]\n  }\n}\n```\n\nOnly Availability Zones (no Local Zones):\n\n```terraform\ndata \"aws_availability_zones\" \"example\" {\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"opt-in-not-required\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `all_availability_zones` - (Optional) Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `exclude_names` - (Optional) List of Availability Zone names to exclude.\n* `exclude_zone_ids` - (Optional) List of Availability Zone IDs to exclude.\n* `state` - (Optional) Allows to filter list of Availability Zones based on their\ncurrent state. Can be either `\"available\"`, `\"information\"`, `\"impaired\"` or\n`\"unavailable\"`. By default the list includes a complete set of Availability Zones\nto which the underlying AWS account has access, regardless of their state.\n\n### filter Configuration Block\n\nThe `filter` configuration block supports the following arguments:\n\n* `name` - (Required) Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `group_names` A set of the Availability Zone Group names. For Availability Zones, this is the same value as the Region name. For Local Zones, the name of the associated group, for example `us-west-2-lax-1`.\n* `id` - Region of the Availability Zones.\n* `names` - List of the Availability Zone names available to the account.\n* `zone_ids` - List of the Availability Zone IDs available to the account.\n\nNote that the indexes of Availability Zone names and IDs correspond.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `read` - (Default `20m`)\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/availability_zones"
  },
  {
    "name": "aws_backup_framework",
    "type": "data_source",
    "description": "subcategory: \"Backup\" layout: \"aws\" page_title: \"AWS: aws_backup_framework\"",
    "example": "data \"aws_backup_framework\" \"example\" {\n  name = \"tf_example_backup_framework_name\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Backup framework name.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the backup framework.\n* `control` - One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.\n* `creation_time` - Date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).\n* `deployment_status` - Deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`| `FAILED`.\n* `description` - Description of the framework.\n* `id` - ID of the framework.\n* `status` - Framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are: `ACTIVE`, `PARTIALLY_ACTIVE`, `INACTIVE`, `UNAVAILABLE`. For more information refer to the [AWS documentation for Framework Status](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_DescribeFramework.html#Backup-DescribeFramework-response-FrameworkStatus)\n* `tags` - Metadata that helps organize the frameworks you create.\n\n### Control Attributes\n\n`control` has the following attributes:\n\n* `input_parameter` - One or more input parameter blocks. An example of a control with two parameters is: \"backup plan frequency is at least daily and the retention period is at least 1 year\". The first parameter is daily. The second parameter is 1 year. Detailed below.\n* `name` - Name of a control.\n* `scope` - Scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans. Detailed below.\n\n### Input Parameter Attributes\n\n`input_parameter` has the following attributes:\n\n* `name` - Name of a parameter, for example, BackupPlanFrequency.\n* `value` - Value of parameter, for example, hourly.\n\n### Scope Attributes\n\n`scope` has the following attributes:\n\n* `compliance_resource_ids` - The ID of the only AWS resource that you want your control scope to contain.\n* `compliance_resource_types` - Describes whether the control scope includes one or more types of resources, such as EFS or RDS.\n* `tags` - Tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.\n",
    "full_text": "---\nsubcategory: \"Backup\"\nlayout: \"aws\"\npage_title: \"AWS: aws_backup_framework\"\ndescription: |-\n  Provides details about an AWS Backup Framework.\n---\n\n# Data Source: aws_backup_framework\n\nUse this data source to get information on an existing backup framework.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_framework\" \"example\" {\n  name = \"tf_example_backup_framework_name\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Backup framework name.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the backup framework.\n* `control` - One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.\n* `creation_time` - Date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).\n* `deployment_status` - Deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`| `FAILED`.\n* `description` - Description of the framework.\n* `id` - ID of the framework.\n* `status` - Framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are: `ACTIVE`, `PARTIALLY_ACTIVE`, `INACTIVE`, `UNAVAILABLE`. For more information refer to the [AWS documentation for Framework Status](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_DescribeFramework.html#Backup-DescribeFramework-response-FrameworkStatus)\n* `tags` - Metadata that helps organize the frameworks you create.\n\n### Control Attributes\n\n`control` has the following attributes:\n\n* `input_parameter` - One or more input parameter blocks. An example of a control with two parameters is: \"backup plan frequency is at least daily and the retention period is at least 1 year\". The first parameter is daily. The second parameter is 1 year. Detailed below.\n* `name` - Name of a control.\n* `scope` - Scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans. Detailed below.\n\n### Input Parameter Attributes\n\n`input_parameter` has the following attributes:\n\n* `name` - Name of a parameter, for example, BackupPlanFrequency.\n* `value` - Value of parameter, for example, hourly.\n\n### Scope Attributes\n\n`scope` has the following attributes:\n\n* `compliance_resource_ids` - The ID of the only AWS resource that you want your control scope to contain.\n* `compliance_resource_types` - Describes whether the control scope includes one or more types of resources, such as EFS or RDS.\n* `tags` - Tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/backup_framework"
  },
  {
    "name": "aws_backup_plan",
    "type": "data_source",
    "description": "subcategory: \"Backup\" layout: \"aws\" page_title: \"AWS: aws_backup_plan\"",
    "example": "data \"aws_backup_plan\" \"example\" {\n  plan_id = \"tf_example_backup_plan_id\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `plan_id` - (Required) Backup plan ID.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the backup plan.\n* `name` - Display name of a backup plan.\n* `rule` - Rules of a backup plan.\n* `tags` - Metadata that you can assign to help organize the plans you create.\n* `version` - Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.\n",
    "full_text": "---\nsubcategory: \"Backup\"\nlayout: \"aws\"\npage_title: \"AWS: aws_backup_plan\"\ndescription: |-\n  Provides details about an AWS Backup plan.\n---\n\n# Data Source: aws_backup_plan\n\nUse this data source to get information on an existing backup plan.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_plan\" \"example\" {\n  plan_id = \"tf_example_backup_plan_id\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `plan_id` - (Required) Backup plan ID.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the backup plan.\n* `name` - Display name of a backup plan.\n* `rule` - Rules of a backup plan.\n* `tags` - Metadata that you can assign to help organize the plans you create.\n* `version` - Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/backup_plan"
  },
  {
    "name": "aws_backup_report_plan",
    "type": "data_source",
    "description": "subcategory: \"Backup\" layout: \"aws\" page_title: \"AWS: aws_backup_report_plan\"",
    "example": "data \"aws_backup_report_plan\" \"example\" {\n  name = \"tf_example_backup_report_plan_name\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Backup report plan name.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the backup report plan.\n* `creation_time` - Date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).\n* `deployment_status` - Deployment status of a report plan. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`.\n* `description` - Description of the report plan.\n* `id` - ID of the report plan.\n* `report_delivery_channel` - An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.\n* `report_setting` - An object that identifies the report template for the report. Reports are built using a report template. Detailed below.\n* `tags` - Metadata that you can assign to help organize the report plans you create.\n\n### Report Delivery Channel Attributes\n\n`report_delivery_channel` has the following attributes:\n\n* `formats` - List of the format of your reports: CSV, JSON, or both.\n* `s3_bucket_name` - Unique name of the S3 bucket that receives your reports.\n* `s3_key_prefix` - Prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name.\n\n### Report Setting Attributes\n\n`report_setting` has the following attributes:\n\n* `accounts` - (Optional) Specifies the list of accounts a report covers.\n* `framework_arns` - ARNs of the frameworks a report covers.\n* `number_of_frameworks` - Specifies the number of frameworks a report covers.\n* `organization_units` - (Optional) Specifies the list of Organizational Units a report covers.\n* `regions` - (Optional) Specifies the list of regions a report covers.\n* `report_template` - Identifies the report template for the report. Reports are built using a report template.\n",
    "full_text": "---\nsubcategory: \"Backup\"\nlayout: \"aws\"\npage_title: \"AWS: aws_backup_report_plan\"\ndescription: |-\n  Provides details about an AWS Backup Report Plan.\n---\n\n# Data Source: aws_backup_report_plan\n\nUse this data source to get information on an existing backup report plan.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_report_plan\" \"example\" {\n  name = \"tf_example_backup_report_plan_name\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Backup report plan name.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the backup report plan.\n* `creation_time` - Date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).\n* `deployment_status` - Deployment status of a report plan. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`.\n* `description` - Description of the report plan.\n* `id` - ID of the report plan.\n* `report_delivery_channel` - An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.\n* `report_setting` - An object that identifies the report template for the report. Reports are built using a report template. Detailed below.\n* `tags` - Metadata that you can assign to help organize the report plans you create.\n\n### Report Delivery Channel Attributes\n\n`report_delivery_channel` has the following attributes:\n\n* `formats` - List of the format of your reports: CSV, JSON, or both.\n* `s3_bucket_name` - Unique name of the S3 bucket that receives your reports.\n* `s3_key_prefix` - Prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name.\n\n### Report Setting Attributes\n\n`report_setting` has the following attributes:\n\n* `accounts` - (Optional) Specifies the list of accounts a report covers.\n* `framework_arns` - ARNs of the frameworks a report covers.\n* `number_of_frameworks` - Specifies the number of frameworks a report covers.\n* `organization_units` - (Optional) Specifies the list of Organizational Units a report covers.\n* `regions` - (Optional) Specifies the list of regions a report covers.\n* `report_template` - Identifies the report template for the report. Reports are built using a report template.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/backup_report_plan"
  },
  {
    "name": "aws_backup_selection",
    "type": "data_source",
    "description": "subcategory: \"Backup\" layout: \"aws\" page_title: \"AWS: aws_backup_selection\"",
    "example": "data \"aws_backup_selection\" \"example\" {\n  plan_id      = data.aws_backup_plan.example.id\n  selection_id = \"selection-id-example\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `plan_id` - (Required) Backup plan ID associated with the selection of resources.\n* `selection_id` - (Required) Backup selection ID.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `name` - Display name of a resource selection document.\n* `iam_role_arn` - ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.\n* `resources` - An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan..\n",
    "full_text": "---\nsubcategory: \"Backup\"\nlayout: \"aws\"\npage_title: \"AWS: aws_backup_selection\"\ndescription: |-\n  Provides details about an AWS Backup selection.\n---\n\n# Data Source: aws_backup_selection\n\nUse this data source to get information on an existing backup selection.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_selection\" \"example\" {\n  plan_id      = data.aws_backup_plan.example.id\n  selection_id = \"selection-id-example\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `plan_id` - (Required) Backup plan ID associated with the selection of resources.\n* `selection_id` - (Required) Backup selection ID.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `name` - Display name of a resource selection document.\n* `iam_role_arn` - ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.\n* `resources` - An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan..\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/backup_selection"
  },
  {
    "name": "aws_backup_vault",
    "type": "data_source",
    "description": "subcategory: \"Backup\" layout: \"aws\" page_title: \"AWS: aws_backup_vault\"",
    "example": "data \"aws_backup_vault\" \"example\" {\n  name = \"example_backup_vault\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the backup vault.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the vault.\n* `kms_key_arn` - Server-side encryption key that is used to protect your backups.\n* `recovery_points` - Number of recovery points that are stored in a backup vault.\n* `tags` - Metadata that you can assign to help organize the resources that you create.\n",
    "full_text": "---\nsubcategory: \"Backup\"\nlayout: \"aws\"\npage_title: \"AWS: aws_backup_vault\"\ndescription: |-\n  Provides details about an AWS Backup vault.\n---\n\n# Data Source: aws_backup_vault\n\nUse this data source to get information on an existing backup vault.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_vault\" \"example\" {\n  name = \"example_backup_vault\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the backup vault.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the vault.\n* `kms_key_arn` - Server-side encryption key that is used to protect your backups.\n* `recovery_points` - Number of recovery points that are stored in a backup vault.\n* `tags` - Metadata that you can assign to help organize the resources that you create.\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/backup_vault"
  },
  {
    "name": "aws_batch_compute_environment",
    "type": "data_source",
    "description": "subcategory: \"Batch\" layout: \"aws\" page_title: \"AWS: aws_batch_compute_environment\"",
    "example": "data \"aws_batch_compute_environment\" \"batch-mongo\" {\n  name = \"batch-mongo-production\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the Batch Compute Environment\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the compute environment.\n* `ecs_cluster_arn` - ARN of the underlying Amazon ECS cluster used by the compute environment.\n* `service_role` - ARN of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.\n* `type` - Type of the compute environment (for example, `MANAGED` or `UNMANAGED`).\n* `status` - Current status of the compute environment (for example, `CREATING` or `VALID`).\n* `status_reason` - Short, human-readable string to provide additional details about the current status of the compute environment.\n* `state` - State of the compute environment (for example, `ENABLED` or `DISABLED`). If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.\n* `update_policy` - Specifies the infrastructure update policy for the compute environment.\n* `tags` - Key-value map of resource tags\n",
    "full_text": "---\nsubcategory: \"Batch\"\nlayout: \"aws\"\npage_title: \"AWS: aws_batch_compute_environment\"\ndescription: |-\n    Provides details about a batch compute environment\n---\n\n# Data Source: aws_batch_compute_environment\n\nThe Batch Compute Environment data source allows access to details of a specific\ncompute environment within AWS Batch.\n\n## Example Usage\n\n```terraform\ndata \"aws_batch_compute_environment\" \"batch-mongo\" {\n  name = \"batch-mongo-production\"\n}\n```\n\n## Argument Reference\n\nThis data source supports the following arguments:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `name` - (Required) Name of the Batch Compute Environment\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the compute environment.\n* `ecs_cluster_arn` - ARN of the underlying Amazon ECS cluster used by the compute environment.\n* `service_role` - ARN of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.\n* `type` - Type of the compute environment (for example, `MANAGED` or `UNMANAGED`).\n* `status` - Current status of the compute environment (for example, `CREATING` or `VALID`).\n* `status_reason` - Short, human-readable string to provide additional details about the current status of the compute environment.\n* `state` - State of the compute environment (for example, `ENABLED` or `DISABLED`). If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.\n* `update_policy` - Specifies the infrastructure update policy for the compute environment.\n* `tags` - Key-value map of resource tags\n",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/batch_compute_environment"
  },
  {
    "name": "aws_batch_job_definition",
    "type": "data_source",
    "description": "subcategory: \"Batch\" layout: \"aws\" page_title: \"AWS: aws_batch_job_definition\"",
    "example": "data \"aws_batch_job_definition\" \"arn\" {\n  arn = \"arn:aws:batch:us-east-1:012345678910:job-definition/example\"\n}\n```\n\n### Lookup via Name\n",
    "full_text": "---\nsubcategory: \"Batch\"\nlayout: \"aws\"\npage_title: \"AWS: aws_batch_job_definition\"\ndescription: |-\n  Terraform data source for managing an AWS Batch Job Definition.\n---\n\n# Data Source: aws_batch_job_definition\n\nTerraform data source for managing an AWS Batch Job Definition.\n\n## Example Usage\n\n### Lookup via Arn\n\n```terraform\ndata \"aws_batch_job_definition\" \"arn\" {\n  arn = \"arn:aws:batch:us-east-1:012345678910:job-definition/example\"\n}\n```\n\n### Lookup via Name\n\n```terraform\ndata \"aws_batch_job_definition\" \"name\" {\n  name     = \"example\"\n  revision = 2\n}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).\n* `arn` - ARN of the Job Definition. Do not begin the description with \"An\", \"The\", \"Defines\", \"Indicates\", or \"Specifies,\" as these are verbose. In other words, \"Indicates the amount of storage,\" can be rewritten as \"Amount of storage,\" without losing any information.\n* `revision` - The revision of the job definition.\n* `name` - The name of the job definition to register. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).\n* `status` - The status of the job definition.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `container_orchestration_type` - The orchestration type of the compute environment.\n* `scheduling_priority` - The scheduling priority for jobs that are submitted with this job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority.\n* `id` - The ARN\n* `eks_properties` - An [object](#eks_properties) with various properties that are specific to Amazon EKS based jobs. This must not be specified for Amazon ECS based job definitions.\n* `node_properties` - An [object](#node_properties) with various properties specific to multi-node parallel jobs. If you specify node properties for a job, it becomes a multi-node parallel job. For more information, see Multi-node Parallel Jobs in the AWS Batch User Guide. If the job definition's type parameter is container, then you must specify either containerProperties or nodeProperties.\n* `retry_strategy` - The [retry strategy](#retry_strategy) to use for failed jobs that are submitted with this job definition. Any retry strategy that's specified during a SubmitJob operation overrides the retry strategy defined here. If a job is terminated due to a timeout, it isn't retried.\n* `timeout` - The [timeout configuration](#timeout) for jobs that are submitted with this job definition, after which AWS Batch terminates your jobs if they have not finished. If a job is terminated due to a timeout, it isn't retried. The minimum value for the timeout is 60 seconds.\n\n### eks_properties\n\n* `pod_properties` - The [properties](#pod_properties) for the Kubernetes pod resources of a job.\n\n### pod_properties\n\n* `containers` - The properties of the container that's used on the Amazon EKS pod. See [containers](#container) below.\n* `dns_policy` - The DNS policy for the pod. The default value is ClusterFirst. If the hostNetwork parameter is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node.\n* `host_network` - Indicates if the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.\n* `init_containers` - Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See [containers](#container) below.\n* `service_account_name` - The name of the service account that's used to run the pod.\n* `share_process_namespace` - (Optional) Indicates if the processes in a container are shared, or visible, to other containers in the same pod.\n* `metadata` - [Metadata](#eks_metadata) about the Kubernetes pod.\n* `volumes` -  Specifies the volumes for a job definition that uses Amazon EKS resources. Array of [EksVolume](#eks_volumes) objects.\n\n### eks_container\n\n* `args` - An array of arguments to the entrypoint\n* `commands` - The entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is",
    "url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/batch_job_definition"
  }
]